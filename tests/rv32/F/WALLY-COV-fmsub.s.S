///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/F//WALLY-COV-fmsub.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.254640
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fmsub.s f19, f8, f30, f10 # perform first operation
fmsub.s f20, f19, f19, f3 # perform second operation

# Testcase cmp_gpr_hazard raw test
fmsub.s f12, f23, f3, f10 # perform first operation
fmsub.s f27, f24, f12, f21 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmsub.s f5, f9, f3, f24 # perform first operation
fmsub.s f5, f26, f4, f24 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmsub.s f7, f20, f6, f1 # perform first operation
fmsub.s f7, f18, f16, f12 # perform second operation

# Testcase cmp_gpr_hazard war test
fmsub.s f22, f27, f28, f20 # perform first operation
fmsub.s f27, f1, f16, f9 # perform second operation

# Testcase cmp_gpr_hazard war test
fmsub.s f12, f8, f23, f9 # perform first operation
fmsub.s f23, f14, f28, f3 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0x41087b1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4450a8d # load x3 with value 0xb4450a8d
sw x3, 0(x2) # store 0xb4450a8d in memory
flw f0, 0(x2) # load 0xb4450a8d from memory into f0
li x3, 0x168595ad # load x3 with value 0x168595ad
sw x3, 0(x2) # store 0x168595ad in memory
flw f31, 0(x2) # load 0x168595ad from memory into f31
li x3, 0x0fd9033d # load x3 with value 0x0fd9033d
sw x3, 0(x2) # store 0x0fd9033d in memory
flw f7, 0(x2) # load 0x0fd9033d from memory into f7
fmsub.s f0, f0, f31, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0xb12d17e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x737dbbf1 # load x3 with value 0x737dbbf1
sw x3, 0(x2) # store 0x737dbbf1 in memory
flw f1, 0(x2) # load 0x737dbbf1 from memory into f1
li x3, 0x6e1dca5a # load x3 with value 0x6e1dca5a
sw x3, 0(x2) # store 0x6e1dca5a in memory
flw f24, 0(x2) # load 0x6e1dca5a from memory into f24
li x3, 0x210bbd2f # load x3 with value 0x210bbd2f
sw x3, 0(x2) # store 0x210bbd2f in memory
flw f14, 0(x2) # load 0x210bbd2f from memory into f14
fmsub.s f1, f1, f24, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0xf9331c33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x63b90e57 # load x3 with value 0x63b90e57
sw x3, 0(x2) # store 0x63b90e57 in memory
flw f2, 0(x2) # load 0x63b90e57 from memory into f2
li x3, 0xc3a21c2d # load x3 with value 0xc3a21c2d
sw x3, 0(x2) # store 0xc3a21c2d in memory
flw f7, 0(x2) # load 0xc3a21c2d from memory into f7
li x3, 0x60b7d1eb # load x3 with value 0x60b7d1eb
sw x3, 0(x2) # store 0x60b7d1eb in memory
flw f2, 0(x2) # load 0x60b7d1eb from memory into f2
fmsub.s f2, f2, f7, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0xda7637e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3660bcdd # load x3 with value 0x3660bcdd
sw x3, 0(x2) # store 0x3660bcdd in memory
flw f3, 0(x2) # load 0x3660bcdd from memory into f3
li x3, 0xfbd61e4a # load x3 with value 0xfbd61e4a
sw x3, 0(x2) # store 0xfbd61e4a in memory
flw f6, 0(x2) # load 0xfbd61e4a from memory into f6
li x3, 0xc7e84562 # load x3 with value 0xc7e84562
sw x3, 0(x2) # store 0xc7e84562 in memory
flw f24, 0(x2) # load 0xc7e84562 from memory into f24
fmsub.s f3, f3, f6, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xbc0b9b47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x483c92d5 # load x3 with value 0x483c92d5
sw x3, 0(x2) # store 0x483c92d5 in memory
flw f4, 0(x2) # load 0x483c92d5 from memory into f4
li x3, 0x78e2ab7c # load x3 with value 0x78e2ab7c
sw x3, 0(x2) # store 0x78e2ab7c in memory
flw f13, 0(x2) # load 0x78e2ab7c from memory into f13
li x3, 0x9d0ec116 # load x3 with value 0x9d0ec116
sw x3, 0(x2) # store 0x9d0ec116 in memory
flw f28, 0(x2) # load 0x9d0ec116 from memory into f28
fmsub.s f4, f4, f13, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x38347a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8dffb892 # load x3 with value 0x8dffb892
sw x3, 0(x2) # store 0x8dffb892 in memory
flw f5, 0(x2) # load 0x8dffb892 from memory into f5
li x3, 0x7936d95a # load x3 with value 0x7936d95a
sw x3, 0(x2) # store 0x7936d95a in memory
flw f9, 0(x2) # load 0x7936d95a from memory into f9
li x3, 0xc96df4e8 # load x3 with value 0xc96df4e8
sw x3, 0(x2) # store 0xc96df4e8 in memory
flw f22, 0(x2) # load 0xc96df4e8 from memory into f22
fmsub.s f5, f5, f9, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0x169a93aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0295be4 # load x3 with value 0xd0295be4
sw x3, 0(x2) # store 0xd0295be4 in memory
flw f6, 0(x2) # load 0xd0295be4 from memory into f6
li x3, 0x2dbe37e2 # load x3 with value 0x2dbe37e2
sw x3, 0(x2) # store 0x2dbe37e2 in memory
flw f3, 0(x2) # load 0x2dbe37e2 from memory into f3
li x3, 0x0716cfc5 # load x3 with value 0x0716cfc5
sw x3, 0(x2) # store 0x0716cfc5 in memory
flw f11, 0(x2) # load 0x0716cfc5 from memory into f11
fmsub.s f6, f6, f3, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x8f64ae74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf81980ab # load x3 with value 0xf81980ab
sw x3, 0(x2) # store 0xf81980ab in memory
flw f7, 0(x2) # load 0xf81980ab from memory into f7
li x3, 0xce634a92 # load x3 with value 0xce634a92
sw x3, 0(x2) # store 0xce634a92 in memory
flw f3, 0(x2) # load 0xce634a92 from memory into f3
li x3, 0xd725b8a3 # load x3 with value 0xd725b8a3
sw x3, 0(x2) # store 0xd725b8a3 in memory
flw f31, 0(x2) # load 0xd725b8a3 from memory into f31
fmsub.s f7, f7, f3, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x10d0458a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x720be214 # load x3 with value 0x720be214
sw x3, 0(x2) # store 0x720be214 in memory
flw f8, 0(x2) # load 0x720be214 from memory into f8
li x3, 0xe2ee1871 # load x3 with value 0xe2ee1871
sw x3, 0(x2) # store 0xe2ee1871 in memory
flw f19, 0(x2) # load 0xe2ee1871 from memory into f19
li x3, 0x8f8ac2b5 # load x3 with value 0x8f8ac2b5
sw x3, 0(x2) # store 0x8f8ac2b5 in memory
flw f21, 0(x2) # load 0x8f8ac2b5 from memory into f21
fmsub.s f8, f8, f19, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x2a6a901b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x063788fc # load x3 with value 0x063788fc
sw x3, 0(x2) # store 0x063788fc in memory
flw f9, 0(x2) # load 0x063788fc from memory into f9
li x3, 0x1a93d48b # load x3 with value 0x1a93d48b
sw x3, 0(x2) # store 0x1a93d48b in memory
flw f20, 0(x2) # load 0x1a93d48b from memory into f20
li x3, 0xf8145fd6 # load x3 with value 0xf8145fd6
sw x3, 0(x2) # store 0xf8145fd6 in memory
flw f30, 0(x2) # load 0xf8145fd6 from memory into f30
fmsub.s f9, f9, f20, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xc30334b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6fd02967 # load x3 with value 0x6fd02967
sw x3, 0(x2) # store 0x6fd02967 in memory
flw f10, 0(x2) # load 0x6fd02967 from memory into f10
li x3, 0x9ea8bc7e # load x3 with value 0x9ea8bc7e
sw x3, 0(x2) # store 0x9ea8bc7e in memory
flw f12, 0(x2) # load 0x9ea8bc7e from memory into f12
li x3, 0x073b1f1a # load x3 with value 0x073b1f1a
sw x3, 0(x2) # store 0x073b1f1a in memory
flw f26, 0(x2) # load 0x073b1f1a from memory into f26
fmsub.s f10, f10, f12, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x7c2fd5d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa09d01b2 # load x3 with value 0xa09d01b2
sw x3, 0(x2) # store 0xa09d01b2 in memory
flw f11, 0(x2) # load 0xa09d01b2 from memory into f11
li x3, 0x73824df8 # load x3 with value 0x73824df8
sw x3, 0(x2) # store 0x73824df8 in memory
flw f18, 0(x2) # load 0x73824df8 from memory into f18
li x3, 0x829edba1 # load x3 with value 0x829edba1
sw x3, 0(x2) # store 0x829edba1 in memory
flw f17, 0(x2) # load 0x829edba1 from memory into f17
fmsub.s f11, f11, f18, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x6379f9e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14237f12 # load x3 with value 0x14237f12
sw x3, 0(x2) # store 0x14237f12 in memory
flw f12, 0(x2) # load 0x14237f12 from memory into f12
li x3, 0xc03e6916 # load x3 with value 0xc03e6916
sw x3, 0(x2) # store 0xc03e6916 in memory
flw f9, 0(x2) # load 0xc03e6916 from memory into f9
li x3, 0x3e85b2b2 # load x3 with value 0x3e85b2b2
sw x3, 0(x2) # store 0x3e85b2b2 in memory
flw f4, 0(x2) # load 0x3e85b2b2 from memory into f4
fmsub.s f12, f12, f9, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x5b4318f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa9af9356 # load x3 with value 0xa9af9356
sw x3, 0(x2) # store 0xa9af9356 in memory
flw f13, 0(x2) # load 0xa9af9356 from memory into f13
li x3, 0x43d8a0ed # load x3 with value 0x43d8a0ed
sw x3, 0(x2) # store 0x43d8a0ed in memory
flw f6, 0(x2) # load 0x43d8a0ed from memory into f6
li x3, 0x9a7dd910 # load x3 with value 0x9a7dd910
sw x3, 0(x2) # store 0x9a7dd910 in memory
flw f13, 0(x2) # load 0x9a7dd910 from memory into f13
fmsub.s f13, f13, f6, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x4e9a3537 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf9c8c3df # load x3 with value 0xf9c8c3df
sw x3, 0(x2) # store 0xf9c8c3df in memory
flw f14, 0(x2) # load 0xf9c8c3df from memory into f14
li x3, 0xf06ee24c # load x3 with value 0xf06ee24c
sw x3, 0(x2) # store 0xf06ee24c in memory
flw f16, 0(x2) # load 0xf06ee24c from memory into f16
li x3, 0x28e4451f # load x3 with value 0x28e4451f
sw x3, 0(x2) # store 0x28e4451f in memory
flw f12, 0(x2) # load 0x28e4451f from memory into f12
fmsub.s f14, f14, f16, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x2ad92d4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21856182 # load x3 with value 0x21856182
sw x3, 0(x2) # store 0x21856182 in memory
flw f15, 0(x2) # load 0x21856182 from memory into f15
li x3, 0x04a1c344 # load x3 with value 0x04a1c344
sw x3, 0(x2) # store 0x04a1c344 in memory
flw f2, 0(x2) # load 0x04a1c344 from memory into f2
li x3, 0xc22a3f65 # load x3 with value 0xc22a3f65
sw x3, 0(x2) # store 0xc22a3f65 in memory
flw f30, 0(x2) # load 0xc22a3f65 from memory into f30
fmsub.s f15, f15, f2, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xb068979d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdcdb18fb # load x3 with value 0xdcdb18fb
sw x3, 0(x2) # store 0xdcdb18fb in memory
flw f16, 0(x2) # load 0xdcdb18fb from memory into f16
li x3, 0x50d306a1 # load x3 with value 0x50d306a1
sw x3, 0(x2) # store 0x50d306a1 in memory
flw f31, 0(x2) # load 0x50d306a1 from memory into f31
li x3, 0x1d6e8e45 # load x3 with value 0x1d6e8e45
sw x3, 0(x2) # store 0x1d6e8e45 in memory
flw f22, 0(x2) # load 0x1d6e8e45 from memory into f22
fmsub.s f16, f16, f31, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0xadc527fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x967f115a # load x3 with value 0x967f115a
sw x3, 0(x2) # store 0x967f115a in memory
flw f17, 0(x2) # load 0x967f115a from memory into f17
li x3, 0xe7ad7bb4 # load x3 with value 0xe7ad7bb4
sw x3, 0(x2) # store 0xe7ad7bb4 in memory
flw f13, 0(x2) # load 0xe7ad7bb4 from memory into f13
li x3, 0x42bdd7b6 # load x3 with value 0x42bdd7b6
sw x3, 0(x2) # store 0x42bdd7b6 in memory
flw f6, 0(x2) # load 0x42bdd7b6 from memory into f6
fmsub.s f17, f17, f13, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x65859dca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x582ce0e8 # load x3 with value 0x582ce0e8
sw x3, 0(x2) # store 0x582ce0e8 in memory
flw f18, 0(x2) # load 0x582ce0e8 from memory into f18
li x3, 0x70a8cbd9 # load x3 with value 0x70a8cbd9
sw x3, 0(x2) # store 0x70a8cbd9 in memory
flw f26, 0(x2) # load 0x70a8cbd9 from memory into f26
li x3, 0x28e80322 # load x3 with value 0x28e80322
sw x3, 0(x2) # store 0x28e80322 in memory
flw f13, 0(x2) # load 0x28e80322 from memory into f13
fmsub.s f18, f18, f26, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x88695cfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x17f5ef1a # load x3 with value 0x17f5ef1a
sw x3, 0(x2) # store 0x17f5ef1a in memory
flw f19, 0(x2) # load 0x17f5ef1a from memory into f19
li x3, 0xa8c68120 # load x3 with value 0xa8c68120
sw x3, 0(x2) # store 0xa8c68120 in memory
flw f8, 0(x2) # load 0xa8c68120 from memory into f8
li x3, 0x6cc0c48a # load x3 with value 0x6cc0c48a
sw x3, 0(x2) # store 0x6cc0c48a in memory
flw f30, 0(x2) # load 0x6cc0c48a from memory into f30
fmsub.s f19, f19, f8, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xd935e4a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9cdbee24 # load x3 with value 0x9cdbee24
sw x3, 0(x2) # store 0x9cdbee24 in memory
flw f20, 0(x2) # load 0x9cdbee24 from memory into f20
li x3, 0xd8b880bb # load x3 with value 0xd8b880bb
sw x3, 0(x2) # store 0xd8b880bb in memory
flw f7, 0(x2) # load 0xd8b880bb from memory into f7
li x3, 0x5fecd24e # load x3 with value 0x5fecd24e
sw x3, 0(x2) # store 0x5fecd24e in memory
flw f22, 0(x2) # load 0x5fecd24e from memory into f22
fmsub.s f20, f20, f7, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x1c1cccdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5f2110c3 # load x3 with value 0x5f2110c3
sw x3, 0(x2) # store 0x5f2110c3 in memory
flw f21, 0(x2) # load 0x5f2110c3 from memory into f21
li x3, 0xdbbd9abe # load x3 with value 0xdbbd9abe
sw x3, 0(x2) # store 0xdbbd9abe in memory
flw f23, 0(x2) # load 0xdbbd9abe from memory into f23
li x3, 0xd29933a8 # load x3 with value 0xd29933a8
sw x3, 0(x2) # store 0xd29933a8 in memory
flw f2, 0(x2) # load 0xd29933a8 from memory into f2
fmsub.s f21, f21, f23, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xf9dec49e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60dad469 # load x3 with value 0x60dad469
sw x3, 0(x2) # store 0x60dad469 in memory
flw f22, 0(x2) # load 0x60dad469 from memory into f22
li x3, 0x82372c9a # load x3 with value 0x82372c9a
sw x3, 0(x2) # store 0x82372c9a in memory
flw f9, 0(x2) # load 0x82372c9a from memory into f9
li x3, 0xfc287da8 # load x3 with value 0xfc287da8
sw x3, 0(x2) # store 0xfc287da8 in memory
flw f5, 0(x2) # load 0xfc287da8 from memory into f5
fmsub.s f22, f22, f9, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x766a8f1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x266b5e6d # load x3 with value 0x266b5e6d
sw x3, 0(x2) # store 0x266b5e6d in memory
flw f23, 0(x2) # load 0x266b5e6d from memory into f23
li x3, 0x1ea0f4fa # load x3 with value 0x1ea0f4fa
sw x3, 0(x2) # store 0x1ea0f4fa in memory
flw f18, 0(x2) # load 0x1ea0f4fa from memory into f18
li x3, 0xb1d977e8 # load x3 with value 0xb1d977e8
sw x3, 0(x2) # store 0xb1d977e8 in memory
flw f2, 0(x2) # load 0xb1d977e8 from memory into f2
fmsub.s f23, f23, f18, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x80867ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd088780a # load x3 with value 0xd088780a
sw x3, 0(x2) # store 0xd088780a in memory
flw f24, 0(x2) # load 0xd088780a from memory into f24
li x3, 0xd57dafda # load x3 with value 0xd57dafda
sw x3, 0(x2) # store 0xd57dafda in memory
flw f29, 0(x2) # load 0xd57dafda from memory into f29
li x3, 0xd16d9549 # load x3 with value 0xd16d9549
sw x3, 0(x2) # store 0xd16d9549 in memory
flw f27, 0(x2) # load 0xd16d9549 from memory into f27
fmsub.s f24, f24, f29, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x998a281f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f6acb90 # load x3 with value 0x2f6acb90
sw x3, 0(x2) # store 0x2f6acb90 in memory
flw f25, 0(x2) # load 0x2f6acb90 from memory into f25
li x3, 0x5380d576 # load x3 with value 0x5380d576
sw x3, 0(x2) # store 0x5380d576 in memory
flw f19, 0(x2) # load 0x5380d576 from memory into f19
li x3, 0x7ad8b2e1 # load x3 with value 0x7ad8b2e1
sw x3, 0(x2) # store 0x7ad8b2e1 in memory
flw f18, 0(x2) # load 0x7ad8b2e1 from memory into f18
fmsub.s f25, f25, f19, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xef734c41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73f84d71 # load x3 with value 0x73f84d71
sw x3, 0(x2) # store 0x73f84d71 in memory
flw f26, 0(x2) # load 0x73f84d71 from memory into f26
li x3, 0x3df5873a # load x3 with value 0x3df5873a
sw x3, 0(x2) # store 0x3df5873a in memory
flw f11, 0(x2) # load 0x3df5873a from memory into f11
li x3, 0x0a0c7817 # load x3 with value 0x0a0c7817
sw x3, 0(x2) # store 0x0a0c7817 in memory
flw f2, 0(x2) # load 0x0a0c7817 from memory into f2
fmsub.s f26, f26, f11, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0xb2573474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0e2b83bc # load x3 with value 0x0e2b83bc
sw x3, 0(x2) # store 0x0e2b83bc in memory
flw f27, 0(x2) # load 0x0e2b83bc from memory into f27
li x3, 0xa0ed1f8d # load x3 with value 0xa0ed1f8d
sw x3, 0(x2) # store 0xa0ed1f8d in memory
flw f4, 0(x2) # load 0xa0ed1f8d from memory into f4
li x3, 0x2075a779 # load x3 with value 0x2075a779
sw x3, 0(x2) # store 0x2075a779 in memory
flw f7, 0(x2) # load 0x2075a779 from memory into f7
fmsub.s f27, f27, f4, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xc504e22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4ab4cde8 # load x3 with value 0x4ab4cde8
sw x3, 0(x2) # store 0x4ab4cde8 in memory
flw f28, 0(x2) # load 0x4ab4cde8 from memory into f28
li x3, 0x115d6e6e # load x3 with value 0x115d6e6e
sw x3, 0(x2) # store 0x115d6e6e in memory
flw f6, 0(x2) # load 0x115d6e6e from memory into f6
li x3, 0x90809a15 # load x3 with value 0x90809a15
sw x3, 0(x2) # store 0x90809a15 in memory
flw f1, 0(x2) # load 0x90809a15 from memory into f1
fmsub.s f28, f28, f6, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xd81f0c1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7bb99b2f # load x3 with value 0x7bb99b2f
sw x3, 0(x2) # store 0x7bb99b2f in memory
flw f29, 0(x2) # load 0x7bb99b2f from memory into f29
li x3, 0xb13e4ac3 # load x3 with value 0xb13e4ac3
sw x3, 0(x2) # store 0xb13e4ac3 in memory
flw f5, 0(x2) # load 0xb13e4ac3 from memory into f5
li x3, 0x7e6d43b8 # load x3 with value 0x7e6d43b8
sw x3, 0(x2) # store 0x7e6d43b8 in memory
flw f18, 0(x2) # load 0x7e6d43b8 from memory into f18
fmsub.s f29, f29, f5, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0xf029fcc7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x586187e9 # load x3 with value 0x586187e9
sw x3, 0(x2) # store 0x586187e9 in memory
flw f30, 0(x2) # load 0x586187e9 from memory into f30
li x3, 0x8867367c # load x3 with value 0x8867367c
sw x3, 0(x2) # store 0x8867367c in memory
flw f31, 0(x2) # load 0x8867367c from memory into f31
li x3, 0xd0bfefe0 # load x3 with value 0xd0bfefe0
sw x3, 0(x2) # store 0xd0bfefe0 in memory
flw f10, 0(x2) # load 0xd0bfefe0 from memory into f10
fmsub.s f30, f30, f31, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xdf670641 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f9be3d0 # load x3 with value 0x2f9be3d0
sw x3, 0(x2) # store 0x2f9be3d0 in memory
flw f31, 0(x2) # load 0x2f9be3d0 from memory into f31
li x3, 0x639b128b # load x3 with value 0x639b128b
sw x3, 0(x2) # store 0x639b128b in memory
flw f28, 0(x2) # load 0x639b128b from memory into f28
li x3, 0x02d1cc4e # load x3 with value 0x02d1cc4e
sw x3, 0(x2) # store 0x02d1cc4e in memory
flw f14, 0(x2) # load 0x02d1cc4e from memory into f14
fmsub.s f31, f31, f28, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x7c89c524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x082f1cd0 # load x3 with value 0x082f1cd0
sw x3, 0(x2) # store 0x082f1cd0 in memory
flw f21, 0(x2) # load 0x082f1cd0 from memory into f21
li x3, 0xa80b6e68 # load x3 with value 0xa80b6e68
sw x3, 0(x2) # store 0xa80b6e68 in memory
flw f0, 0(x2) # load 0xa80b6e68 from memory into f0
li x3, 0xba19d242 # load x3 with value 0xba19d242
sw x3, 0(x2) # store 0xba19d242 in memory
flw f31, 0(x2) # load 0xba19d242 from memory into f31
fmsub.s f0, f21, f0, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x95798bff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62f98dfb # load x3 with value 0x62f98dfb
sw x3, 0(x2) # store 0x62f98dfb in memory
flw f20, 0(x2) # load 0x62f98dfb from memory into f20
li x3, 0x130caca9 # load x3 with value 0x130caca9
sw x3, 0(x2) # store 0x130caca9 in memory
flw f1, 0(x2) # load 0x130caca9 from memory into f1
li x3, 0x8559c8db # load x3 with value 0x8559c8db
sw x3, 0(x2) # store 0x8559c8db in memory
flw f8, 0(x2) # load 0x8559c8db from memory into f8
fmsub.s f1, f20, f1, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x61eeb1db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6678ad6f # load x3 with value 0x6678ad6f
sw x3, 0(x2) # store 0x6678ad6f in memory
flw f1, 0(x2) # load 0x6678ad6f from memory into f1
li x3, 0x14b4c5e9 # load x3 with value 0x14b4c5e9
sw x3, 0(x2) # store 0x14b4c5e9 in memory
flw f2, 0(x2) # load 0x14b4c5e9 from memory into f2
li x3, 0xefa6f6f8 # load x3 with value 0xefa6f6f8
sw x3, 0(x2) # store 0xefa6f6f8 in memory
flw f24, 0(x2) # load 0xefa6f6f8 from memory into f24
fmsub.s f2, f1, f2, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x95ff2ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x82e6d9b1 # load x3 with value 0x82e6d9b1
sw x3, 0(x2) # store 0x82e6d9b1 in memory
flw f1, 0(x2) # load 0x82e6d9b1 from memory into f1
li x3, 0x33c2b78e # load x3 with value 0x33c2b78e
sw x3, 0(x2) # store 0x33c2b78e in memory
flw f3, 0(x2) # load 0x33c2b78e from memory into f3
li x3, 0x596fcee0 # load x3 with value 0x596fcee0
sw x3, 0(x2) # store 0x596fcee0 in memory
flw f4, 0(x2) # load 0x596fcee0 from memory into f4
fmsub.s f3, f1, f3, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xc957fdcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf4ede009 # load x3 with value 0xf4ede009
sw x3, 0(x2) # store 0xf4ede009 in memory
flw f10, 0(x2) # load 0xf4ede009 from memory into f10
li x3, 0x84e5fa3c # load x3 with value 0x84e5fa3c
sw x3, 0(x2) # store 0x84e5fa3c in memory
flw f4, 0(x2) # load 0x84e5fa3c from memory into f4
li x3, 0xdd77c20b # load x3 with value 0xdd77c20b
sw x3, 0(x2) # store 0xdd77c20b in memory
flw f20, 0(x2) # load 0xdd77c20b from memory into f20
fmsub.s f4, f10, f4, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0x7622ce09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe2449b78 # load x3 with value 0xe2449b78
sw x3, 0(x2) # store 0xe2449b78 in memory
flw f18, 0(x2) # load 0xe2449b78 from memory into f18
li x3, 0x1f3e8be4 # load x3 with value 0x1f3e8be4
sw x3, 0(x2) # store 0x1f3e8be4 in memory
flw f5, 0(x2) # load 0x1f3e8be4 from memory into f5
li x3, 0xd5f8245c # load x3 with value 0xd5f8245c
sw x3, 0(x2) # store 0xd5f8245c in memory
flw f1, 0(x2) # load 0xd5f8245c from memory into f1
fmsub.s f5, f18, f5, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0xe531bd6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68c608b8 # load x3 with value 0x68c608b8
sw x3, 0(x2) # store 0x68c608b8 in memory
flw f28, 0(x2) # load 0x68c608b8 from memory into f28
li x3, 0xd8963708 # load x3 with value 0xd8963708
sw x3, 0(x2) # store 0xd8963708 in memory
flw f6, 0(x2) # load 0xd8963708 from memory into f6
li x3, 0xb7eac79a # load x3 with value 0xb7eac79a
sw x3, 0(x2) # store 0xb7eac79a in memory
flw f8, 0(x2) # load 0xb7eac79a from memory into f8
fmsub.s f6, f28, f6, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x72bfaacd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09d6218c # load x3 with value 0x09d6218c
sw x3, 0(x2) # store 0x09d6218c in memory
flw f19, 0(x2) # load 0x09d6218c from memory into f19
li x3, 0x1ad858b1 # load x3 with value 0x1ad858b1
sw x3, 0(x2) # store 0x1ad858b1 in memory
flw f7, 0(x2) # load 0x1ad858b1 from memory into f7
li x3, 0x10561614 # load x3 with value 0x10561614
sw x3, 0(x2) # store 0x10561614 in memory
flw f31, 0(x2) # load 0x10561614 from memory into f31
fmsub.s f7, f19, f7, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x77418286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d50cb3e # load x3 with value 0x0d50cb3e
sw x3, 0(x2) # store 0x0d50cb3e in memory
flw f3, 0(x2) # load 0x0d50cb3e from memory into f3
li x3, 0xb57afba9 # load x3 with value 0xb57afba9
sw x3, 0(x2) # store 0xb57afba9 in memory
flw f8, 0(x2) # load 0xb57afba9 from memory into f8
li x3, 0xec38da7b # load x3 with value 0xec38da7b
sw x3, 0(x2) # store 0xec38da7b in memory
flw f26, 0(x2) # load 0xec38da7b from memory into f26
fmsub.s f8, f3, f8, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x09479609 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09993ad0 # load x3 with value 0x09993ad0
sw x3, 0(x2) # store 0x09993ad0 in memory
flw f16, 0(x2) # load 0x09993ad0 from memory into f16
li x3, 0x07e61716 # load x3 with value 0x07e61716
sw x3, 0(x2) # store 0x07e61716 in memory
flw f9, 0(x2) # load 0x07e61716 from memory into f9
li x3, 0x9557b097 # load x3 with value 0x9557b097
sw x3, 0(x2) # store 0x9557b097 in memory
flw f24, 0(x2) # load 0x9557b097 from memory into f24
fmsub.s f9, f16, f9, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x81631252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0dca321b # load x3 with value 0x0dca321b
sw x3, 0(x2) # store 0x0dca321b in memory
flw f15, 0(x2) # load 0x0dca321b from memory into f15
li x3, 0x41ee605f # load x3 with value 0x41ee605f
sw x3, 0(x2) # store 0x41ee605f in memory
flw f10, 0(x2) # load 0x41ee605f from memory into f10
li x3, 0x90aec1ad # load x3 with value 0x90aec1ad
sw x3, 0(x2) # store 0x90aec1ad in memory
flw f30, 0(x2) # load 0x90aec1ad from memory into f30
fmsub.s f10, f15, f10, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x82e390a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x044f651a # load x3 with value 0x044f651a
sw x3, 0(x2) # store 0x044f651a in memory
flw f27, 0(x2) # load 0x044f651a from memory into f27
li x3, 0xd977c605 # load x3 with value 0xd977c605
sw x3, 0(x2) # store 0xd977c605 in memory
flw f11, 0(x2) # load 0xd977c605 from memory into f11
li x3, 0x44cca2d6 # load x3 with value 0x44cca2d6
sw x3, 0(x2) # store 0x44cca2d6 in memory
flw f8, 0(x2) # load 0x44cca2d6 from memory into f8
fmsub.s f11, f27, f11, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x5cbdea64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf504c4a # load x3 with value 0xbf504c4a
sw x3, 0(x2) # store 0xbf504c4a in memory
flw f5, 0(x2) # load 0xbf504c4a from memory into f5
li x3, 0x871834c4 # load x3 with value 0x871834c4
sw x3, 0(x2) # store 0x871834c4 in memory
flw f12, 0(x2) # load 0x871834c4 from memory into f12
li x3, 0xb0898e4d # load x3 with value 0xb0898e4d
sw x3, 0(x2) # store 0xb0898e4d in memory
flw f30, 0(x2) # load 0xb0898e4d from memory into f30
fmsub.s f12, f5, f12, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x8f0d203f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44eee0b8 # load x3 with value 0x44eee0b8
sw x3, 0(x2) # store 0x44eee0b8 in memory
flw f9, 0(x2) # load 0x44eee0b8 from memory into f9
li x3, 0xcb3b9479 # load x3 with value 0xcb3b9479
sw x3, 0(x2) # store 0xcb3b9479 in memory
flw f13, 0(x2) # load 0xcb3b9479 from memory into f13
li x3, 0x3b25008b # load x3 with value 0x3b25008b
sw x3, 0(x2) # store 0x3b25008b in memory
flw f28, 0(x2) # load 0x3b25008b from memory into f28
fmsub.s f13, f9, f13, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0xe5621122 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8c4300f6 # load x3 with value 0x8c4300f6
sw x3, 0(x2) # store 0x8c4300f6 in memory
flw f15, 0(x2) # load 0x8c4300f6 from memory into f15
li x3, 0xe7b7ce1a # load x3 with value 0xe7b7ce1a
sw x3, 0(x2) # store 0xe7b7ce1a in memory
flw f14, 0(x2) # load 0xe7b7ce1a from memory into f14
li x3, 0xed23d650 # load x3 with value 0xed23d650
sw x3, 0(x2) # store 0xed23d650 in memory
flw f10, 0(x2) # load 0xed23d650 from memory into f10
fmsub.s f14, f15, f14, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0xe4a26ae4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89cd1c69 # load x3 with value 0x89cd1c69
sw x3, 0(x2) # store 0x89cd1c69 in memory
flw f3, 0(x2) # load 0x89cd1c69 from memory into f3
li x3, 0x70d32d87 # load x3 with value 0x70d32d87
sw x3, 0(x2) # store 0x70d32d87 in memory
flw f15, 0(x2) # load 0x70d32d87 from memory into f15
li x3, 0xb05e8214 # load x3 with value 0xb05e8214
sw x3, 0(x2) # store 0xb05e8214 in memory
flw f4, 0(x2) # load 0xb05e8214 from memory into f4
fmsub.s f15, f3, f15, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x5be571d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2aaa8209 # load x3 with value 0x2aaa8209
sw x3, 0(x2) # store 0x2aaa8209 in memory
flw f12, 0(x2) # load 0x2aaa8209 from memory into f12
li x3, 0xae342410 # load x3 with value 0xae342410
sw x3, 0(x2) # store 0xae342410 in memory
flw f16, 0(x2) # load 0xae342410 from memory into f16
li x3, 0x35fd40b5 # load x3 with value 0x35fd40b5
sw x3, 0(x2) # store 0x35fd40b5 in memory
flw f6, 0(x2) # load 0x35fd40b5 from memory into f6
fmsub.s f16, f12, f16, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xbd804627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd363361c # load x3 with value 0xd363361c
sw x3, 0(x2) # store 0xd363361c in memory
flw f11, 0(x2) # load 0xd363361c from memory into f11
li x3, 0xa013bced # load x3 with value 0xa013bced
sw x3, 0(x2) # store 0xa013bced in memory
flw f17, 0(x2) # load 0xa013bced from memory into f17
li x3, 0x2ac3c7a3 # load x3 with value 0x2ac3c7a3
sw x3, 0(x2) # store 0x2ac3c7a3 in memory
flw f29, 0(x2) # load 0x2ac3c7a3 from memory into f29
fmsub.s f17, f11, f17, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0xc0d09b9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d87f9b7 # load x3 with value 0x6d87f9b7
sw x3, 0(x2) # store 0x6d87f9b7 in memory
flw f15, 0(x2) # load 0x6d87f9b7 from memory into f15
li x3, 0x4ee0b357 # load x3 with value 0x4ee0b357
sw x3, 0(x2) # store 0x4ee0b357 in memory
flw f18, 0(x2) # load 0x4ee0b357 from memory into f18
li x3, 0x3bf038b9 # load x3 with value 0x3bf038b9
sw x3, 0(x2) # store 0x3bf038b9 in memory
flw f29, 0(x2) # load 0x3bf038b9 from memory into f29
fmsub.s f18, f15, f18, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xe5eaa405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4582f75 # load x3 with value 0xb4582f75
sw x3, 0(x2) # store 0xb4582f75 in memory
flw f14, 0(x2) # load 0xb4582f75 from memory into f14
li x3, 0x5d805470 # load x3 with value 0x5d805470
sw x3, 0(x2) # store 0x5d805470 in memory
flw f19, 0(x2) # load 0x5d805470 from memory into f19
li x3, 0x639aeb4a # load x3 with value 0x639aeb4a
sw x3, 0(x2) # store 0x639aeb4a in memory
flw f21, 0(x2) # load 0x639aeb4a from memory into f21
fmsub.s f19, f14, f19, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0xaeeac151 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x92088c61 # load x3 with value 0x92088c61
sw x3, 0(x2) # store 0x92088c61 in memory
flw f7, 0(x2) # load 0x92088c61 from memory into f7
li x3, 0x253830b0 # load x3 with value 0x253830b0
sw x3, 0(x2) # store 0x253830b0 in memory
flw f20, 0(x2) # load 0x253830b0 from memory into f20
li x3, 0x08de884c # load x3 with value 0x08de884c
sw x3, 0(x2) # store 0x08de884c in memory
flw f20, 0(x2) # load 0x08de884c from memory into f20
fmsub.s f20, f7, f20, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x123b22ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44ba7bc6 # load x3 with value 0x44ba7bc6
sw x3, 0(x2) # store 0x44ba7bc6 in memory
flw f25, 0(x2) # load 0x44ba7bc6 from memory into f25
li x3, 0x64b828f8 # load x3 with value 0x64b828f8
sw x3, 0(x2) # store 0x64b828f8 in memory
flw f21, 0(x2) # load 0x64b828f8 from memory into f21
li x3, 0x001e23cb # load x3 with value 0x001e23cb
sw x3, 0(x2) # store 0x001e23cb in memory
flw f8, 0(x2) # load 0x001e23cb from memory into f8
fmsub.s f21, f25, f21, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x20e592ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe07fca4d # load x3 with value 0xe07fca4d
sw x3, 0(x2) # store 0xe07fca4d in memory
flw f13, 0(x2) # load 0xe07fca4d from memory into f13
li x3, 0x9892ceac # load x3 with value 0x9892ceac
sw x3, 0(x2) # store 0x9892ceac in memory
flw f22, 0(x2) # load 0x9892ceac from memory into f22
li x3, 0x4b2de4b2 # load x3 with value 0x4b2de4b2
sw x3, 0(x2) # store 0x4b2de4b2 in memory
flw f28, 0(x2) # load 0x4b2de4b2 from memory into f28
fmsub.s f22, f13, f22, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x2b0015f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22515c7b # load x3 with value 0x22515c7b
sw x3, 0(x2) # store 0x22515c7b in memory
flw f10, 0(x2) # load 0x22515c7b from memory into f10
li x3, 0x010de696 # load x3 with value 0x010de696
sw x3, 0(x2) # store 0x010de696 in memory
flw f23, 0(x2) # load 0x010de696 from memory into f23
li x3, 0x6a061ac0 # load x3 with value 0x6a061ac0
sw x3, 0(x2) # store 0x6a061ac0 in memory
flw f15, 0(x2) # load 0x6a061ac0 from memory into f15
fmsub.s f23, f10, f23, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x7022548c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x90c8b790 # load x3 with value 0x90c8b790
sw x3, 0(x2) # store 0x90c8b790 in memory
flw f12, 0(x2) # load 0x90c8b790 from memory into f12
li x3, 0x01f07a28 # load x3 with value 0x01f07a28
sw x3, 0(x2) # store 0x01f07a28 in memory
flw f24, 0(x2) # load 0x01f07a28 from memory into f24
li x3, 0xb9f45878 # load x3 with value 0xb9f45878
sw x3, 0(x2) # store 0xb9f45878 in memory
flw f7, 0(x2) # load 0xb9f45878 from memory into f7
fmsub.s f24, f12, f24, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xd7d784b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2c708d5 # load x3 with value 0xa2c708d5
sw x3, 0(x2) # store 0xa2c708d5 in memory
flw f30, 0(x2) # load 0xa2c708d5 from memory into f30
li x3, 0x50be1006 # load x3 with value 0x50be1006
sw x3, 0(x2) # store 0x50be1006 in memory
flw f25, 0(x2) # load 0x50be1006 from memory into f25
li x3, 0x28615444 # load x3 with value 0x28615444
sw x3, 0(x2) # store 0x28615444 in memory
flw f19, 0(x2) # load 0x28615444 from memory into f19
fmsub.s f25, f30, f25, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x36241a00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xad8a046e # load x3 with value 0xad8a046e
sw x3, 0(x2) # store 0xad8a046e in memory
flw f27, 0(x2) # load 0xad8a046e from memory into f27
li x3, 0xbbd5358c # load x3 with value 0xbbd5358c
sw x3, 0(x2) # store 0xbbd5358c in memory
flw f26, 0(x2) # load 0xbbd5358c from memory into f26
li x3, 0x89c7a40c # load x3 with value 0x89c7a40c
sw x3, 0(x2) # store 0x89c7a40c in memory
flw f13, 0(x2) # load 0x89c7a40c from memory into f13
fmsub.s f26, f27, f26, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xe6876795 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b804b69 # load x3 with value 0x8b804b69
sw x3, 0(x2) # store 0x8b804b69 in memory
flw f18, 0(x2) # load 0x8b804b69 from memory into f18
li x3, 0x2d1bf45e # load x3 with value 0x2d1bf45e
sw x3, 0(x2) # store 0x2d1bf45e in memory
flw f27, 0(x2) # load 0x2d1bf45e from memory into f27
li x3, 0x07af6fbd # load x3 with value 0x07af6fbd
sw x3, 0(x2) # store 0x07af6fbd in memory
flw f30, 0(x2) # load 0x07af6fbd from memory into f30
fmsub.s f27, f18, f27, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xea064a01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1ffedfc5 # load x3 with value 0x1ffedfc5
sw x3, 0(x2) # store 0x1ffedfc5 in memory
flw f10, 0(x2) # load 0x1ffedfc5 from memory into f10
li x3, 0xcda3ef42 # load x3 with value 0xcda3ef42
sw x3, 0(x2) # store 0xcda3ef42 in memory
flw f28, 0(x2) # load 0xcda3ef42 from memory into f28
li x3, 0x55a6f39d # load x3 with value 0x55a6f39d
sw x3, 0(x2) # store 0x55a6f39d in memory
flw f31, 0(x2) # load 0x55a6f39d from memory into f31
fmsub.s f28, f10, f28, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xb0ed4936 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71ceb365 # load x3 with value 0x71ceb365
sw x3, 0(x2) # store 0x71ceb365 in memory
flw f14, 0(x2) # load 0x71ceb365 from memory into f14
li x3, 0x8693852a # load x3 with value 0x8693852a
sw x3, 0(x2) # store 0x8693852a in memory
flw f29, 0(x2) # load 0x8693852a from memory into f29
li x3, 0x5106fbf0 # load x3 with value 0x5106fbf0
sw x3, 0(x2) # store 0x5106fbf0 in memory
flw f17, 0(x2) # load 0x5106fbf0 from memory into f17
fmsub.s f29, f14, f29, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x51394369 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd03d874d # load x3 with value 0xd03d874d
sw x3, 0(x2) # store 0xd03d874d in memory
flw f16, 0(x2) # load 0xd03d874d from memory into f16
li x3, 0x8a9fc714 # load x3 with value 0x8a9fc714
sw x3, 0(x2) # store 0x8a9fc714 in memory
flw f30, 0(x2) # load 0x8a9fc714 from memory into f30
li x3, 0x1581646c # load x3 with value 0x1581646c
sw x3, 0(x2) # store 0x1581646c in memory
flw f21, 0(x2) # load 0x1581646c from memory into f21
fmsub.s f30, f16, f30, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x3f3306ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25cddd9c # load x3 with value 0x25cddd9c
sw x3, 0(x2) # store 0x25cddd9c in memory
flw f4, 0(x2) # load 0x25cddd9c from memory into f4
li x3, 0x89a6684e # load x3 with value 0x89a6684e
sw x3, 0(x2) # store 0x89a6684e in memory
flw f31, 0(x2) # load 0x89a6684e from memory into f31
li x3, 0x8068a045 # load x3 with value 0x8068a045
sw x3, 0(x2) # store 0x8068a045 in memory
flw f5, 0(x2) # load 0x8068a045 from memory into f5
fmsub.s f31, f4, f31, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x3, 0x20e130df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x71dfad61 # load x3 with value 0x71dfad61
sw x3, 0(x2) # store 0x71dfad61 in memory
flw f23, 0(x2) # load 0x71dfad61 from memory into f23
li x3, 0xf1554abf # load x3 with value 0xf1554abf
sw x3, 0(x2) # store 0xf1554abf in memory
flw f9, 0(x2) # load 0xf1554abf from memory into f9
fmsub.s f3, f7, f23, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x19, 0x62309f9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x45fad424 # load x3 with value 0x45fad424
sw x3, 0(x2) # store 0x45fad424 in memory
flw f21, 0(x2) # load 0x45fad424 from memory into f21
li x3, 0xbc865943 # load x3 with value 0xbc865943
sw x3, 0(x2) # store 0xbc865943 in memory
flw f15, 0(x2) # load 0xbc865943 from memory into f15
fmsub.s f19, f18, f21, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x17, 0xf7d1a541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x969afaea # load x3 with value 0x969afaea
sw x3, 0(x2) # store 0x969afaea in memory
flw f11, 0(x2) # load 0x969afaea from memory into f11
li x3, 0x18f029c1 # load x3 with value 0x18f029c1
sw x3, 0(x2) # store 0x18f029c1 in memory
flw f6, 0(x2) # load 0x18f029c1 from memory into f6
fmsub.s f17, f29, f11, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x25, 0x17a12659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x78c765a8 # load x3 with value 0x78c765a8
sw x3, 0(x2) # store 0x78c765a8 in memory
flw f28, 0(x2) # load 0x78c765a8 from memory into f28
li x3, 0xdcc79a46 # load x3 with value 0xdcc79a46
sw x3, 0(x2) # store 0xdcc79a46 in memory
flw f18, 0(x2) # load 0xdcc79a46 from memory into f18
fmsub.s f25, f27, f28, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x31, 0x06d530c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x71a25006 # load x3 with value 0x71a25006
sw x3, 0(x2) # store 0x71a25006 in memory
flw f9, 0(x2) # load 0x71a25006 from memory into f9
li x3, 0x318d58f0 # load x3 with value 0x318d58f0
sw x3, 0(x2) # store 0x318d58f0 in memory
flw f12, 0(x2) # load 0x318d58f0 from memory into f12
fmsub.s f31, f20, f9, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x26, 0xf69c51e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xc91b5e81 # load x3 with value 0xc91b5e81
sw x3, 0(x2) # store 0xc91b5e81 in memory
flw f24, 0(x2) # load 0xc91b5e81 from memory into f24
li x3, 0x56ac3a85 # load x3 with value 0x56ac3a85
sw x3, 0(x2) # store 0x56ac3a85 in memory
flw f13, 0(x2) # load 0x56ac3a85 from memory into f13
fmsub.s f26, f3, f24, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x28, 0xe725d873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x35da5208 # load x3 with value 0x35da5208
sw x3, 0(x2) # store 0x35da5208 in memory
flw f12, 0(x2) # load 0x35da5208 from memory into f12
li x3, 0x467b9153 # load x3 with value 0x467b9153
sw x3, 0(x2) # store 0x467b9153 in memory
flw f26, 0(x2) # load 0x467b9153 from memory into f26
fmsub.s f28, f29, f12, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x30, 0xc1cb3499 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x8836df3d # load x3 with value 0x8836df3d
sw x3, 0(x2) # store 0x8836df3d in memory
flw f25, 0(x2) # load 0x8836df3d from memory into f25
li x3, 0x8d69726b # load x3 with value 0x8d69726b
sw x3, 0(x2) # store 0x8d69726b in memory
flw f26, 0(x2) # load 0x8d69726b from memory into f26
fmsub.s f30, f11, f25, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x10, 0x113f7a71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xe77d07b9 # load x3 with value 0xe77d07b9
sw x3, 0(x2) # store 0xe77d07b9 in memory
flw f17, 0(x2) # load 0xe77d07b9 from memory into f17
li x3, 0xb30b4fec # load x3 with value 0xb30b4fec
sw x3, 0(x2) # store 0xb30b4fec in memory
flw f20, 0(x2) # load 0xb30b4fec from memory into f20
fmsub.s f10, f26, f17, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x10, 0xcf2532da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x0113a991 # load x3 with value 0x0113a991
sw x3, 0(x2) # store 0x0113a991 in memory
flw f19, 0(x2) # load 0x0113a991 from memory into f19
li x3, 0xaab2bd57 # load x3 with value 0xaab2bd57
sw x3, 0(x2) # store 0xaab2bd57 in memory
flw f2, 0(x2) # load 0xaab2bd57 from memory into f2
fmsub.s f10, f6, f19, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x20, 0xedeebd36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xa3cec3f7 # load x3 with value 0xa3cec3f7
sw x3, 0(x2) # store 0xa3cec3f7 in memory
flw f8, 0(x2) # load 0xa3cec3f7 from memory into f8
li x3, 0x1fe40c25 # load x3 with value 0x1fe40c25
sw x3, 0(x2) # store 0x1fe40c25 in memory
flw f24, 0(x2) # load 0x1fe40c25 from memory into f24
fmsub.s f20, f26, f8, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x14, 0xf8a96980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0xe49f9473 # load x3 with value 0xe49f9473
sw x3, 0(x2) # store 0xe49f9473 in memory
flw f30, 0(x2) # load 0xe49f9473 from memory into f30
li x3, 0xd7fbdb63 # load x3 with value 0xd7fbdb63
sw x3, 0(x2) # store 0xd7fbdb63 in memory
flw f29, 0(x2) # load 0xd7fbdb63 from memory into f29
fmsub.s f14, f4, f30, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x26, 0xb0144328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x49cd5bc3 # load x3 with value 0x49cd5bc3
sw x3, 0(x2) # store 0x49cd5bc3 in memory
flw f7, 0(x2) # load 0x49cd5bc3 from memory into f7
li x3, 0x0c53f452 # load x3 with value 0x0c53f452
sw x3, 0(x2) # store 0x0c53f452 in memory
flw f20, 0(x2) # load 0x0c53f452 from memory into f20
fmsub.s f26, f10, f7, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x31, 0x3723e627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xd2526bfe # load x3 with value 0xd2526bfe
sw x3, 0(x2) # store 0xd2526bfe in memory
flw f6, 0(x2) # load 0xd2526bfe from memory into f6
li x3, 0x95c7fad4 # load x3 with value 0x95c7fad4
sw x3, 0(x2) # store 0x95c7fad4 in memory
flw f16, 0(x2) # load 0x95c7fad4 from memory into f16
fmsub.s f31, f27, f6, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x11, 0x9f8b812d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x2cb78a3d # load x3 with value 0x2cb78a3d
sw x3, 0(x2) # store 0x2cb78a3d in memory
flw f21, 0(x2) # load 0x2cb78a3d from memory into f21
li x3, 0x24b2abe5 # load x3 with value 0x24b2abe5
sw x3, 0(x2) # store 0x24b2abe5 in memory
flw f22, 0(x2) # load 0x24b2abe5 from memory into f22
fmsub.s f11, f12, f21, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x1, 0xff93864c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xb9e3b89f # load x3 with value 0xb9e3b89f
sw x3, 0(x2) # store 0xb9e3b89f in memory
flw f2, 0(x2) # load 0xb9e3b89f from memory into f2
li x3, 0xc5814b61 # load x3 with value 0xc5814b61
sw x3, 0(x2) # store 0xc5814b61 in memory
flw f12, 0(x2) # load 0xc5814b61 from memory into f12
fmsub.s f1, f22, f2, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x19, 0x54902117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x5162ca8b # load x3 with value 0x5162ca8b
sw x3, 0(x2) # store 0x5162ca8b in memory
flw f20, 0(x2) # load 0x5162ca8b from memory into f20
li x3, 0x5bad02ed # load x3 with value 0x5bad02ed
sw x3, 0(x2) # store 0x5bad02ed in memory
flw f10, 0(x2) # load 0x5bad02ed from memory into f10
fmsub.s f19, f25, f20, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x19, 0xeb8c5115 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xbc12f773 # load x3 with value 0xbc12f773
sw x3, 0(x2) # store 0xbc12f773 in memory
flw f21, 0(x2) # load 0xbc12f773 from memory into f21
li x3, 0x330137f7 # load x3 with value 0x330137f7
sw x3, 0(x2) # store 0x330137f7 in memory
flw f13, 0(x2) # load 0x330137f7 from memory into f13
fmsub.s f19, f14, f21, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x20, 0x45d07636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x3754a131 # load x3 with value 0x3754a131
sw x3, 0(x2) # store 0x3754a131 in memory
flw f12, 0(x2) # load 0x3754a131 from memory into f12
li x3, 0xafa3aed2 # load x3 with value 0xafa3aed2
sw x3, 0(x2) # store 0xafa3aed2 in memory
flw f3, 0(x2) # load 0xafa3aed2 from memory into f3
fmsub.s f20, f29, f12, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x8, 0x48b32111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x6815efd3 # load x3 with value 0x6815efd3
sw x3, 0(x2) # store 0x6815efd3 in memory
flw f28, 0(x2) # load 0x6815efd3 from memory into f28
li x3, 0x35418204 # load x3 with value 0x35418204
sw x3, 0(x2) # store 0x35418204 in memory
flw f10, 0(x2) # load 0x35418204 from memory into f10
fmsub.s f8, f29, f28, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x29, 0xd15bbd68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xa373ec22 # load x3 with value 0xa373ec22
sw x3, 0(x2) # store 0xa373ec22 in memory
flw f28, 0(x2) # load 0xa373ec22 from memory into f28
li x3, 0x18904169 # load x3 with value 0x18904169
sw x3, 0(x2) # store 0x18904169 in memory
flw f25, 0(x2) # load 0x18904169 from memory into f25
fmsub.s f29, f6, f28, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x8, 0x055dffdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x280635a2 # load x3 with value 0x280635a2
sw x3, 0(x2) # store 0x280635a2 in memory
flw f3, 0(x2) # load 0x280635a2 from memory into f3
li x3, 0x7a3d2542 # load x3 with value 0x7a3d2542
sw x3, 0(x2) # store 0x7a3d2542 in memory
flw f28, 0(x2) # load 0x7a3d2542 from memory into f28
fmsub.s f8, f1, f3, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x25, 0x0cb030f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0xe5466a19 # load x3 with value 0xe5466a19
sw x3, 0(x2) # store 0xe5466a19 in memory
flw f15, 0(x2) # load 0xe5466a19 from memory into f15
li x3, 0xa47b68fe # load x3 with value 0xa47b68fe
sw x3, 0(x2) # store 0xa47b68fe in memory
flw f19, 0(x2) # load 0xa47b68fe from memory into f19
fmsub.s f25, f31, f15, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x24, 0xb756d6dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x07130b3a # load x3 with value 0x07130b3a
sw x3, 0(x2) # store 0x07130b3a in memory
flw f19, 0(x2) # load 0x07130b3a from memory into f19
li x3, 0xbf78fce5 # load x3 with value 0xbf78fce5
sw x3, 0(x2) # store 0xbf78fce5 in memory
flw f4, 0(x2) # load 0xbf78fce5 from memory into f4
fmsub.s f24, f16, f19, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x29, 0x858c6ad5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x756f35ac # load x3 with value 0x756f35ac
sw x3, 0(x2) # store 0x756f35ac in memory
flw f17, 0(x2) # load 0x756f35ac from memory into f17
li x3, 0x2559eb73 # load x3 with value 0x2559eb73
sw x3, 0(x2) # store 0x2559eb73 in memory
flw f12, 0(x2) # load 0x2559eb73 from memory into f12
fmsub.s f29, f4, f17, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x24, 0xc357f252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0xcbc88036 # load x3 with value 0xcbc88036
sw x3, 0(x2) # store 0xcbc88036 in memory
flw f30, 0(x2) # load 0xcbc88036 from memory into f30
li x3, 0x51a68a4b # load x3 with value 0x51a68a4b
sw x3, 0(x2) # store 0x51a68a4b in memory
flw f5, 0(x2) # load 0x51a68a4b from memory into f5
fmsub.s f24, f4, f30, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x28, 0xcca3e068 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40ba0f1f # load x3 with value 0x40ba0f1f
sw x3, 0(x2) # store 0x40ba0f1f in memory
flw f23, 0(x2) # load 0x40ba0f1f from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x5bfa9754 # load x3 with value 0x5bfa9754
sw x3, 0(x2) # store 0x5bfa9754 in memory
flw f10, 0(x2) # load 0x5bfa9754 from memory into f10
fmsub.s f28, f23, f30, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x23, 0xb77450d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xebbdad36 # load x3 with value 0xebbdad36
sw x3, 0(x2) # store 0xebbdad36 in memory
flw f24, 0(x2) # load 0xebbdad36 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x0710e630 # load x3 with value 0x0710e630
sw x3, 0(x2) # store 0x0710e630 in memory
flw f8, 0(x2) # load 0x0710e630 from memory into f8
fmsub.s f23, f24, f17, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x3, 0x0a553ab2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x950ea337 # load x3 with value 0x950ea337
sw x3, 0(x2) # store 0x950ea337 in memory
flw f14, 0(x2) # load 0x950ea337 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0xe985493a # load x3 with value 0xe985493a
sw x3, 0(x2) # store 0xe985493a in memory
flw f2, 0(x2) # load 0xe985493a from memory into f2
fmsub.s f3, f14, f28, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x3, 0x13faa2fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a8be12e # load x3 with value 0x2a8be12e
sw x3, 0(x2) # store 0x2a8be12e in memory
flw f19, 0(x2) # load 0x2a8be12e from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x8d001f45 # load x3 with value 0x8d001f45
sw x3, 0(x2) # store 0x8d001f45 in memory
flw f5, 0(x2) # load 0x8d001f45 from memory into f5
fmsub.s f3, f19, f11, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x29, 0x1a3fb59c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xddcaf235 # load x3 with value 0xddcaf235
sw x3, 0(x2) # store 0xddcaf235 in memory
flw f12, 0(x2) # load 0xddcaf235 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x699bd7a4 # load x3 with value 0x699bd7a4
sw x3, 0(x2) # store 0x699bd7a4 in memory
flw f5, 0(x2) # load 0x699bd7a4 from memory into f5
fmsub.s f29, f12, f3, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x17, 0x63ea2a79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6ddf6090 # load x3 with value 0x6ddf6090
sw x3, 0(x2) # store 0x6ddf6090 in memory
flw f12, 0(x2) # load 0x6ddf6090 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x3647a990 # load x3 with value 0x3647a990
sw x3, 0(x2) # store 0x3647a990 in memory
flw f27, 0(x2) # load 0x3647a990 from memory into f27
fmsub.s f17, f12, f31, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x1, 0x55725530 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a3b2534 # load x3 with value 0x6a3b2534
sw x3, 0(x2) # store 0x6a3b2534 in memory
flw f5, 0(x2) # load 0x6a3b2534 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x85d9ecea # load x3 with value 0x85d9ecea
sw x3, 0(x2) # store 0x85d9ecea in memory
flw f7, 0(x2) # load 0x85d9ecea from memory into f7
fmsub.s f1, f5, f3, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x10, 0xfee36494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee3067dc # load x3 with value 0xee3067dc
sw x3, 0(x2) # store 0xee3067dc in memory
flw f12, 0(x2) # load 0xee3067dc from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xa7d842a9 # load x3 with value 0xa7d842a9
sw x3, 0(x2) # store 0xa7d842a9 in memory
flw f25, 0(x2) # load 0xa7d842a9 from memory into f25
fmsub.s f10, f12, f19, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x20, 0xef780166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbb0c484a # load x3 with value 0xbb0c484a
sw x3, 0(x2) # store 0xbb0c484a in memory
flw f10, 0(x2) # load 0xbb0c484a from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x2112f3e3 # load x3 with value 0x2112f3e3
sw x3, 0(x2) # store 0x2112f3e3 in memory
flw f9, 0(x2) # load 0x2112f3e3 from memory into f9
fmsub.s f20, f10, f19, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x21, 0x85061b22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x76d079b2 # load x3 with value 0x76d079b2
sw x3, 0(x2) # store 0x76d079b2 in memory
flw f11, 0(x2) # load 0x76d079b2 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xf9f3a122 # load x3 with value 0xf9f3a122
sw x3, 0(x2) # store 0xf9f3a122 in memory
flw f3, 0(x2) # load 0xf9f3a122 from memory into f3
fmsub.s f21, f11, f4, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x16, 0xee861713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x45ea63ad # load x3 with value 0x45ea63ad
sw x3, 0(x2) # store 0x45ea63ad in memory
flw f25, 0(x2) # load 0x45ea63ad from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0xdd5deb82 # load x3 with value 0xdd5deb82
sw x3, 0(x2) # store 0xdd5deb82 in memory
flw f18, 0(x2) # load 0xdd5deb82 from memory into f18
fmsub.s f16, f25, f20, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x5, 0xad3765e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3b1cc69f # load x3 with value 0x3b1cc69f
sw x3, 0(x2) # store 0x3b1cc69f in memory
flw f13, 0(x2) # load 0x3b1cc69f from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xc34c62dc # load x3 with value 0xc34c62dc
sw x3, 0(x2) # store 0xc34c62dc in memory
flw f17, 0(x2) # load 0xc34c62dc from memory into f17
fmsub.s f5, f13, f27, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x13, 0xb4a3e21f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x70cea283 # load x3 with value 0x70cea283
sw x3, 0(x2) # store 0x70cea283 in memory
flw f4, 0(x2) # load 0x70cea283 from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0xc7d31b80 # load x3 with value 0xc7d31b80
sw x3, 0(x2) # store 0xc7d31b80 in memory
flw f29, 0(x2) # load 0xc7d31b80 from memory into f29
fmsub.s f13, f4, f18, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x3, 0xd3bf1427 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x88bf3164 # load x3 with value 0x88bf3164
sw x3, 0(x2) # store 0x88bf3164 in memory
flw f11, 0(x2) # load 0x88bf3164 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x6d452d33 # load x3 with value 0x6d452d33
sw x3, 0(x2) # store 0x6d452d33 in memory
flw f7, 0(x2) # load 0x6d452d33 from memory into f7
fmsub.s f3, f11, f20, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x10, 0xe40a2c20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa23545eb # load x3 with value 0xa23545eb
sw x3, 0(x2) # store 0xa23545eb in memory
flw f7, 0(x2) # load 0xa23545eb from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x7e04591a # load x3 with value 0x7e04591a
sw x3, 0(x2) # store 0x7e04591a in memory
flw f4, 0(x2) # load 0x7e04591a from memory into f4
fmsub.s f10, f7, f23, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x17, 0x2b64914d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0d643e04 # load x3 with value 0x0d643e04
sw x3, 0(x2) # store 0x0d643e04 in memory
flw f4, 0(x2) # load 0x0d643e04 from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xed86c12b # load x3 with value 0xed86c12b
sw x3, 0(x2) # store 0xed86c12b in memory
flw f7, 0(x2) # load 0xed86c12b from memory into f7
fmsub.s f17, f4, f26, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x17, 0xaf6b032b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x25263f3e # load x3 with value 0x25263f3e
sw x3, 0(x2) # store 0x25263f3e in memory
flw f21, 0(x2) # load 0x25263f3e from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x7cf67070 # load x3 with value 0x7cf67070
sw x3, 0(x2) # store 0x7cf67070 in memory
flw f28, 0(x2) # load 0x7cf67070 from memory into f28
fmsub.s f17, f21, f14, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x1, 0xada13b6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89c660c8 # load x3 with value 0x89c660c8
sw x3, 0(x2) # store 0x89c660c8 in memory
flw f3, 0(x2) # load 0x89c660c8 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xc3837571 # load x3 with value 0xc3837571
sw x3, 0(x2) # store 0xc3837571 in memory
flw f10, 0(x2) # load 0xc3837571 from memory into f10
fmsub.s f1, f3, f6, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x12, 0xea7244d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x27c78f09 # load x3 with value 0x27c78f09
sw x3, 0(x2) # store 0x27c78f09 in memory
flw f13, 0(x2) # load 0x27c78f09 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x97746be6 # load x3 with value 0x97746be6
sw x3, 0(x2) # store 0x97746be6 in memory
flw f17, 0(x2) # load 0x97746be6 from memory into f17
fmsub.s f12, f13, f14, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x17, 0x97fc7a12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6baeb59c # load x3 with value 0x6baeb59c
sw x3, 0(x2) # store 0x6baeb59c in memory
flw f20, 0(x2) # load 0x6baeb59c from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x10c144ff # load x3 with value 0x10c144ff
sw x3, 0(x2) # store 0x10c144ff in memory
flw f4, 0(x2) # load 0x10c144ff from memory into f4
fmsub.s f17, f20, f1, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x1, 0xa6fcf5f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c5f9dc1 # load x3 with value 0x7c5f9dc1
sw x3, 0(x2) # store 0x7c5f9dc1 in memory
flw f31, 0(x2) # load 0x7c5f9dc1 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x0df06fb6 # load x3 with value 0x0df06fb6
sw x3, 0(x2) # store 0x0df06fb6 in memory
flw f21, 0(x2) # load 0x0df06fb6 from memory into f21
fmsub.s f1, f31, f6, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x24, 0x12fd49b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2d99bcb2 # load x3 with value 0x2d99bcb2
sw x3, 0(x2) # store 0x2d99bcb2 in memory
flw f31, 0(x2) # load 0x2d99bcb2 from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xe86d9d87 # load x3 with value 0xe86d9d87
sw x3, 0(x2) # store 0xe86d9d87 in memory
flw f12, 0(x2) # load 0xe86d9d87 from memory into f12
fmsub.s f24, f31, f30, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x23, 0x7432b4ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaef4ef5c # load x3 with value 0xaef4ef5c
sw x3, 0(x2) # store 0xaef4ef5c in memory
flw f12, 0(x2) # load 0xaef4ef5c from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x49d5cd29 # load x3 with value 0x49d5cd29
sw x3, 0(x2) # store 0x49d5cd29 in memory
flw f4, 0(x2) # load 0x49d5cd29 from memory into f4
fmsub.s f23, f12, f26, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x31, 0x3567ee5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x16c97469 # load x3 with value 0x16c97469
sw x3, 0(x2) # store 0x16c97469 in memory
flw f17, 0(x2) # load 0x16c97469 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x6bc14473 # load x3 with value 0x6bc14473
sw x3, 0(x2) # store 0x6bc14473 in memory
flw f15, 0(x2) # load 0x6bc14473 from memory into f15
fmsub.s f31, f17, f5, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x7, 0x1d6b95d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0b257276 # load x3 with value 0x0b257276
sw x3, 0(x2) # store 0x0b257276 in memory
flw f11, 0(x2) # load 0x0b257276 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x574887c4 # load x3 with value 0x574887c4
sw x3, 0(x2) # store 0x574887c4 in memory
flw f20, 0(x2) # load 0x574887c4 from memory into f20
fmsub.s f7, f11, f31, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x1, 0x81f599b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd310d28d # load x3 with value 0xd310d28d
sw x3, 0(x2) # store 0xd310d28d in memory
flw f30, 0(x2) # load 0xd310d28d from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x3f127ac6 # load x3 with value 0x3f127ac6
sw x3, 0(x2) # store 0x3f127ac6 in memory
flw f3, 0(x2) # load 0x3f127ac6 from memory into f3
fmsub.s f1, f30, f4, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x21, 0xb734744f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xba01cd06 # load x3 with value 0xba01cd06
sw x3, 0(x2) # store 0xba01cd06 in memory
flw f30, 0(x2) # load 0xba01cd06 from memory into f30
li x3, 0x5d015cfb # load x3 with value 0x5d015cfb
sw x3, 0(x2) # store 0x5d015cfb in memory
flw f5, 0(x2) # load 0x5d015cfb from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmsub.s f21, f30, f5, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x13, 0x57dbfae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x29ac17ce # load x3 with value 0x29ac17ce
sw x3, 0(x2) # store 0x29ac17ce in memory
flw f30, 0(x2) # load 0x29ac17ce from memory into f30
li x3, 0x88cb17e2 # load x3 with value 0x88cb17e2
sw x3, 0(x2) # store 0x88cb17e2 in memory
flw f2, 0(x2) # load 0x88cb17e2 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmsub.s f13, f30, f2, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x30, 0xc28a86e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6ed1d91 # load x3 with value 0xa6ed1d91
sw x3, 0(x2) # store 0xa6ed1d91 in memory
flw f6, 0(x2) # load 0xa6ed1d91 from memory into f6
li x3, 0x12b77f97 # load x3 with value 0x12b77f97
sw x3, 0(x2) # store 0x12b77f97 in memory
flw f17, 0(x2) # load 0x12b77f97 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f30, f6, f17, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x21, 0x76ea2aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc9c5e24b # load x3 with value 0xc9c5e24b
sw x3, 0(x2) # store 0xc9c5e24b in memory
flw f25, 0(x2) # load 0xc9c5e24b from memory into f25
li x3, 0xc53e3fb3 # load x3 with value 0xc53e3fb3
sw x3, 0(x2) # store 0xc53e3fb3 in memory
flw f22, 0(x2) # load 0xc53e3fb3 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmsub.s f21, f25, f22, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x12, 0x1aa3f003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x638fc9c9 # load x3 with value 0x638fc9c9
sw x3, 0(x2) # store 0x638fc9c9 in memory
flw f8, 0(x2) # load 0x638fc9c9 from memory into f8
li x3, 0x3f692fec # load x3 with value 0x3f692fec
sw x3, 0(x2) # store 0x3f692fec in memory
flw f11, 0(x2) # load 0x3f692fec from memory into f11
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmsub.s f12, f8, f11, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x27, 0x606b3108 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2a797d0 # load x3 with value 0xb2a797d0
sw x3, 0(x2) # store 0xb2a797d0 in memory
flw f7, 0(x2) # load 0xb2a797d0 from memory into f7
li x3, 0x539dc01f # load x3 with value 0x539dc01f
sw x3, 0(x2) # store 0x539dc01f in memory
flw f22, 0(x2) # load 0x539dc01f from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmsub.s f27, f7, f22, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x14, 0xf5f37c5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x547280fe # load x3 with value 0x547280fe
sw x3, 0(x2) # store 0x547280fe in memory
flw f6, 0(x2) # load 0x547280fe from memory into f6
li x3, 0xc1cb4224 # load x3 with value 0xc1cb4224
sw x3, 0(x2) # store 0xc1cb4224 in memory
flw f12, 0(x2) # load 0xc1cb4224 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmsub.s f14, f6, f12, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x28, 0xbcdff9a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x138cacb7 # load x3 with value 0x138cacb7
sw x3, 0(x2) # store 0x138cacb7 in memory
flw f10, 0(x2) # load 0x138cacb7 from memory into f10
li x3, 0xd4ae3cc3 # load x3 with value 0xd4ae3cc3
sw x3, 0(x2) # store 0xd4ae3cc3 in memory
flw f30, 0(x2) # load 0xd4ae3cc3 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmsub.s f28, f10, f30, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x27, 0xcd868b77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x21931d37 # load x3 with value 0x21931d37
sw x3, 0(x2) # store 0x21931d37 in memory
flw f12, 0(x2) # load 0x21931d37 from memory into f12
li x3, 0x8cb4f478 # load x3 with value 0x8cb4f478
sw x3, 0(x2) # store 0x8cb4f478 in memory
flw f26, 0(x2) # load 0x8cb4f478 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmsub.s f27, f12, f26, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x3, 0x19eab8ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e97f8f9 # load x3 with value 0x8e97f8f9
sw x3, 0(x2) # store 0x8e97f8f9 in memory
flw f9, 0(x2) # load 0x8e97f8f9 from memory into f9
li x3, 0x2233917f # load x3 with value 0x2233917f
sw x3, 0(x2) # store 0x2233917f in memory
flw f14, 0(x2) # load 0x2233917f from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fmsub.s f3, f9, f14, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x31, 0x6b962892 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfbad3acd # load x3 with value 0xfbad3acd
sw x3, 0(x2) # store 0xfbad3acd in memory
flw f14, 0(x2) # load 0xfbad3acd from memory into f14
li x3, 0x73198d48 # load x3 with value 0x73198d48
sw x3, 0(x2) # store 0x73198d48 in memory
flw f9, 0(x2) # load 0x73198d48 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmsub.s f31, f14, f9, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x3, 0xcebaad56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x221db944 # load x3 with value 0x221db944
sw x3, 0(x2) # store 0x221db944 in memory
flw f11, 0(x2) # load 0x221db944 from memory into f11
li x3, 0xb3336797 # load x3 with value 0xb3336797
sw x3, 0(x2) # store 0xb3336797 in memory
flw f22, 0(x2) # load 0xb3336797 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmsub.s f3, f11, f22, f24 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x10, 0x485fb7d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd44aef9b # load x3 with value 0xd44aef9b
sw x3, 0(x2) # store 0xd44aef9b in memory
flw f12, 0(x2) # load 0xd44aef9b from memory into f12
li x3, 0x312ba319 # load x3 with value 0x312ba319
sw x3, 0(x2) # store 0x312ba319 in memory
flw f31, 0(x2) # load 0x312ba319 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmsub.s f10, f12, f31, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x22, 0x16a6c175 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5853c576 # load x3 with value 0x5853c576
sw x3, 0(x2) # store 0x5853c576 in memory
flw f4, 0(x2) # load 0x5853c576 from memory into f4
li x3, 0x32c78a3b # load x3 with value 0x32c78a3b
sw x3, 0(x2) # store 0x32c78a3b in memory
flw f1, 0(x2) # load 0x32c78a3b from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmsub.s f22, f4, f1, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x2, 0x323d6494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbedf5589 # load x3 with value 0xbedf5589
sw x3, 0(x2) # store 0xbedf5589 in memory
flw f9, 0(x2) # load 0xbedf5589 from memory into f9
li x3, 0x1211ef6c # load x3 with value 0x1211ef6c
sw x3, 0(x2) # store 0x1211ef6c in memory
flw f1, 0(x2) # load 0x1211ef6c from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fmsub.s f2, f9, f1, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x21, 0xccc7d268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8bac937e # load x3 with value 0x8bac937e
sw x3, 0(x2) # store 0x8bac937e in memory
flw f14, 0(x2) # load 0x8bac937e from memory into f14
li x3, 0x7069f060 # load x3 with value 0x7069f060
sw x3, 0(x2) # store 0x7069f060 in memory
flw f17, 0(x2) # load 0x7069f060 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmsub.s f21, f14, f17, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x18, 0xe3c54f12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d5648bb # load x3 with value 0x3d5648bb
sw x3, 0(x2) # store 0x3d5648bb in memory
flw f2, 0(x2) # load 0x3d5648bb from memory into f2
li x3, 0x39fd49b5 # load x3 with value 0x39fd49b5
sw x3, 0(x2) # store 0x39fd49b5 in memory
flw f17, 0(x2) # load 0x39fd49b5 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fmsub.s f18, f2, f17, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x17, 0x720d200f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3248fa1c # load x3 with value 0x3248fa1c
sw x3, 0(x2) # store 0x3248fa1c in memory
flw f18, 0(x2) # load 0x3248fa1c from memory into f18
li x3, 0x0f96322a # load x3 with value 0x0f96322a
sw x3, 0(x2) # store 0x0f96322a in memory
flw f16, 0(x2) # load 0x0f96322a from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmsub.s f17, f18, f16, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x6, 0x8edc1f3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5c50edc1 # load x3 with value 0x5c50edc1
sw x3, 0(x2) # store 0x5c50edc1 in memory
flw f8, 0(x2) # load 0x5c50edc1 from memory into f8
li x3, 0x5216ad12 # load x3 with value 0x5216ad12
sw x3, 0(x2) # store 0x5216ad12 in memory
flw f18, 0(x2) # load 0x5216ad12 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f6, f8, f18, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x31, 0x22fb1a6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe7bc5bf3 # load x3 with value 0xe7bc5bf3
sw x3, 0(x2) # store 0xe7bc5bf3 in memory
flw f14, 0(x2) # load 0xe7bc5bf3 from memory into f14
li x3, 0x623f85c8 # load x3 with value 0x623f85c8
sw x3, 0(x2) # store 0x623f85c8 in memory
flw f16, 0(x2) # load 0x623f85c8 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmsub.s f31, f14, f16, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x15, 0xb2349e0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xab5b76e0 # load x3 with value 0xab5b76e0
sw x3, 0(x2) # store 0xab5b76e0 in memory
flw f20, 0(x2) # load 0xab5b76e0 from memory into f20
li x3, 0x9675e8f8 # load x3 with value 0x9675e8f8
sw x3, 0(x2) # store 0x9675e8f8 in memory
flw f5, 0(x2) # load 0x9675e8f8 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmsub.s f15, f20, f5, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x24, 0x4a7cc1c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xded3736b # load x3 with value 0xded3736b
sw x3, 0(x2) # store 0xded3736b in memory
flw f13, 0(x2) # load 0xded3736b from memory into f13
li x3, 0xe8b3d3ec # load x3 with value 0xe8b3d3ec
sw x3, 0(x2) # store 0xe8b3d3ec in memory
flw f30, 0(x2) # load 0xe8b3d3ec from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fmsub.s f24, f13, f30, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x17, 0xb4bbd882 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea9f05d5 # load x3 with value 0xea9f05d5
sw x3, 0(x2) # store 0xea9f05d5 in memory
flw f5, 0(x2) # load 0xea9f05d5 from memory into f5
li x3, 0x8c64c8b7 # load x3 with value 0x8c64c8b7
sw x3, 0(x2) # store 0x8c64c8b7 in memory
flw f16, 0(x2) # load 0x8c64c8b7 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmsub.s f17, f5, f16, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x3, 0x29b26d55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x90b77d84 # load x3 with value 0x90b77d84
sw x3, 0(x2) # store 0x90b77d84 in memory
flw f14, 0(x2) # load 0x90b77d84 from memory into f14
li x3, 0x53d69d54 # load x3 with value 0x53d69d54
sw x3, 0(x2) # store 0x53d69d54 in memory
flw f25, 0(x2) # load 0x53d69d54 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fmsub.s f3, f14, f25, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x11, 0xbf3686a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0a651aed # load x3 with value 0x0a651aed
sw x3, 0(x2) # store 0x0a651aed in memory
flw f4, 0(x2) # load 0x0a651aed from memory into f4
li x3, 0x1df164cb # load x3 with value 0x1df164cb
sw x3, 0(x2) # store 0x1df164cb in memory
flw f24, 0(x2) # load 0x1df164cb from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmsub.s f11, f4, f24, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x6, 0x7193d399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b87e22d # load x3 with value 0x8b87e22d
sw x3, 0(x2) # store 0x8b87e22d in memory
flw f11, 0(x2) # load 0x8b87e22d from memory into f11
li x3, 0x25a80b4a # load x3 with value 0x25a80b4a
sw x3, 0(x2) # store 0x25a80b4a in memory
flw f31, 0(x2) # load 0x25a80b4a from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fmsub.s f6, f11, f31, f29 # perform operation

# Testcase cp_frm
li x12, 0x3efbdf73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x22c8bd95 # load x3 with value 0x22c8bd95
sw x3, 0(x2) # store 0x22c8bd95 in memory
flw f14, 0(x2) # load 0x22c8bd95 from memory into f14
li x3, 0x73e94358 # load x3 with value 0x73e94358
sw x3, 0(x2) # store 0x73e94358 in memory
flw f2, 0(x2) # load 0x73e94358 from memory into f2
li x3, 0x00000011 # load x3 with value 0x00000011
sw x3, 0(x2) # store 0x00000011 in memory
flw f17, 0(x2) # load 0x00000011 from memory into f17
fmsub.s f12, f14, f2, f17, dyn # perform operation
fmsub.s f12, f14, f2, f17, rdn # perform operation
fmsub.s f12, f14, f2, f17, rmm # perform operation
fmsub.s f12, f14, f2, f17, rne # perform operation
fmsub.s f12, f14, f2, f17, rtz # perform operation
fmsub.s f12, f14, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f14, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f14, f2, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x1, 0xeac4b69b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x1f8cc643 # load x3 with value 0x1f8cc643
sw x3, 0(x2) # store 0x1f8cc643 in memory
flw f23, 0(x2) # load 0x1f8cc643 from memory into f23
fmsub.s f1, f5, f10, f23, dyn # perform operation
fmsub.s f1, f5, f10, f23, rdn # perform operation
fmsub.s f1, f5, f10, f23, rmm # perform operation
fmsub.s f1, f5, f10, f23, rne # perform operation
fmsub.s f1, f5, f10, f23, rtz # perform operation
fmsub.s f1, f5, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x31, 0x2d583b87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0xdc142855 # load x3 with value 0xdc142855
sw x3, 0(x2) # store 0xdc142855 in memory
flw f4, 0(x2) # load 0xdc142855 from memory into f4
fmsub.s f31, f19, f20, f4, dyn # perform operation
fmsub.s f31, f19, f20, f4, rdn # perform operation
fmsub.s f31, f19, f20, f4, rmm # perform operation
fmsub.s f31, f19, f20, f4, rne # perform operation
fmsub.s f31, f19, f20, f4, rtz # perform operation
fmsub.s f31, f19, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f19, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f19, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x29, 0x0ba30e7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x4e382237 # load x3 with value 0x4e382237
sw x3, 0(x2) # store 0x4e382237 in memory
flw f4, 0(x2) # load 0x4e382237 from memory into f4
fmsub.s f29, f15, f10, f4, dyn # perform operation
fmsub.s f29, f15, f10, f4, rdn # perform operation
fmsub.s f29, f15, f10, f4, rmm # perform operation
fmsub.s f29, f15, f10, f4, rne # perform operation
fmsub.s f29, f15, f10, f4, rtz # perform operation
fmsub.s f29, f15, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x8, 0x0a3b622a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x1b2c5cda # load x3 with value 0x1b2c5cda
sw x3, 0(x2) # store 0x1b2c5cda in memory
flw f29, 0(x2) # load 0x1b2c5cda from memory into f29
fmsub.s f8, f14, f19, f29, dyn # perform operation
fmsub.s f8, f14, f19, f29, rdn # perform operation
fmsub.s f8, f14, f19, f29, rmm # perform operation
fmsub.s f8, f14, f19, f29, rne # perform operation
fmsub.s f8, f14, f19, f29, rtz # perform operation
fmsub.s f8, f14, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x15, 0x17d9e6db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x2cc51a6c # load x3 with value 0x2cc51a6c
sw x3, 0(x2) # store 0x2cc51a6c in memory
flw f21, 0(x2) # load 0x2cc51a6c from memory into f21
fmsub.s f15, f20, f24, f21, dyn # perform operation
fmsub.s f15, f20, f24, f21, rdn # perform operation
fmsub.s f15, f20, f24, f21, rmm # perform operation
fmsub.s f15, f20, f24, f21, rne # perform operation
fmsub.s f15, f20, f24, f21, rtz # perform operation
fmsub.s f15, f20, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x20, 0x9a6ec302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0xec0fcefd # load x3 with value 0xec0fcefd
sw x3, 0(x2) # store 0xec0fcefd in memory
flw f29, 0(x2) # load 0xec0fcefd from memory into f29
fmsub.s f20, f6, f1, f29, dyn # perform operation
fmsub.s f20, f6, f1, f29, rdn # perform operation
fmsub.s f20, f6, f1, f29, rmm # perform operation
fmsub.s f20, f6, f1, f29, rne # perform operation
fmsub.s f20, f6, f1, f29, rtz # perform operation
fmsub.s f20, f6, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f6, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f6, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x29, 0xa084fedd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x0d63c8ef # load x3 with value 0x0d63c8ef
sw x3, 0(x2) # store 0x0d63c8ef in memory
flw f14, 0(x2) # load 0x0d63c8ef from memory into f14
fmsub.s f29, f10, f2, f14, dyn # perform operation
fmsub.s f29, f10, f2, f14, rdn # perform operation
fmsub.s f29, f10, f2, f14, rmm # perform operation
fmsub.s f29, f10, f2, f14, rne # perform operation
fmsub.s f29, f10, f2, f14, rtz # perform operation
fmsub.s f29, f10, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x28, 0x83476607 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xec3c9d82 # load x3 with value 0xec3c9d82
sw x3, 0(x2) # store 0xec3c9d82 in memory
flw f14, 0(x2) # load 0xec3c9d82 from memory into f14
fmsub.s f28, f10, f20, f14, dyn # perform operation
fmsub.s f28, f10, f20, f14, rdn # perform operation
fmsub.s f28, f10, f20, f14, rmm # perform operation
fmsub.s f28, f10, f20, f14, rne # perform operation
fmsub.s f28, f10, f20, f14, rtz # perform operation
fmsub.s f28, f10, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x21, 0x9e68f631 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x49d8163d # load x3 with value 0x49d8163d
sw x3, 0(x2) # store 0x49d8163d in memory
flw f24, 0(x2) # load 0x49d8163d from memory into f24
fmsub.s f21, f17, f4, f24, dyn # perform operation
fmsub.s f21, f17, f4, f24, rdn # perform operation
fmsub.s f21, f17, f4, f24, rmm # perform operation
fmsub.s f21, f17, f4, f24, rne # perform operation
fmsub.s f21, f17, f4, f24, rtz # perform operation
fmsub.s f21, f17, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f17, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f17, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f17, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f17, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f17, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x17, 0x67478340 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x874dbdeb # load x3 with value 0x874dbdeb
sw x3, 0(x2) # store 0x874dbdeb in memory
flw f10, 0(x2) # load 0x874dbdeb from memory into f10
fmsub.s f17, f16, f5, f10, dyn # perform operation
fmsub.s f17, f16, f5, f10, rdn # perform operation
fmsub.s f17, f16, f5, f10, rmm # perform operation
fmsub.s f17, f16, f5, f10, rne # perform operation
fmsub.s f17, f16, f5, f10, rtz # perform operation
fmsub.s f17, f16, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x28, 0x19e0a8a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xd877b6a5 # load x3 with value 0xd877b6a5
sw x3, 0(x2) # store 0xd877b6a5 in memory
flw f19, 0(x2) # load 0xd877b6a5 from memory into f19
fmsub.s f28, f25, f15, f19, dyn # perform operation
fmsub.s f28, f25, f15, f19, rdn # perform operation
fmsub.s f28, f25, f15, f19, rmm # perform operation
fmsub.s f28, f25, f15, f19, rne # perform operation
fmsub.s f28, f25, f15, f19, rtz # perform operation
fmsub.s f28, f25, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x22, 0xbf3ae5b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0xc77b27bc # load x3 with value 0xc77b27bc
sw x3, 0(x2) # store 0xc77b27bc in memory
flw f23, 0(x2) # load 0xc77b27bc from memory into f23
fmsub.s f22, f5, f1, f23, dyn # perform operation
fmsub.s f22, f5, f1, f23, rdn # perform operation
fmsub.s f22, f5, f1, f23, rmm # perform operation
fmsub.s f22, f5, f1, f23, rne # perform operation
fmsub.s f22, f5, f1, f23, rtz # perform operation
fmsub.s f22, f5, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f5, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f5, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x19, 0x14da4a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xe4e79bc8 # load x3 with value 0xe4e79bc8
sw x3, 0(x2) # store 0xe4e79bc8 in memory
flw f7, 0(x2) # load 0xe4e79bc8 from memory into f7
fmsub.s f19, f8, f20, f7, dyn # perform operation
fmsub.s f19, f8, f20, f7, rdn # perform operation
fmsub.s f19, f8, f20, f7, rmm # perform operation
fmsub.s f19, f8, f20, f7, rne # perform operation
fmsub.s f19, f8, f20, f7, rtz # perform operation
fmsub.s f19, f8, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f8, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f8, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x15, 0x9c537214 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x86498ec9 # load x3 with value 0x86498ec9
sw x3, 0(x2) # store 0x86498ec9 in memory
flw f18, 0(x2) # load 0x86498ec9 from memory into f18
fmsub.s f15, f1, f25, f18, dyn # perform operation
fmsub.s f15, f1, f25, f18, rdn # perform operation
fmsub.s f15, f1, f25, f18, rmm # perform operation
fmsub.s f15, f1, f25, f18, rne # perform operation
fmsub.s f15, f1, f25, f18, rtz # perform operation
fmsub.s f15, f1, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f1, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f1, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f1, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f1, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f1, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x17, 0x4e3255cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xf1394a9e # load x3 with value 0xf1394a9e
sw x3, 0(x2) # store 0xf1394a9e in memory
flw f18, 0(x2) # load 0xf1394a9e from memory into f18
fmsub.s f17, f8, f25, f18, dyn # perform operation
fmsub.s f17, f8, f25, f18, rdn # perform operation
fmsub.s f17, f8, f25, f18, rmm # perform operation
fmsub.s f17, f8, f25, f18, rne # perform operation
fmsub.s f17, f8, f25, f18, rtz # perform operation
fmsub.s f17, f8, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x27, 0x1e01348c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xdbdab315 # load x3 with value 0xdbdab315
sw x3, 0(x2) # store 0xdbdab315 in memory
flw f11, 0(x2) # load 0xdbdab315 from memory into f11
fmsub.s f27, f23, f30, f11, dyn # perform operation
fmsub.s f27, f23, f30, f11, rdn # perform operation
fmsub.s f27, f23, f30, f11, rmm # perform operation
fmsub.s f27, f23, f30, f11, rne # perform operation
fmsub.s f27, f23, f30, f11, rtz # perform operation
fmsub.s f27, f23, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f23, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x27, 0xbb1d631e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xc3f5cfcb # load x3 with value 0xc3f5cfcb
sw x3, 0(x2) # store 0xc3f5cfcb in memory
flw f16, 0(x2) # load 0xc3f5cfcb from memory into f16
fmsub.s f27, f10, f26, f16, dyn # perform operation
fmsub.s f27, f10, f26, f16, rdn # perform operation
fmsub.s f27, f10, f26, f16, rmm # perform operation
fmsub.s f27, f10, f26, f16, rne # perform operation
fmsub.s f27, f10, f26, f16, rtz # perform operation
fmsub.s f27, f10, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f10, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f10, f26, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x17, 0x02a4f533 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x0b69975c # load x3 with value 0x0b69975c
sw x3, 0(x2) # store 0x0b69975c in memory
flw f26, 0(x2) # load 0x0b69975c from memory into f26
fmsub.s f17, f1, f22, f26, dyn # perform operation
fmsub.s f17, f1, f22, f26, rdn # perform operation
fmsub.s f17, f1, f22, f26, rmm # perform operation
fmsub.s f17, f1, f22, f26, rne # perform operation
fmsub.s f17, f1, f22, f26, rtz # perform operation
fmsub.s f17, f1, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f1, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x11, 0x64b36279 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xe1fc1a66 # load x3 with value 0xe1fc1a66
sw x3, 0(x2) # store 0xe1fc1a66 in memory
flw f7, 0(x2) # load 0xe1fc1a66 from memory into f7
fmsub.s f11, f31, f4, f7, dyn # perform operation
fmsub.s f11, f31, f4, f7, rdn # perform operation
fmsub.s f11, f31, f4, f7, rmm # perform operation
fmsub.s f11, f31, f4, f7, rne # perform operation
fmsub.s f11, f31, f4, f7, rtz # perform operation
fmsub.s f11, f31, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x18, 0x15235f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x7d29497a # load x3 with value 0x7d29497a
sw x3, 0(x2) # store 0x7d29497a in memory
flw f26, 0(x2) # load 0x7d29497a from memory into f26
fmsub.s f18, f23, f27, f26, dyn # perform operation
fmsub.s f18, f23, f27, f26, rdn # perform operation
fmsub.s f18, f23, f27, f26, rmm # perform operation
fmsub.s f18, f23, f27, f26, rne # perform operation
fmsub.s f18, f23, f27, f26, rtz # perform operation
fmsub.s f18, f23, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x1, 0x5b8b2713 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x57c9fa1f # load x3 with value 0x57c9fa1f
sw x3, 0(x2) # store 0x57c9fa1f in memory
flw f25, 0(x2) # load 0x57c9fa1f from memory into f25
fmsub.s f1, f30, f24, f25, dyn # perform operation
fmsub.s f1, f30, f24, f25, rdn # perform operation
fmsub.s f1, f30, f24, f25, rmm # perform operation
fmsub.s f1, f30, f24, f25, rne # perform operation
fmsub.s f1, f30, f24, f25, rtz # perform operation
fmsub.s f1, f30, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x23, 0x7b2ab8c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x0b78fb38 # load x3 with value 0x0b78fb38
sw x3, 0(x2) # store 0x0b78fb38 in memory
flw f7, 0(x2) # load 0x0b78fb38 from memory into f7
fmsub.s f23, f6, f22, f7, dyn # perform operation
fmsub.s f23, f6, f22, f7, rdn # perform operation
fmsub.s f23, f6, f22, f7, rmm # perform operation
fmsub.s f23, f6, f22, f7, rne # perform operation
fmsub.s f23, f6, f22, f7, rtz # perform operation
fmsub.s f23, f6, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x28, 0x82e445de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xe960ebfc # load x3 with value 0xe960ebfc
sw x3, 0(x2) # store 0xe960ebfc in memory
flw f10, 0(x2) # load 0xe960ebfc from memory into f10
fmsub.s f28, f24, f18, f10, dyn # perform operation
fmsub.s f28, f24, f18, f10, rdn # perform operation
fmsub.s f28, f24, f18, f10, rmm # perform operation
fmsub.s f28, f24, f18, f10, rne # perform operation
fmsub.s f28, f24, f18, f10, rtz # perform operation
fmsub.s f28, f24, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x21, 0xb8ce5700 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0xf014501c # load x3 with value 0xf014501c
sw x3, 0(x2) # store 0xf014501c in memory
flw f29, 0(x2) # load 0xf014501c from memory into f29
fmsub.s f21, f24, f1, f29, dyn # perform operation
fmsub.s f21, f24, f1, f29, rdn # perform operation
fmsub.s f21, f24, f1, f29, rmm # perform operation
fmsub.s f21, f24, f1, f29, rne # perform operation
fmsub.s f21, f24, f1, f29, rtz # perform operation
fmsub.s f21, f24, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x4, 0xfd7ebc81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x24ff66c8 # load x3 with value 0x24ff66c8
sw x3, 0(x2) # store 0x24ff66c8 in memory
flw f20, 0(x2) # load 0x24ff66c8 from memory into f20
fmsub.s f4, f30, f22, f20, dyn # perform operation
fmsub.s f4, f30, f22, f20, rdn # perform operation
fmsub.s f4, f30, f22, f20, rmm # perform operation
fmsub.s f4, f30, f22, f20, rne # perform operation
fmsub.s f4, f30, f22, f20, rtz # perform operation
fmsub.s f4, f30, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f30, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f30, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x20, 0xde603b38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x6b64a8f7 # load x3 with value 0x6b64a8f7
sw x3, 0(x2) # store 0x6b64a8f7 in memory
flw f1, 0(x2) # load 0x6b64a8f7 from memory into f1
fmsub.s f20, f7, f13, f1, dyn # perform operation
fmsub.s f20, f7, f13, f1, rdn # perform operation
fmsub.s f20, f7, f13, f1, rmm # perform operation
fmsub.s f20, f7, f13, f1, rne # perform operation
fmsub.s f20, f7, f13, f1, rtz # perform operation
fmsub.s f20, f7, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x3, 0xccf57562 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x5a68ca25 # load x3 with value 0x5a68ca25
sw x3, 0(x2) # store 0x5a68ca25 in memory
flw f12, 0(x2) # load 0x5a68ca25 from memory into f12
fmsub.s f3, f9, f21, f12, dyn # perform operation
fmsub.s f3, f9, f21, f12, rdn # perform operation
fmsub.s f3, f9, f21, f12, rmm # perform operation
fmsub.s f3, f9, f21, f12, rne # perform operation
fmsub.s f3, f9, f21, f12, rtz # perform operation
fmsub.s f3, f9, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x26, 0x737d9477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0xfc50d1ff # load x3 with value 0xfc50d1ff
sw x3, 0(x2) # store 0xfc50d1ff in memory
flw f17, 0(x2) # load 0xfc50d1ff from memory into f17
fmsub.s f26, f25, f31, f17, dyn # perform operation
fmsub.s f26, f25, f31, f17, rdn # perform operation
fmsub.s f26, f25, f31, f17, rmm # perform operation
fmsub.s f26, f25, f31, f17, rne # perform operation
fmsub.s f26, f25, f31, f17, rtz # perform operation
fmsub.s f26, f25, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f25, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f25, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f25, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f25, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f25, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x24, 0xee05c6e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x7eb5db4c # load x3 with value 0x7eb5db4c
sw x3, 0(x2) # store 0x7eb5db4c in memory
flw f28, 0(x2) # load 0x7eb5db4c from memory into f28
fmsub.s f24, f20, f25, f28, dyn # perform operation
fmsub.s f24, f20, f25, f28, rdn # perform operation
fmsub.s f24, f20, f25, f28, rmm # perform operation
fmsub.s f24, f20, f25, f28, rne # perform operation
fmsub.s f24, f20, f25, f28, rtz # perform operation
fmsub.s f24, f20, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x30, 0xbc008777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xeb2cf062 # load x3 with value 0xeb2cf062
sw x3, 0(x2) # store 0xeb2cf062 in memory
flw f21, 0(x2) # load 0xeb2cf062 from memory into f21
fmsub.s f30, f31, f14, f21, dyn # perform operation
fmsub.s f30, f31, f14, f21, rdn # perform operation
fmsub.s f30, f31, f14, f21, rmm # perform operation
fmsub.s f30, f31, f14, f21, rne # perform operation
fmsub.s f30, f31, f14, f21, rtz # perform operation
fmsub.s f30, f31, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f31, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f31, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f31, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f31, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f31, f14, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x26, 0x40d9d1f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xffd111d0 # load x3 with value 0xffd111d0
sw x3, 0(x2) # store 0xffd111d0 in memory
flw f18, 0(x2) # load 0xffd111d0 from memory into f18
fmsub.s f26, f6, f27, f18, dyn # perform operation
fmsub.s f26, f6, f27, f18, rdn # perform operation
fmsub.s f26, f6, f27, f18, rmm # perform operation
fmsub.s f26, f6, f27, f18, rne # perform operation
fmsub.s f26, f6, f27, f18, rtz # perform operation
fmsub.s f26, f6, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f6, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f6, f27, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x31, 0x9da68020 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x658a98fa # load x3 with value 0x658a98fa
sw x3, 0(x2) # store 0x658a98fa in memory
flw f28, 0(x2) # load 0x658a98fa from memory into f28
fmsub.s f31, f23, f10, f28, dyn # perform operation
fmsub.s f31, f23, f10, f28, rdn # perform operation
fmsub.s f31, f23, f10, f28, rmm # perform operation
fmsub.s f31, f23, f10, f28, rne # perform operation
fmsub.s f31, f23, f10, f28, rtz # perform operation
fmsub.s f31, f23, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f23, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f23, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f23, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f23, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f23, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x13, 0xd5f51efd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0xd03ab1a2 # load x3 with value 0xd03ab1a2
sw x3, 0(x2) # store 0xd03ab1a2 in memory
flw f10, 0(x2) # load 0xd03ab1a2 from memory into f10
fmsub.s f13, f6, f3, f10, dyn # perform operation
fmsub.s f13, f6, f3, f10, rdn # perform operation
fmsub.s f13, f6, f3, f10, rmm # perform operation
fmsub.s f13, f6, f3, f10, rne # perform operation
fmsub.s f13, f6, f3, f10, rtz # perform operation
fmsub.s f13, f6, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f6, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f6, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x13, 0xdf2e41a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xb797b05e # load x3 with value 0xb797b05e
sw x3, 0(x2) # store 0xb797b05e in memory
flw f28, 0(x2) # load 0xb797b05e from memory into f28
fmsub.s f13, f18, f19, f28, dyn # perform operation
fmsub.s f13, f18, f19, f28, rdn # perform operation
fmsub.s f13, f18, f19, f28, rmm # perform operation
fmsub.s f13, f18, f19, f28, rne # perform operation
fmsub.s f13, f18, f19, f28, rtz # perform operation
fmsub.s f13, f18, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f18, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f18, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x27, 0x244a9fcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x0ccace5a # load x3 with value 0x0ccace5a
sw x3, 0(x2) # store 0x0ccace5a in memory
flw f16, 0(x2) # load 0x0ccace5a from memory into f16
fmsub.s f27, f11, f13, f16, dyn # perform operation
fmsub.s f27, f11, f13, f16, rdn # perform operation
fmsub.s f27, f11, f13, f16, rmm # perform operation
fmsub.s f27, f11, f13, f16, rne # perform operation
fmsub.s f27, f11, f13, f16, rtz # perform operation
fmsub.s f27, f11, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x17, 0xeb600f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x44fdfeda # load x3 with value 0x44fdfeda
sw x3, 0(x2) # store 0x44fdfeda in memory
flw f7, 0(x2) # load 0x44fdfeda from memory into f7
fmsub.s f17, f15, f1, f7, dyn # perform operation
fmsub.s f17, f15, f1, f7, rdn # perform operation
fmsub.s f17, f15, f1, f7, rmm # perform operation
fmsub.s f17, f15, f1, f7, rne # perform operation
fmsub.s f17, f15, f1, f7, rtz # perform operation
fmsub.s f17, f15, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x6, 0xf88c3750 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x826ebbc2 # load x3 with value 0x826ebbc2
sw x3, 0(x2) # store 0x826ebbc2 in memory
flw f26, 0(x2) # load 0x826ebbc2 from memory into f26
fmsub.s f6, f5, f27, f26, dyn # perform operation
fmsub.s f6, f5, f27, f26, rdn # perform operation
fmsub.s f6, f5, f27, f26, rmm # perform operation
fmsub.s f6, f5, f27, f26, rne # perform operation
fmsub.s f6, f5, f27, f26, rtz # perform operation
fmsub.s f6, f5, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x11, 0xf560bdd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xfe8f82a7 # load x3 with value 0xfe8f82a7
sw x3, 0(x2) # store 0xfe8f82a7 in memory
flw f13, 0(x2) # load 0xfe8f82a7 from memory into f13
fmsub.s f11, f31, f7, f13, dyn # perform operation
fmsub.s f11, f31, f7, f13, rdn # perform operation
fmsub.s f11, f31, f7, f13, rmm # perform operation
fmsub.s f11, f31, f7, f13, rne # perform operation
fmsub.s f11, f31, f7, f13, rtz # perform operation
fmsub.s f11, f31, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x7, 0x778b5c1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x749d9a58 # load x3 with value 0x749d9a58
sw x3, 0(x2) # store 0x749d9a58 in memory
flw f10, 0(x2) # load 0x749d9a58 from memory into f10
fmsub.s f7, f24, f8, f10, dyn # perform operation
fmsub.s f7, f24, f8, f10, rdn # perform operation
fmsub.s f7, f24, f8, f10, rmm # perform operation
fmsub.s f7, f24, f8, f10, rne # perform operation
fmsub.s f7, f24, f8, f10, rtz # perform operation
fmsub.s f7, f24, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f24, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f24, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x29, 0x4543e01e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x979d643a # load x3 with value 0x979d643a
sw x3, 0(x2) # store 0x979d643a in memory
flw f7, 0(x2) # load 0x979d643a from memory into f7
fmsub.s f29, f23, f16, f7, dyn # perform operation
fmsub.s f29, f23, f16, f7, rdn # perform operation
fmsub.s f29, f23, f16, f7, rmm # perform operation
fmsub.s f29, f23, f16, f7, rne # perform operation
fmsub.s f29, f23, f16, f7, rtz # perform operation
fmsub.s f29, f23, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x30, 0xe2ffc4aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xad954eba # load x3 with value 0xad954eba
sw x3, 0(x2) # store 0xad954eba in memory
flw f10, 0(x2) # load 0xad954eba from memory into f10
fmsub.s f30, f18, f6, f10, dyn # perform operation
fmsub.s f30, f18, f6, f10, rdn # perform operation
fmsub.s f30, f18, f6, f10, rmm # perform operation
fmsub.s f30, f18, f6, f10, rne # perform operation
fmsub.s f30, f18, f6, f10, rtz # perform operation
fmsub.s f30, f18, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f18, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x22, 0x3f0b140e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x58694d9c # load x3 with value 0x58694d9c
sw x3, 0(x2) # store 0x58694d9c in memory
flw f27, 0(x2) # load 0x58694d9c from memory into f27
fmsub.s f22, f9, f15, f27, dyn # perform operation
fmsub.s f22, f9, f15, f27, rdn # perform operation
fmsub.s f22, f9, f15, f27, rmm # perform operation
fmsub.s f22, f9, f15, f27, rne # perform operation
fmsub.s f22, f9, f15, f27, rtz # perform operation
fmsub.s f22, f9, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x7, 0x7e1bc653 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x38a0d18b # load x3 with value 0x38a0d18b
sw x3, 0(x2) # store 0x38a0d18b in memory
flw f4, 0(x2) # load 0x38a0d18b from memory into f4
fmsub.s f7, f9, f24, f4, dyn # perform operation
fmsub.s f7, f9, f24, f4, rdn # perform operation
fmsub.s f7, f9, f24, f4, rmm # perform operation
fmsub.s f7, f9, f24, f4, rne # perform operation
fmsub.s f7, f9, f24, f4, rtz # perform operation
fmsub.s f7, f9, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f9, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f9, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f9, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f9, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f9, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x28, 0x2977c6c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x6573b1ef # load x3 with value 0x6573b1ef
sw x3, 0(x2) # store 0x6573b1ef in memory
flw f7, 0(x2) # load 0x6573b1ef from memory into f7
fmsub.s f28, f14, f2, f7, dyn # perform operation
fmsub.s f28, f14, f2, f7, rdn # perform operation
fmsub.s f28, f14, f2, f7, rmm # perform operation
fmsub.s f28, f14, f2, f7, rne # perform operation
fmsub.s f28, f14, f2, f7, rtz # perform operation
fmsub.s f28, f14, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f14, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f14, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f14, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f14, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f14, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x27, 0x083aac3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0xa2ad3add # load x3 with value 0xa2ad3add
sw x3, 0(x2) # store 0xa2ad3add in memory
flw f20, 0(x2) # load 0xa2ad3add from memory into f20
fmsub.s f27, f24, f12, f20, dyn # perform operation
fmsub.s f27, f24, f12, f20, rdn # perform operation
fmsub.s f27, f24, f12, f20, rmm # perform operation
fmsub.s f27, f24, f12, f20, rne # perform operation
fmsub.s f27, f24, f12, f20, rtz # perform operation
fmsub.s f27, f24, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f24, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f24, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x8, 0xdcac0fed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xb601dcc4 # load x3 with value 0xb601dcc4
sw x3, 0(x2) # store 0xb601dcc4 in memory
flw f15, 0(x2) # load 0xb601dcc4 from memory into f15
fmsub.s f8, f28, f16, f15, dyn # perform operation
fmsub.s f8, f28, f16, f15, rdn # perform operation
fmsub.s f8, f28, f16, f15, rmm # perform operation
fmsub.s f8, f28, f16, f15, rne # perform operation
fmsub.s f8, f28, f16, f15, rtz # perform operation
fmsub.s f8, f28, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f28, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f28, f16, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x19, 0x0aee0ca7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x7b4eaa2a # load x3 with value 0x7b4eaa2a
sw x3, 0(x2) # store 0x7b4eaa2a in memory
flw f12, 0(x2) # load 0x7b4eaa2a from memory into f12
fmsub.s f19, f16, f5, f12, dyn # perform operation
fmsub.s f19, f16, f5, f12, rdn # perform operation
fmsub.s f19, f16, f5, f12, rmm # perform operation
fmsub.s f19, f16, f5, f12, rne # perform operation
fmsub.s f19, f16, f5, f12, rtz # perform operation
fmsub.s f19, f16, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f5, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x22, 0x6502fadf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x22a19cb3 # load x3 with value 0x22a19cb3
sw x3, 0(x2) # store 0x22a19cb3 in memory
flw f15, 0(x2) # load 0x22a19cb3 from memory into f15
fmsub.s f22, f21, f2, f15, dyn # perform operation
fmsub.s f22, f21, f2, f15, rdn # perform operation
fmsub.s f22, f21, f2, f15, rmm # perform operation
fmsub.s f22, f21, f2, f15, rne # perform operation
fmsub.s f22, f21, f2, f15, rtz # perform operation
fmsub.s f22, f21, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f21, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x3, 0x85785ccb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xdf5b69eb # load x3 with value 0xdf5b69eb
sw x3, 0(x2) # store 0xdf5b69eb in memory
flw f22, 0(x2) # load 0xdf5b69eb from memory into f22
fmsub.s f3, f12, f29, f22, dyn # perform operation
fmsub.s f3, f12, f29, f22, rdn # perform operation
fmsub.s f3, f12, f29, f22, rmm # perform operation
fmsub.s f3, f12, f29, f22, rne # perform operation
fmsub.s f3, f12, f29, f22, rtz # perform operation
fmsub.s f3, f12, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f12, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f12, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f12, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f12, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f12, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x12, 0x7fa6a8bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x656b72a2 # load x3 with value 0x656b72a2
sw x3, 0(x2) # store 0x656b72a2 in memory
flw f30, 0(x2) # load 0x656b72a2 from memory into f30
fmsub.s f12, f31, f24, f30, dyn # perform operation
fmsub.s f12, f31, f24, f30, rdn # perform operation
fmsub.s f12, f31, f24, f30, rmm # perform operation
fmsub.s f12, f31, f24, f30, rne # perform operation
fmsub.s f12, f31, f24, f30, rtz # perform operation
fmsub.s f12, f31, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f31, f24, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x21, 0xd447e4f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0xcb49f36c # load x3 with value 0xcb49f36c
sw x3, 0(x2) # store 0xcb49f36c in memory
flw f18, 0(x2) # load 0xcb49f36c from memory into f18
fmsub.s f21, f13, f27, f18, dyn # perform operation
fmsub.s f21, f13, f27, f18, rdn # perform operation
fmsub.s f21, f13, f27, f18, rmm # perform operation
fmsub.s f21, f13, f27, f18, rne # perform operation
fmsub.s f21, f13, f27, f18, rtz # perform operation
fmsub.s f21, f13, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f13, f27, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x20, 0x8db8aa13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x8472c04d # load x3 with value 0x8472c04d
sw x3, 0(x2) # store 0x8472c04d in memory
flw f13, 0(x2) # load 0x8472c04d from memory into f13
fmsub.s f20, f23, f4, f13, dyn # perform operation
fmsub.s f20, f23, f4, f13, rdn # perform operation
fmsub.s f20, f23, f4, f13, rmm # perform operation
fmsub.s f20, f23, f4, f13, rne # perform operation
fmsub.s f20, f23, f4, f13, rtz # perform operation
fmsub.s f20, f23, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f23, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f23, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f23, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f23, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f23, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x25, 0xd2c8e824 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x31970c96 # load x3 with value 0x31970c96
sw x3, 0(x2) # store 0x31970c96 in memory
flw f15, 0(x2) # load 0x31970c96 from memory into f15
fmsub.s f25, f23, f17, f15, dyn # perform operation
fmsub.s f25, f23, f17, f15, rdn # perform operation
fmsub.s f25, f23, f17, f15, rmm # perform operation
fmsub.s f25, f23, f17, f15, rne # perform operation
fmsub.s f25, f23, f17, f15, rtz # perform operation
fmsub.s f25, f23, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x21, 0x56e590ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0x2b59d200 # load x3 with value 0x2b59d200
sw x3, 0(x2) # store 0x2b59d200 in memory
flw f22, 0(x2) # load 0x2b59d200 from memory into f22
fmsub.s f21, f25, f15, f22, dyn # perform operation
fmsub.s f21, f25, f15, f22, rdn # perform operation
fmsub.s f21, f25, f15, f22, rmm # perform operation
fmsub.s f21, f25, f15, f22, rne # perform operation
fmsub.s f21, f25, f15, f22, rtz # perform operation
fmsub.s f21, f25, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x18, 0x2a634b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x3a06a474 # load x3 with value 0x3a06a474
sw x3, 0(x2) # store 0x3a06a474 in memory
flw f11, 0(x2) # load 0x3a06a474 from memory into f11
fmsub.s f18, f25, f8, f11, dyn # perform operation
fmsub.s f18, f25, f8, f11, rdn # perform operation
fmsub.s f18, f25, f8, f11, rmm # perform operation
fmsub.s f18, f25, f8, f11, rne # perform operation
fmsub.s f18, f25, f8, f11, rtz # perform operation
fmsub.s f18, f25, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f25, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f25, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x17, 0xe49ab7c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0xfed2666a # load x3 with value 0xfed2666a
sw x3, 0(x2) # store 0xfed2666a in memory
flw f21, 0(x2) # load 0xfed2666a from memory into f21
fmsub.s f17, f13, f27, f21, dyn # perform operation
fmsub.s f17, f13, f27, f21, rdn # perform operation
fmsub.s f17, f13, f27, f21, rmm # perform operation
fmsub.s f17, f13, f27, f21, rne # perform operation
fmsub.s f17, f13, f27, f21, rtz # perform operation
fmsub.s f17, f13, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x5, 0xdce4fa4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x6c799eaf # load x3 with value 0x6c799eaf
sw x3, 0(x2) # store 0x6c799eaf in memory
flw f3, 0(x2) # load 0x6c799eaf from memory into f3
fmsub.s f5, f21, f16, f3, dyn # perform operation
fmsub.s f5, f21, f16, f3, rdn # perform operation
fmsub.s f5, f21, f16, f3, rmm # perform operation
fmsub.s f5, f21, f16, f3, rne # perform operation
fmsub.s f5, f21, f16, f3, rtz # perform operation
fmsub.s f5, f21, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x17, 0x6bd7173f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0xfc409fb2 # load x3 with value 0xfc409fb2
sw x3, 0(x2) # store 0xfc409fb2 in memory
flw f11, 0(x2) # load 0xfc409fb2 from memory into f11
fmsub.s f17, f16, f13, f11, dyn # perform operation
fmsub.s f17, f16, f13, f11, rdn # perform operation
fmsub.s f17, f16, f13, f11, rmm # perform operation
fmsub.s f17, f16, f13, f11, rne # perform operation
fmsub.s f17, f16, f13, f11, rtz # perform operation
fmsub.s f17, f16, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f16, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f16, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x15, 0x9e02f6d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x764dd23c # load x3 with value 0x764dd23c
sw x3, 0(x2) # store 0x764dd23c in memory
flw f3, 0(x2) # load 0x764dd23c from memory into f3
fmsub.s f15, f18, f2, f3, dyn # perform operation
fmsub.s f15, f18, f2, f3, rdn # perform operation
fmsub.s f15, f18, f2, f3, rmm # perform operation
fmsub.s f15, f18, f2, f3, rne # perform operation
fmsub.s f15, f18, f2, f3, rtz # perform operation
fmsub.s f15, f18, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f18, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x18, 0xfb11508e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x4a2d1420 # load x3 with value 0x4a2d1420
sw x3, 0(x2) # store 0x4a2d1420 in memory
flw f28, 0(x2) # load 0x4a2d1420 from memory into f28
fmsub.s f18, f19, f9, f28, dyn # perform operation
fmsub.s f18, f19, f9, f28, rdn # perform operation
fmsub.s f18, f19, f9, f28, rmm # perform operation
fmsub.s f18, f19, f9, f28, rne # perform operation
fmsub.s f18, f19, f9, f28, rtz # perform operation
fmsub.s f18, f19, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x19, 0x59ac9e76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xd9ccfaf4 # load x3 with value 0xd9ccfaf4
sw x3, 0(x2) # store 0xd9ccfaf4 in memory
flw f12, 0(x2) # load 0xd9ccfaf4 from memory into f12
fmsub.s f19, f25, f30, f12, dyn # perform operation
fmsub.s f19, f25, f30, f12, rdn # perform operation
fmsub.s f19, f25, f30, f12, rmm # perform operation
fmsub.s f19, f25, f30, f12, rne # perform operation
fmsub.s f19, f25, f30, f12, rtz # perform operation
fmsub.s f19, f25, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x16, 0x4eade531 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0xdd6599eb # load x3 with value 0xdd6599eb
sw x3, 0(x2) # store 0xdd6599eb in memory
flw f21, 0(x2) # load 0xdd6599eb from memory into f21
fmsub.s f16, f26, f30, f21, dyn # perform operation
fmsub.s f16, f26, f30, f21, rdn # perform operation
fmsub.s f16, f26, f30, f21, rmm # perform operation
fmsub.s f16, f26, f30, f21, rne # perform operation
fmsub.s f16, f26, f30, f21, rtz # perform operation
fmsub.s f16, f26, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x8, 0x3f7bda2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xec26c42f # load x3 with value 0xec26c42f
sw x3, 0(x2) # store 0xec26c42f in memory
flw f3, 0(x2) # load 0xec26c42f from memory into f3
fmsub.s f8, f29, f15, f3, dyn # perform operation
fmsub.s f8, f29, f15, f3, rdn # perform operation
fmsub.s f8, f29, f15, f3, rmm # perform operation
fmsub.s f8, f29, f15, f3, rne # perform operation
fmsub.s f8, f29, f15, f3, rtz # perform operation
fmsub.s f8, f29, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f29, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f29, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x4, 0x9653f86b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x762f0cc9 # load x3 with value 0x762f0cc9
sw x3, 0(x2) # store 0x762f0cc9 in memory
flw f9, 0(x2) # load 0x762f0cc9 from memory into f9
fmsub.s f4, f24, f13, f9, dyn # perform operation
fmsub.s f4, f24, f13, f9, rdn # perform operation
fmsub.s f4, f24, f13, f9, rmm # perform operation
fmsub.s f4, f24, f13, f9, rne # perform operation
fmsub.s f4, f24, f13, f9, rtz # perform operation
fmsub.s f4, f24, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f24, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f24, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x25, 0xdbee411e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x6ec7eece # load x3 with value 0x6ec7eece
sw x3, 0(x2) # store 0x6ec7eece in memory
flw f3, 0(x2) # load 0x6ec7eece from memory into f3
fmsub.s f25, f6, f9, f3, dyn # perform operation
fmsub.s f25, f6, f9, f3, rdn # perform operation
fmsub.s f25, f6, f9, f3, rmm # perform operation
fmsub.s f25, f6, f9, f3, rne # perform operation
fmsub.s f25, f6, f9, f3, rtz # perform operation
fmsub.s f25, f6, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f6, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f6, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f6, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f6, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f6, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x4, 0x16c2a0c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x63a93bda # load x3 with value 0x63a93bda
sw x3, 0(x2) # store 0x63a93bda in memory
flw f11, 0(x2) # load 0x63a93bda from memory into f11
fmsub.s f4, f21, f14, f11, dyn # perform operation
fmsub.s f4, f21, f14, f11, rdn # perform operation
fmsub.s f4, f21, f14, f11, rmm # perform operation
fmsub.s f4, f21, f14, f11, rne # perform operation
fmsub.s f4, f21, f14, f11, rtz # perform operation
fmsub.s f4, f21, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f21, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x21, 0xa9f9308b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x2629bb4f # load x3 with value 0x2629bb4f
sw x3, 0(x2) # store 0x2629bb4f in memory
flw f1, 0(x2) # load 0x2629bb4f from memory into f1
fmsub.s f21, f14, f6, f1, dyn # perform operation
fmsub.s f21, f14, f6, f1, rdn # perform operation
fmsub.s f21, f14, f6, f1, rmm # perform operation
fmsub.s f21, f14, f6, f1, rne # perform operation
fmsub.s f21, f14, f6, f1, rtz # perform operation
fmsub.s f21, f14, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f14, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f14, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f14, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f14, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f14, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x7, 0x0a90c572 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x0bf8c534 # load x3 with value 0x0bf8c534
sw x3, 0(x2) # store 0x0bf8c534 in memory
flw f18, 0(x2) # load 0x0bf8c534 from memory into f18
fmsub.s f7, f21, f6, f18, dyn # perform operation
fmsub.s f7, f21, f6, f18, rdn # perform operation
fmsub.s f7, f21, f6, f18, rmm # perform operation
fmsub.s f7, f21, f6, f18, rne # perform operation
fmsub.s f7, f21, f6, f18, rtz # perform operation
fmsub.s f7, f21, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f21, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f21, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f21, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f21, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f21, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x25, 0x740e32f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xe0fb9ff2 # load x3 with value 0xe0fb9ff2
sw x3, 0(x2) # store 0xe0fb9ff2 in memory
flw f3, 0(x2) # load 0xe0fb9ff2 from memory into f3
fmsub.s f25, f1, f8, f3, dyn # perform operation
fmsub.s f25, f1, f8, f3, rdn # perform operation
fmsub.s f25, f1, f8, f3, rmm # perform operation
fmsub.s f25, f1, f8, f3, rne # perform operation
fmsub.s f25, f1, f8, f3, rtz # perform operation
fmsub.s f25, f1, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x19, 0x8e2efc70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x1cb1e4aa # load x3 with value 0x1cb1e4aa
sw x3, 0(x2) # store 0x1cb1e4aa in memory
flw f13, 0(x2) # load 0x1cb1e4aa from memory into f13
fmsub.s f19, f3, f9, f13, dyn # perform operation
fmsub.s f19, f3, f9, f13, rdn # perform operation
fmsub.s f19, f3, f9, f13, rmm # perform operation
fmsub.s f19, f3, f9, f13, rne # perform operation
fmsub.s f19, f3, f9, f13, rtz # perform operation
fmsub.s f19, f3, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x24, 0x3790e669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x44ca6493 # load x3 with value 0x44ca6493
sw x3, 0(x2) # store 0x44ca6493 in memory
flw f4, 0(x2) # load 0x44ca6493 from memory into f4
fmsub.s f24, f19, f11, f4, dyn # perform operation
fmsub.s f24, f19, f11, f4, rdn # perform operation
fmsub.s f24, f19, f11, f4, rmm # perform operation
fmsub.s f24, f19, f11, f4, rne # perform operation
fmsub.s f24, f19, f11, f4, rtz # perform operation
fmsub.s f24, f19, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f19, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x20, 0xcca221ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x55615b62 # load x3 with value 0x55615b62
sw x3, 0(x2) # store 0x55615b62 in memory
flw f4, 0(x2) # load 0x55615b62 from memory into f4
fmsub.s f20, f13, f30, f4, dyn # perform operation
fmsub.s f20, f13, f30, f4, rdn # perform operation
fmsub.s f20, f13, f30, f4, rmm # perform operation
fmsub.s f20, f13, f30, f4, rne # perform operation
fmsub.s f20, f13, f30, f4, rtz # perform operation
fmsub.s f20, f13, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f13, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f13, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f13, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f13, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f13, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x11, 0xb9fc7ac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x63b7d997 # load x3 with value 0x63b7d997
sw x3, 0(x2) # store 0x63b7d997 in memory
flw f15, 0(x2) # load 0x63b7d997 from memory into f15
fmsub.s f11, f9, f20, f15, dyn # perform operation
fmsub.s f11, f9, f20, f15, rdn # perform operation
fmsub.s f11, f9, f20, f15, rmm # perform operation
fmsub.s f11, f9, f20, f15, rne # perform operation
fmsub.s f11, f9, f20, f15, rtz # perform operation
fmsub.s f11, f9, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x18, 0x008dc5ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x8c39efed # load x3 with value 0x8c39efed
sw x3, 0(x2) # store 0x8c39efed in memory
flw f11, 0(x2) # load 0x8c39efed from memory into f11
fmsub.s f18, f21, f9, f11, dyn # perform operation
fmsub.s f18, f21, f9, f11, rdn # perform operation
fmsub.s f18, f21, f9, f11, rmm # perform operation
fmsub.s f18, f21, f9, f11, rne # perform operation
fmsub.s f18, f21, f9, f11, rtz # perform operation
fmsub.s f18, f21, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x3, 0xf0cc258c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xa77f0229 # load x3 with value 0xa77f0229
sw x3, 0(x2) # store 0xa77f0229 in memory
flw f4, 0(x2) # load 0xa77f0229 from memory into f4
fmsub.s f3, f6, f20, f4, dyn # perform operation
fmsub.s f3, f6, f20, f4, rdn # perform operation
fmsub.s f3, f6, f20, f4, rmm # perform operation
fmsub.s f3, f6, f20, f4, rne # perform operation
fmsub.s f3, f6, f20, f4, rtz # perform operation
fmsub.s f3, f6, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x25, 0x0df4d055 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0xf21c773b # load x3 with value 0xf21c773b
sw x3, 0(x2) # store 0xf21c773b in memory
flw f19, 0(x2) # load 0xf21c773b from memory into f19
fmsub.s f25, f9, f13, f19, dyn # perform operation
fmsub.s f25, f9, f13, f19, rdn # perform operation
fmsub.s f25, f9, f13, f19, rmm # perform operation
fmsub.s f25, f9, f13, f19, rne # perform operation
fmsub.s f25, f9, f13, f19, rtz # perform operation
fmsub.s f25, f9, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x3, 0xeade12a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0xad1c2802 # load x3 with value 0xad1c2802
sw x3, 0(x2) # store 0xad1c2802 in memory
flw f26, 0(x2) # load 0xad1c2802 from memory into f26
fmsub.s f3, f16, f28, f26, dyn # perform operation
fmsub.s f3, f16, f28, f26, rdn # perform operation
fmsub.s f3, f16, f28, f26, rmm # perform operation
fmsub.s f3, f16, f28, f26, rne # perform operation
fmsub.s f3, f16, f28, f26, rtz # perform operation
fmsub.s f3, f16, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f16, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f16, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x30, 0x7bd82b68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xa2782855 # load x3 with value 0xa2782855
sw x3, 0(x2) # store 0xa2782855 in memory
flw f4, 0(x2) # load 0xa2782855 from memory into f4
fmsub.s f30, f19, f22, f4, dyn # perform operation
fmsub.s f30, f19, f22, f4, rdn # perform operation
fmsub.s f30, f19, f22, f4, rmm # perform operation
fmsub.s f30, f19, f22, f4, rne # perform operation
fmsub.s f30, f19, f22, f4, rtz # perform operation
fmsub.s f30, f19, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x13, 0x5a147bd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0xde0c984b # load x3 with value 0xde0c984b
sw x3, 0(x2) # store 0xde0c984b in memory
flw f19, 0(x2) # load 0xde0c984b from memory into f19
fmsub.s f13, f15, f10, f19, dyn # perform operation
fmsub.s f13, f15, f10, f19, rdn # perform operation
fmsub.s f13, f15, f10, f19, rmm # perform operation
fmsub.s f13, f15, f10, f19, rne # perform operation
fmsub.s f13, f15, f10, f19, rtz # perform operation
fmsub.s f13, f15, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x13, 0xb046a53c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xb8cdab74 # load x3 with value 0xb8cdab74
sw x3, 0(x2) # store 0xb8cdab74 in memory
flw f1, 0(x2) # load 0xb8cdab74 from memory into f1
fmsub.s f13, f9, f8, f1, dyn # perform operation
fmsub.s f13, f9, f8, f1, rdn # perform operation
fmsub.s f13, f9, f8, f1, rmm # perform operation
fmsub.s f13, f9, f8, f1, rne # perform operation
fmsub.s f13, f9, f8, f1, rtz # perform operation
fmsub.s f13, f9, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f9, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f9, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f9, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f9, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f9, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x1, 0xf86d58fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x46512670 # load x3 with value 0x46512670
sw x3, 0(x2) # store 0x46512670 in memory
flw f14, 0(x2) # load 0x46512670 from memory into f14
fmsub.s f1, f30, f8, f14, dyn # perform operation
fmsub.s f1, f30, f8, f14, rdn # perform operation
fmsub.s f1, f30, f8, f14, rmm # perform operation
fmsub.s f1, f30, f8, f14, rne # perform operation
fmsub.s f1, f30, f8, f14, rtz # perform operation
fmsub.s f1, f30, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x26, 0x3f3ddac6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x0e9aa62f # load x3 with value 0x0e9aa62f
sw x3, 0(x2) # store 0x0e9aa62f in memory
flw f2, 0(x2) # load 0x0e9aa62f from memory into f2
fmsub.s f26, f12, f27, f2, dyn # perform operation
fmsub.s f26, f12, f27, f2, rdn # perform operation
fmsub.s f26, f12, f27, f2, rmm # perform operation
fmsub.s f26, f12, f27, f2, rne # perform operation
fmsub.s f26, f12, f27, f2, rtz # perform operation
fmsub.s f26, f12, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f12, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f12, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f12, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f12, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f12, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x30, 0x8cc5e14d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xcbcbd20b # load x3 with value 0xcbcbd20b
sw x3, 0(x2) # store 0xcbcbd20b in memory
flw f11, 0(x2) # load 0xcbcbd20b from memory into f11
fmsub.s f30, f8, f22, f11, dyn # perform operation
fmsub.s f30, f8, f22, f11, rdn # perform operation
fmsub.s f30, f8, f22, f11, rmm # perform operation
fmsub.s f30, f8, f22, f11, rne # perform operation
fmsub.s f30, f8, f22, f11, rtz # perform operation
fmsub.s f30, f8, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x15, 0x496132b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xb1e08de3 # load x3 with value 0xb1e08de3
sw x3, 0(x2) # store 0xb1e08de3 in memory
flw f27, 0(x2) # load 0xb1e08de3 from memory into f27
fmsub.s f15, f5, f20, f27, dyn # perform operation
fmsub.s f15, f5, f20, f27, rdn # perform operation
fmsub.s f15, f5, f20, f27, rmm # perform operation
fmsub.s f15, f5, f20, f27, rne # perform operation
fmsub.s f15, f5, f20, f27, rtz # perform operation
fmsub.s f15, f5, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x17, 0x9f9bc575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x41d8969b # load x3 with value 0x41d8969b
sw x3, 0(x2) # store 0x41d8969b in memory
flw f11, 0(x2) # load 0x41d8969b from memory into f11
fmsub.s f17, f27, f22, f11, dyn # perform operation
fmsub.s f17, f27, f22, f11, rdn # perform operation
fmsub.s f17, f27, f22, f11, rmm # perform operation
fmsub.s f17, f27, f22, f11, rne # perform operation
fmsub.s f17, f27, f22, f11, rtz # perform operation
fmsub.s f17, f27, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f27, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x4, 0xce8571f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xbfe7d6b5 # load x3 with value 0xbfe7d6b5
sw x3, 0(x2) # store 0xbfe7d6b5 in memory
flw f17, 0(x2) # load 0xbfe7d6b5 from memory into f17
fmsub.s f4, f28, f20, f17, dyn # perform operation
fmsub.s f4, f28, f20, f17, rdn # perform operation
fmsub.s f4, f28, f20, f17, rmm # perform operation
fmsub.s f4, f28, f20, f17, rne # perform operation
fmsub.s f4, f28, f20, f17, rtz # perform operation
fmsub.s f4, f28, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f28, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x13, 0x935db54c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0xa1b30b07 # load x3 with value 0xa1b30b07
sw x3, 0(x2) # store 0xa1b30b07 in memory
flw f19, 0(x2) # load 0xa1b30b07 from memory into f19
fmsub.s f13, f1, f5, f19, dyn # perform operation
fmsub.s f13, f1, f5, f19, rdn # perform operation
fmsub.s f13, f1, f5, f19, rmm # perform operation
fmsub.s f13, f1, f5, f19, rne # perform operation
fmsub.s f13, f1, f5, f19, rtz # perform operation
fmsub.s f13, f1, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f1, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f1, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x27, 0xe533df7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0xdf0c4fbb # load x3 with value 0xdf0c4fbb
sw x3, 0(x2) # store 0xdf0c4fbb in memory
flw f2, 0(x2) # load 0xdf0c4fbb from memory into f2
fmsub.s f27, f25, f23, f2, dyn # perform operation
fmsub.s f27, f25, f23, f2, rdn # perform operation
fmsub.s f27, f25, f23, f2, rmm # perform operation
fmsub.s f27, f25, f23, f2, rne # perform operation
fmsub.s f27, f25, f23, f2, rtz # perform operation
fmsub.s f27, f25, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f25, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f25, f23, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x6, 0x70d9a666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xd47e614d # load x3 with value 0xd47e614d
sw x3, 0(x2) # store 0xd47e614d in memory
flw f8, 0(x2) # load 0xd47e614d from memory into f8
fmsub.s f6, f26, f11, f8, dyn # perform operation
fmsub.s f6, f26, f11, f8, rdn # perform operation
fmsub.s f6, f26, f11, f8, rmm # perform operation
fmsub.s f6, f26, f11, f8, rne # perform operation
fmsub.s f6, f26, f11, f8, rtz # perform operation
fmsub.s f6, f26, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x11, 0x4e021298 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0xab969478 # load x3 with value 0xab969478
sw x3, 0(x2) # store 0xab969478 in memory
flw f26, 0(x2) # load 0xab969478 from memory into f26
fmsub.s f11, f10, f31, f26, dyn # perform operation
fmsub.s f11, f10, f31, f26, rdn # perform operation
fmsub.s f11, f10, f31, f26, rmm # perform operation
fmsub.s f11, f10, f31, f26, rne # perform operation
fmsub.s f11, f10, f31, f26, rtz # perform operation
fmsub.s f11, f10, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f10, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f10, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f10, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f10, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f10, f31, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x16, 0x5b13f50a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x17167605 # load x3 with value 0x17167605
sw x3, 0(x2) # store 0x17167605 in memory
flw f27, 0(x2) # load 0x17167605 from memory into f27
fmsub.s f16, f1, f13, f27, dyn # perform operation
fmsub.s f16, f1, f13, f27, rdn # perform operation
fmsub.s f16, f1, f13, f27, rmm # perform operation
fmsub.s f16, f1, f13, f27, rne # perform operation
fmsub.s f16, f1, f13, f27, rtz # perform operation
fmsub.s f16, f1, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f1, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x18, 0xfd9622a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x831eb7d0 # load x3 with value 0x831eb7d0
sw x3, 0(x2) # store 0x831eb7d0 in memory
flw f12, 0(x2) # load 0x831eb7d0 from memory into f12
fmsub.s f18, f30, f23, f12, dyn # perform operation
fmsub.s f18, f30, f23, f12, rdn # perform operation
fmsub.s f18, f30, f23, f12, rmm # perform operation
fmsub.s f18, f30, f23, f12, rne # perform operation
fmsub.s f18, f30, f23, f12, rtz # perform operation
fmsub.s f18, f30, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x3, 0x7a781669 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x6aee32ec # load x3 with value 0x6aee32ec
sw x3, 0(x2) # store 0x6aee32ec in memory
flw f15, 0(x2) # load 0x6aee32ec from memory into f15
fmsub.s f3, f6, f19, f15, dyn # perform operation
fmsub.s f3, f6, f19, f15, rdn # perform operation
fmsub.s f3, f6, f19, f15, rmm # perform operation
fmsub.s f3, f6, f19, f15, rne # perform operation
fmsub.s f3, f6, f19, f15, rtz # perform operation
fmsub.s f3, f6, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x14, 0x0f93e7f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x2c2b592a # load x3 with value 0x2c2b592a
sw x3, 0(x2) # store 0x2c2b592a in memory
flw f25, 0(x2) # load 0x2c2b592a from memory into f25
fmsub.s f14, f12, f27, f25, dyn # perform operation
fmsub.s f14, f12, f27, f25, rdn # perform operation
fmsub.s f14, f12, f27, f25, rmm # perform operation
fmsub.s f14, f12, f27, f25, rne # perform operation
fmsub.s f14, f12, f27, f25, rtz # perform operation
fmsub.s f14, f12, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x8, 0x0dace770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xb5e0f6da # load x3 with value 0xb5e0f6da
sw x3, 0(x2) # store 0xb5e0f6da in memory
flw f21, 0(x2) # load 0xb5e0f6da from memory into f21
fmsub.s f8, f26, f18, f21, dyn # perform operation
fmsub.s f8, f26, f18, f21, rdn # perform operation
fmsub.s f8, f26, f18, f21, rmm # perform operation
fmsub.s f8, f26, f18, f21, rne # perform operation
fmsub.s f8, f26, f18, f21, rtz # perform operation
fmsub.s f8, f26, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f26, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x9, 0x6f4f2ed9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x7a20d045 # load x3 with value 0x7a20d045
sw x3, 0(x2) # store 0x7a20d045 in memory
flw f5, 0(x2) # load 0x7a20d045 from memory into f5
fmsub.s f9, f21, f18, f5, dyn # perform operation
fmsub.s f9, f21, f18, f5, rdn # perform operation
fmsub.s f9, f21, f18, f5, rmm # perform operation
fmsub.s f9, f21, f18, f5, rne # perform operation
fmsub.s f9, f21, f18, f5, rtz # perform operation
fmsub.s f9, f21, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f21, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f21, f18, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x23, 0x352d7cb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0xdb172d9a # load x3 with value 0xdb172d9a
sw x3, 0(x2) # store 0xdb172d9a in memory
flw f7, 0(x2) # load 0xdb172d9a from memory into f7
fmsub.s f23, f5, f14, f7, dyn # perform operation
fmsub.s f23, f5, f14, f7, rdn # perform operation
fmsub.s f23, f5, f14, f7, rmm # perform operation
fmsub.s f23, f5, f14, f7, rne # perform operation
fmsub.s f23, f5, f14, f7, rtz # perform operation
fmsub.s f23, f5, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f5, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f5, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x22, 0x449e12af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x1384a122 # load x3 with value 0x1384a122
sw x3, 0(x2) # store 0x1384a122 in memory
flw f24, 0(x2) # load 0x1384a122 from memory into f24
fmsub.s f22, f12, f5, f24, dyn # perform operation
fmsub.s f22, f12, f5, f24, rdn # perform operation
fmsub.s f22, f12, f5, f24, rmm # perform operation
fmsub.s f22, f12, f5, f24, rne # perform operation
fmsub.s f22, f12, f5, f24, rtz # perform operation
fmsub.s f22, f12, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f12, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f12, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x26, 0xe33fc32e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x2da929f6 # load x3 with value 0x2da929f6
sw x3, 0(x2) # store 0x2da929f6 in memory
flw f18, 0(x2) # load 0x2da929f6 from memory into f18
fmsub.s f26, f31, f30, f18, dyn # perform operation
fmsub.s f26, f31, f30, f18, rdn # perform operation
fmsub.s f26, f31, f30, f18, rmm # perform operation
fmsub.s f26, f31, f30, f18, rne # perform operation
fmsub.s f26, f31, f30, f18, rtz # perform operation
fmsub.s f26, f31, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f31, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f31, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f31, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f31, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f31, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x22, 0x41189ab4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x07e2a441 # load x3 with value 0x07e2a441
sw x3, 0(x2) # store 0x07e2a441 in memory
flw f30, 0(x2) # load 0x07e2a441 from memory into f30
fmsub.s f22, f23, f11, f30, dyn # perform operation
fmsub.s f22, f23, f11, f30, rdn # perform operation
fmsub.s f22, f23, f11, f30, rmm # perform operation
fmsub.s f22, f23, f11, f30, rne # perform operation
fmsub.s f22, f23, f11, f30, rtz # perform operation
fmsub.s f22, f23, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x3, 0xbceee839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xdcc1309a # load x3 with value 0xdcc1309a
sw x3, 0(x2) # store 0xdcc1309a in memory
flw f10, 0(x2) # load 0xdcc1309a from memory into f10
fmsub.s f3, f11, f5, f10, dyn # perform operation
fmsub.s f3, f11, f5, f10, rdn # perform operation
fmsub.s f3, f11, f5, f10, rmm # perform operation
fmsub.s f3, f11, f5, f10, rne # perform operation
fmsub.s f3, f11, f5, f10, rtz # perform operation
fmsub.s f3, f11, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x31, 0x93523978 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x0a52f936 # load x3 with value 0x0a52f936
sw x3, 0(x2) # store 0x0a52f936 in memory
flw f5, 0(x2) # load 0x0a52f936 from memory into f5
fmsub.s f31, f26, f4, f5, dyn # perform operation
fmsub.s f31, f26, f4, f5, rdn # perform operation
fmsub.s f31, f26, f4, f5, rmm # perform operation
fmsub.s f31, f26, f4, f5, rne # perform operation
fmsub.s f31, f26, f4, f5, rtz # perform operation
fmsub.s f31, f26, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f26, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f26, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x16, 0x8e0c73a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0xeeb1c340 # load x3 with value 0xeeb1c340
sw x3, 0(x2) # store 0xeeb1c340 in memory
flw f30, 0(x2) # load 0xeeb1c340 from memory into f30
fmsub.s f16, f12, f1, f30, dyn # perform operation
fmsub.s f16, f12, f1, f30, rdn # perform operation
fmsub.s f16, f12, f1, f30, rmm # perform operation
fmsub.s f16, f12, f1, f30, rne # perform operation
fmsub.s f16, f12, f1, f30, rtz # perform operation
fmsub.s f16, f12, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x30, 0x3429db4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xd0528adf # load x3 with value 0xd0528adf
sw x3, 0(x2) # store 0xd0528adf in memory
flw f10, 0(x2) # load 0xd0528adf from memory into f10
fmsub.s f30, f4, f28, f10, dyn # perform operation
fmsub.s f30, f4, f28, f10, rdn # perform operation
fmsub.s f30, f4, f28, f10, rmm # perform operation
fmsub.s f30, f4, f28, f10, rne # perform operation
fmsub.s f30, f4, f28, f10, rtz # perform operation
fmsub.s f30, f4, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f4, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f4, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f4, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f4, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f4, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x23, 0x65b46147 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x66853bf0 # load x3 with value 0x66853bf0
sw x3, 0(x2) # store 0x66853bf0 in memory
flw f24, 0(x2) # load 0x66853bf0 from memory into f24
fmsub.s f23, f27, f6, f24, dyn # perform operation
fmsub.s f23, f27, f6, f24, rdn # perform operation
fmsub.s f23, f27, f6, f24, rmm # perform operation
fmsub.s f23, f27, f6, f24, rne # perform operation
fmsub.s f23, f27, f6, f24, rtz # perform operation
fmsub.s f23, f27, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f27, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x11, 0x4d5bee0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xf4e34617 # load x3 with value 0xf4e34617
sw x3, 0(x2) # store 0xf4e34617 in memory
flw f25, 0(x2) # load 0xf4e34617 from memory into f25
fmsub.s f11, f9, f7, f25, dyn # perform operation
fmsub.s f11, f9, f7, f25, rdn # perform operation
fmsub.s f11, f9, f7, f25, rmm # perform operation
fmsub.s f11, f9, f7, f25, rne # perform operation
fmsub.s f11, f9, f7, f25, rtz # perform operation
fmsub.s f11, f9, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x3, 0xef8a31f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xf1a75a7b # load x3 with value 0xf1a75a7b
sw x3, 0(x2) # store 0xf1a75a7b in memory
flw f16, 0(x2) # load 0xf1a75a7b from memory into f16
fmsub.s f3, f25, f22, f16, dyn # perform operation
fmsub.s f3, f25, f22, f16, rdn # perform operation
fmsub.s f3, f25, f22, f16, rmm # perform operation
fmsub.s f3, f25, f22, f16, rne # perform operation
fmsub.s f3, f25, f22, f16, rtz # perform operation
fmsub.s f3, f25, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f25, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f25, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x9, 0x7e68b8ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x641ff4a4 # load x3 with value 0x641ff4a4
sw x3, 0(x2) # store 0x641ff4a4 in memory
flw f19, 0(x2) # load 0x641ff4a4 from memory into f19
fmsub.s f9, f13, f10, f19, dyn # perform operation
fmsub.s f9, f13, f10, f19, rdn # perform operation
fmsub.s f9, f13, f10, f19, rmm # perform operation
fmsub.s f9, f13, f10, f19, rne # perform operation
fmsub.s f9, f13, f10, f19, rtz # perform operation
fmsub.s f9, f13, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f13, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f13, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f13, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f13, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f13, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x5, 0xc151ce2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x1e9f3a92 # load x3 with value 0x1e9f3a92
sw x3, 0(x2) # store 0x1e9f3a92 in memory
flw f17, 0(x2) # load 0x1e9f3a92 from memory into f17
fmsub.s f5, f28, f19, f17, dyn # perform operation
fmsub.s f5, f28, f19, f17, rdn # perform operation
fmsub.s f5, f28, f19, f17, rmm # perform operation
fmsub.s f5, f28, f19, f17, rne # perform operation
fmsub.s f5, f28, f19, f17, rtz # perform operation
fmsub.s f5, f28, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f28, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x28, 0x97778c1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x407f9ec0 # load x3 with value 0x407f9ec0
sw x3, 0(x2) # store 0x407f9ec0 in memory
flw f15, 0(x2) # load 0x407f9ec0 from memory into f15
fmsub.s f28, f10, f25, f15, dyn # perform operation
fmsub.s f28, f10, f25, f15, rdn # perform operation
fmsub.s f28, f10, f25, f15, rmm # perform operation
fmsub.s f28, f10, f25, f15, rne # perform operation
fmsub.s f28, f10, f25, f15, rtz # perform operation
fmsub.s f28, f10, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x30, 0x43834358 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x61308338 # load x3 with value 0x61308338
sw x3, 0(x2) # store 0x61308338 in memory
flw f6, 0(x2) # load 0x61308338 from memory into f6
fmsub.s f30, f20, f22, f6, dyn # perform operation
fmsub.s f30, f20, f22, f6, rdn # perform operation
fmsub.s f30, f20, f22, f6, rmm # perform operation
fmsub.s f30, f20, f22, f6, rne # perform operation
fmsub.s f30, f20, f22, f6, rtz # perform operation
fmsub.s f30, f20, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f20, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f20, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x26, 0x40761660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x7caed1f8 # load x3 with value 0x7caed1f8
sw x3, 0(x2) # store 0x7caed1f8 in memory
flw f18, 0(x2) # load 0x7caed1f8 from memory into f18
fmsub.s f26, f21, f13, f18, dyn # perform operation
fmsub.s f26, f21, f13, f18, rdn # perform operation
fmsub.s f26, f21, f13, f18, rmm # perform operation
fmsub.s f26, f21, f13, f18, rne # perform operation
fmsub.s f26, f21, f13, f18, rtz # perform operation
fmsub.s f26, f21, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f21, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f21, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f21, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f21, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f21, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x8, 0x009216fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x64255c97 # load x3 with value 0x64255c97
sw x3, 0(x2) # store 0x64255c97 in memory
flw f22, 0(x2) # load 0x64255c97 from memory into f22
fmsub.s f8, f31, f29, f22, dyn # perform operation
fmsub.s f8, f31, f29, f22, rdn # perform operation
fmsub.s f8, f31, f29, f22, rmm # perform operation
fmsub.s f8, f31, f29, f22, rne # perform operation
fmsub.s f8, f31, f29, f22, rtz # perform operation
fmsub.s f8, f31, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f31, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x6, 0xab0d40dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xf1330e6b # load x3 with value 0xf1330e6b
sw x3, 0(x2) # store 0xf1330e6b in memory
flw f3, 0(x2) # load 0xf1330e6b from memory into f3
fmsub.s f6, f31, f26, f3, dyn # perform operation
fmsub.s f6, f31, f26, f3, rdn # perform operation
fmsub.s f6, f31, f26, f3, rmm # perform operation
fmsub.s f6, f31, f26, f3, rne # perform operation
fmsub.s f6, f31, f26, f3, rtz # perform operation
fmsub.s f6, f31, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x14, 0xf559bab8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xe391d0ce # load x3 with value 0xe391d0ce
sw x3, 0(x2) # store 0xe391d0ce in memory
flw f31, 0(x2) # load 0xe391d0ce from memory into f31
fmsub.s f14, f1, f28, f31, dyn # perform operation
fmsub.s f14, f1, f28, f31, rdn # perform operation
fmsub.s f14, f1, f28, f31, rmm # perform operation
fmsub.s f14, f1, f28, f31, rne # perform operation
fmsub.s f14, f1, f28, f31, rtz # perform operation
fmsub.s f14, f1, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f1, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x29, 0xa2ecd5e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0xf712cb40 # load x3 with value 0xf712cb40
sw x3, 0(x2) # store 0xf712cb40 in memory
flw f28, 0(x2) # load 0xf712cb40 from memory into f28
fmsub.s f29, f21, f15, f28, dyn # perform operation
fmsub.s f29, f21, f15, f28, rdn # perform operation
fmsub.s f29, f21, f15, f28, rmm # perform operation
fmsub.s f29, f21, f15, f28, rne # perform operation
fmsub.s f29, f21, f15, f28, rtz # perform operation
fmsub.s f29, f21, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x4, 0x50cb73d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0xdea37467 # load x3 with value 0xdea37467
sw x3, 0(x2) # store 0xdea37467 in memory
flw f16, 0(x2) # load 0xdea37467 from memory into f16
fmsub.s f4, f21, f10, f16, dyn # perform operation
fmsub.s f4, f21, f10, f16, rdn # perform operation
fmsub.s f4, f21, f10, f16, rmm # perform operation
fmsub.s f4, f21, f10, f16, rne # perform operation
fmsub.s f4, f21, f10, f16, rtz # perform operation
fmsub.s f4, f21, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f21, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f21, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f21, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f21, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f21, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x29, 0x0bf4414d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x39cc0099 # load x3 with value 0x39cc0099
sw x3, 0(x2) # store 0x39cc0099 in memory
flw f14, 0(x2) # load 0x39cc0099 from memory into f14
fmsub.s f29, f18, f7, f14, dyn # perform operation
fmsub.s f29, f18, f7, f14, rdn # perform operation
fmsub.s f29, f18, f7, f14, rmm # perform operation
fmsub.s f29, f18, f7, f14, rne # perform operation
fmsub.s f29, f18, f7, f14, rtz # perform operation
fmsub.s f29, f18, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x10, 0x7f290c05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x6038b775 # load x3 with value 0x6038b775
sw x3, 0(x2) # store 0x6038b775 in memory
flw f25, 0(x2) # load 0x6038b775 from memory into f25
fmsub.s f10, f7, f19, f25, dyn # perform operation
fmsub.s f10, f7, f19, f25, rdn # perform operation
fmsub.s f10, f7, f19, f25, rmm # perform operation
fmsub.s f10, f7, f19, f25, rne # perform operation
fmsub.s f10, f7, f19, f25, rtz # perform operation
fmsub.s f10, f7, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f7, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f7, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f7, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f7, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f7, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x10, 0x1f8e2dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xf9263a98 # load x3 with value 0xf9263a98
sw x3, 0(x2) # store 0xf9263a98 in memory
flw f31, 0(x2) # load 0xf9263a98 from memory into f31
fmsub.s f10, f8, f21, f31, dyn # perform operation
fmsub.s f10, f8, f21, f31, rdn # perform operation
fmsub.s f10, f8, f21, f31, rmm # perform operation
fmsub.s f10, f8, f21, f31, rne # perform operation
fmsub.s f10, f8, f21, f31, rtz # perform operation
fmsub.s f10, f8, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x11, 0x2dbd7a7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xffafc279 # load x3 with value 0xffafc279
sw x3, 0(x2) # store 0xffafc279 in memory
flw f12, 0(x2) # load 0xffafc279 from memory into f12
fmsub.s f11, f25, f4, f12, dyn # perform operation
fmsub.s f11, f25, f4, f12, rdn # perform operation
fmsub.s f11, f25, f4, f12, rmm # perform operation
fmsub.s f11, f25, f4, f12, rne # perform operation
fmsub.s f11, f25, f4, f12, rtz # perform operation
fmsub.s f11, f25, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x17, 0xefc5f06e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x2df2e2fa # load x3 with value 0x2df2e2fa
sw x3, 0(x2) # store 0x2df2e2fa in memory
flw f26, 0(x2) # load 0x2df2e2fa from memory into f26
fmsub.s f17, f5, f25, f26, dyn # perform operation
fmsub.s f17, f5, f25, f26, rdn # perform operation
fmsub.s f17, f5, f25, f26, rmm # perform operation
fmsub.s f17, f5, f25, f26, rne # perform operation
fmsub.s f17, f5, f25, f26, rtz # perform operation
fmsub.s f17, f5, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x8, 0x9196da4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x856f1c8d # load x3 with value 0x856f1c8d
sw x3, 0(x2) # store 0x856f1c8d in memory
flw f16, 0(x2) # load 0x856f1c8d from memory into f16
fmsub.s f8, f11, f14, f16, dyn # perform operation
fmsub.s f8, f11, f14, f16, rdn # perform operation
fmsub.s f8, f11, f14, f16, rmm # perform operation
fmsub.s f8, f11, f14, f16, rne # perform operation
fmsub.s f8, f11, f14, f16, rtz # perform operation
fmsub.s f8, f11, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x10, 0x26e70599 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x1c524703 # load x3 with value 0x1c524703
sw x3, 0(x2) # store 0x1c524703 in memory
flw f16, 0(x2) # load 0x1c524703 from memory into f16
fmsub.s f10, f23, f6, f16, dyn # perform operation
fmsub.s f10, f23, f6, f16, rdn # perform operation
fmsub.s f10, f23, f6, f16, rmm # perform operation
fmsub.s f10, f23, f6, f16, rne # perform operation
fmsub.s f10, f23, f6, f16, rtz # perform operation
fmsub.s f10, f23, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x30, 0x7908271a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x1b0a4680 # load x3 with value 0x1b0a4680
sw x3, 0(x2) # store 0x1b0a4680 in memory
flw f7, 0(x2) # load 0x1b0a4680 from memory into f7
fmsub.s f30, f27, f15, f7, dyn # perform operation
fmsub.s f30, f27, f15, f7, rdn # perform operation
fmsub.s f30, f27, f15, f7, rmm # perform operation
fmsub.s f30, f27, f15, f7, rne # perform operation
fmsub.s f30, f27, f15, f7, rtz # perform operation
fmsub.s f30, f27, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x22, 0x7c931de2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x5e89dde7 # load x3 with value 0x5e89dde7
sw x3, 0(x2) # store 0x5e89dde7 in memory
flw f17, 0(x2) # load 0x5e89dde7 from memory into f17
fmsub.s f22, f4, f7, f17, dyn # perform operation
fmsub.s f22, f4, f7, f17, rdn # perform operation
fmsub.s f22, f4, f7, f17, rmm # perform operation
fmsub.s f22, f4, f7, f17, rne # perform operation
fmsub.s f22, f4, f7, f17, rtz # perform operation
fmsub.s f22, f4, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f4, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f4, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x7, 0x53e9e180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x3517f826 # load x3 with value 0x3517f826
sw x3, 0(x2) # store 0x3517f826 in memory
flw f1, 0(x2) # load 0x3517f826 from memory into f1
fmsub.s f7, f12, f6, f1, dyn # perform operation
fmsub.s f7, f12, f6, f1, rdn # perform operation
fmsub.s f7, f12, f6, f1, rmm # perform operation
fmsub.s f7, f12, f6, f1, rne # perform operation
fmsub.s f7, f12, f6, f1, rtz # perform operation
fmsub.s f7, f12, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f6, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x13, 0x49e8b6ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x534f5730 # load x3 with value 0x534f5730
sw x3, 0(x2) # store 0x534f5730 in memory
flw f14, 0(x2) # load 0x534f5730 from memory into f14
fmsub.s f13, f5, f29, f14, dyn # perform operation
fmsub.s f13, f5, f29, f14, rdn # perform operation
fmsub.s f13, f5, f29, f14, rmm # perform operation
fmsub.s f13, f5, f29, f14, rne # perform operation
fmsub.s f13, f5, f29, f14, rtz # perform operation
fmsub.s f13, f5, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f5, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f5, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x3, 0x85ecb132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x720d9839 # load x3 with value 0x720d9839
sw x3, 0(x2) # store 0x720d9839 in memory
flw f2, 0(x2) # load 0x720d9839 from memory into f2
fmsub.s f3, f19, f15, f2, dyn # perform operation
fmsub.s f3, f19, f15, f2, rdn # perform operation
fmsub.s f3, f19, f15, f2, rmm # perform operation
fmsub.s f3, f19, f15, f2, rne # perform operation
fmsub.s f3, f19, f15, f2, rtz # perform operation
fmsub.s f3, f19, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f19, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x31, 0x59fca274 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x8bf07a8c # load x3 with value 0x8bf07a8c
sw x3, 0(x2) # store 0x8bf07a8c in memory
flw f18, 0(x2) # load 0x8bf07a8c from memory into f18
fmsub.s f31, f11, f23, f18, dyn # perform operation
fmsub.s f31, f11, f23, f18, rdn # perform operation
fmsub.s f31, f11, f23, f18, rmm # perform operation
fmsub.s f31, f11, f23, f18, rne # perform operation
fmsub.s f31, f11, f23, f18, rtz # perform operation
fmsub.s f31, f11, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x28, 0x7cc4c512 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x38b6dfc3 # load x3 with value 0x38b6dfc3
sw x3, 0(x2) # store 0x38b6dfc3 in memory
flw f31, 0(x2) # load 0x38b6dfc3 from memory into f31
fmsub.s f28, f30, f26, f31, dyn # perform operation
fmsub.s f28, f30, f26, f31, rdn # perform operation
fmsub.s f28, f30, f26, f31, rmm # perform operation
fmsub.s f28, f30, f26, f31, rne # perform operation
fmsub.s f28, f30, f26, f31, rtz # perform operation
fmsub.s f28, f30, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f30, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f30, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f30, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f30, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f30, f26, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x7, 0x583a10f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x383c6166 # load x3 with value 0x383c6166
sw x3, 0(x2) # store 0x383c6166 in memory
flw f10, 0(x2) # load 0x383c6166 from memory into f10
fmsub.s f7, f11, f20, f10, dyn # perform operation
fmsub.s f7, f11, f20, f10, rdn # perform operation
fmsub.s f7, f11, f20, f10, rmm # perform operation
fmsub.s f7, f11, f20, f10, rne # perform operation
fmsub.s f7, f11, f20, f10, rtz # perform operation
fmsub.s f7, f11, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x6, 0xb4c7c1b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x4fc1df58 # load x3 with value 0x4fc1df58
sw x3, 0(x2) # store 0x4fc1df58 in memory
flw f22, 0(x2) # load 0x4fc1df58 from memory into f22
fmsub.s f6, f30, f20, f22, dyn # perform operation
fmsub.s f6, f30, f20, f22, rdn # perform operation
fmsub.s f6, f30, f20, f22, rmm # perform operation
fmsub.s f6, f30, f20, f22, rne # perform operation
fmsub.s f6, f30, f20, f22, rtz # perform operation
fmsub.s f6, f30, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x24, 0xeb7249c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x82673be0 # load x3 with value 0x82673be0
sw x3, 0(x2) # store 0x82673be0 in memory
flw f2, 0(x2) # load 0x82673be0 from memory into f2
fmsub.s f24, f11, f5, f2, dyn # perform operation
fmsub.s f24, f11, f5, f2, rdn # perform operation
fmsub.s f24, f11, f5, f2, rmm # perform operation
fmsub.s f24, f11, f5, f2, rne # perform operation
fmsub.s f24, f11, f5, f2, rtz # perform operation
fmsub.s f24, f11, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x13, 0x8dcabf0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x7b3ff036 # load x3 with value 0x7b3ff036
sw x3, 0(x2) # store 0x7b3ff036 in memory
flw f15, 0(x2) # load 0x7b3ff036 from memory into f15
fmsub.s f13, f28, f10, f15, dyn # perform operation
fmsub.s f13, f28, f10, f15, rdn # perform operation
fmsub.s f13, f28, f10, f15, rmm # perform operation
fmsub.s f13, f28, f10, f15, rne # perform operation
fmsub.s f13, f28, f10, f15, rtz # perform operation
fmsub.s f13, f28, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x15, 0xb705d758 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x4d56ccda # load x3 with value 0x4d56ccda
sw x3, 0(x2) # store 0x4d56ccda in memory
flw f22, 0(x2) # load 0x4d56ccda from memory into f22
fmsub.s f15, f6, f5, f22, dyn # perform operation
fmsub.s f15, f6, f5, f22, rdn # perform operation
fmsub.s f15, f6, f5, f22, rmm # perform operation
fmsub.s f15, f6, f5, f22, rne # perform operation
fmsub.s f15, f6, f5, f22, rtz # perform operation
fmsub.s f15, f6, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f5, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x27, 0x0c3e3e37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x6e2b2ead # load x3 with value 0x6e2b2ead
sw x3, 0(x2) # store 0x6e2b2ead in memory
flw f24, 0(x2) # load 0x6e2b2ead from memory into f24
fmsub.s f27, f18, f3, f24, dyn # perform operation
fmsub.s f27, f18, f3, f24, rdn # perform operation
fmsub.s f27, f18, f3, f24, rmm # perform operation
fmsub.s f27, f18, f3, f24, rne # perform operation
fmsub.s f27, f18, f3, f24, rtz # perform operation
fmsub.s f27, f18, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x24, 0x33de1655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xbb04f17c # load x3 with value 0xbb04f17c
sw x3, 0(x2) # store 0xbb04f17c in memory
flw f7, 0(x2) # load 0xbb04f17c from memory into f7
fmsub.s f24, f26, f28, f7, dyn # perform operation
fmsub.s f24, f26, f28, f7, rdn # perform operation
fmsub.s f24, f26, f28, f7, rmm # perform operation
fmsub.s f24, f26, f28, f7, rne # perform operation
fmsub.s f24, f26, f28, f7, rtz # perform operation
fmsub.s f24, f26, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x29, 0x39fd137c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x4e9e0871 # load x3 with value 0x4e9e0871
sw x3, 0(x2) # store 0x4e9e0871 in memory
flw f28, 0(x2) # load 0x4e9e0871 from memory into f28
fmsub.s f29, f21, f2, f28, dyn # perform operation
fmsub.s f29, f21, f2, f28, rdn # perform operation
fmsub.s f29, f21, f2, f28, rmm # perform operation
fmsub.s f29, f21, f2, f28, rne # perform operation
fmsub.s f29, f21, f2, f28, rtz # perform operation
fmsub.s f29, f21, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x18, 0x65eccd74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x38948f78 # load x3 with value 0x38948f78
sw x3, 0(x2) # store 0x38948f78 in memory
flw f22, 0(x2) # load 0x38948f78 from memory into f22
fmsub.s f18, f29, f4, f22, dyn # perform operation
fmsub.s f18, f29, f4, f22, rdn # perform operation
fmsub.s f18, f29, f4, f22, rmm # perform operation
fmsub.s f18, f29, f4, f22, rne # perform operation
fmsub.s f18, f29, f4, f22, rtz # perform operation
fmsub.s f18, f29, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f29, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f29, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f29, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f29, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f29, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x30, 0x78af8bd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x61d11f79 # load x3 with value 0x61d11f79
sw x3, 0(x2) # store 0x61d11f79 in memory
flw f22, 0(x2) # load 0x61d11f79 from memory into f22
fmsub.s f30, f10, f20, f22, dyn # perform operation
fmsub.s f30, f10, f20, f22, rdn # perform operation
fmsub.s f30, f10, f20, f22, rmm # perform operation
fmsub.s f30, f10, f20, f22, rne # perform operation
fmsub.s f30, f10, f20, f22, rtz # perform operation
fmsub.s f30, f10, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x29, 0x3e754846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xb12da172 # load x3 with value 0xb12da172
sw x3, 0(x2) # store 0xb12da172 in memory
flw f3, 0(x2) # load 0xb12da172 from memory into f3
fmsub.s f29, f17, f21, f3, dyn # perform operation
fmsub.s f29, f17, f21, f3, rdn # perform operation
fmsub.s f29, f17, f21, f3, rmm # perform operation
fmsub.s f29, f17, f21, f3, rne # perform operation
fmsub.s f29, f17, f21, f3, rtz # perform operation
fmsub.s f29, f17, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f17, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f17, f21, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x19, 0x10de4691 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x3eb6a904 # load x3 with value 0x3eb6a904
sw x3, 0(x2) # store 0x3eb6a904 in memory
flw f4, 0(x2) # load 0x3eb6a904 from memory into f4
fmsub.s f19, f30, f26, f4, dyn # perform operation
fmsub.s f19, f30, f26, f4, rdn # perform operation
fmsub.s f19, f30, f26, f4, rmm # perform operation
fmsub.s f19, f30, f26, f4, rne # perform operation
fmsub.s f19, f30, f26, f4, rtz # perform operation
fmsub.s f19, f30, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f30, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f30, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f30, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f30, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f30, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x10, 0x41acccc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xdb77754c # load x3 with value 0xdb77754c
sw x3, 0(x2) # store 0xdb77754c in memory
flw f4, 0(x2) # load 0xdb77754c from memory into f4
fmsub.s f10, f22, f27, f4, dyn # perform operation
fmsub.s f10, f22, f27, f4, rdn # perform operation
fmsub.s f10, f22, f27, f4, rmm # perform operation
fmsub.s f10, f22, f27, f4, rne # perform operation
fmsub.s f10, f22, f27, f4, rtz # perform operation
fmsub.s f10, f22, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x31, 0x342842d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x388f3cfb # load x3 with value 0x388f3cfb
sw x3, 0(x2) # store 0x388f3cfb in memory
flw f21, 0(x2) # load 0x388f3cfb from memory into f21
fmsub.s f31, f4, f26, f21, dyn # perform operation
fmsub.s f31, f4, f26, f21, rdn # perform operation
fmsub.s f31, f4, f26, f21, rmm # perform operation
fmsub.s f31, f4, f26, f21, rne # perform operation
fmsub.s f31, f4, f26, f21, rtz # perform operation
fmsub.s f31, f4, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f4, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x1, 0x7a55a342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x4c2c3f78 # load x3 with value 0x4c2c3f78
sw x3, 0(x2) # store 0x4c2c3f78 in memory
flw f28, 0(x2) # load 0x4c2c3f78 from memory into f28
fmsub.s f1, f15, f9, f28, dyn # perform operation
fmsub.s f1, f15, f9, f28, rdn # perform operation
fmsub.s f1, f15, f9, f28, rmm # perform operation
fmsub.s f1, f15, f9, f28, rne # perform operation
fmsub.s f1, f15, f9, f28, rtz # perform operation
fmsub.s f1, f15, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f15, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f15, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f15, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f15, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f15, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x21, 0x5de41145 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xecf41a0f # load x3 with value 0xecf41a0f
sw x3, 0(x2) # store 0xecf41a0f in memory
flw f1, 0(x2) # load 0xecf41a0f from memory into f1
fmsub.s f21, f18, f30, f1, dyn # perform operation
fmsub.s f21, f18, f30, f1, rdn # perform operation
fmsub.s f21, f18, f30, f1, rmm # perform operation
fmsub.s f21, f18, f30, f1, rne # perform operation
fmsub.s f21, f18, f30, f1, rtz # perform operation
fmsub.s f21, f18, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x17, 0x49e3be1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x1ef23ace # load x3 with value 0x1ef23ace
sw x3, 0(x2) # store 0x1ef23ace in memory
flw f5, 0(x2) # load 0x1ef23ace from memory into f5
fmsub.s f17, f9, f24, f5, dyn # perform operation
fmsub.s f17, f9, f24, f5, rdn # perform operation
fmsub.s f17, f9, f24, f5, rmm # perform operation
fmsub.s f17, f9, f24, f5, rne # perform operation
fmsub.s f17, f9, f24, f5, rtz # perform operation
fmsub.s f17, f9, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f24, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x13, 0xc4bce20b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x523ad44b # load x3 with value 0x523ad44b
sw x3, 0(x2) # store 0x523ad44b in memory
flw f14, 0(x2) # load 0x523ad44b from memory into f14
fmsub.s f13, f3, f24, f14, dyn # perform operation
fmsub.s f13, f3, f24, f14, rdn # perform operation
fmsub.s f13, f3, f24, f14, rmm # perform operation
fmsub.s f13, f3, f24, f14, rne # perform operation
fmsub.s f13, f3, f24, f14, rtz # perform operation
fmsub.s f13, f3, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x28, 0x50d1534c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0xa1af3d44 # load x3 with value 0xa1af3d44
sw x3, 0(x2) # store 0xa1af3d44 in memory
flw f18, 0(x2) # load 0xa1af3d44 from memory into f18
fmsub.s f28, f9, f17, f18, dyn # perform operation
fmsub.s f28, f9, f17, f18, rdn # perform operation
fmsub.s f28, f9, f17, f18, rmm # perform operation
fmsub.s f28, f9, f17, f18, rne # perform operation
fmsub.s f28, f9, f17, f18, rtz # perform operation
fmsub.s f28, f9, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f9, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x5, 0xf869a382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xfdff0fac # load x3 with value 0xfdff0fac
sw x3, 0(x2) # store 0xfdff0fac in memory
flw f17, 0(x2) # load 0xfdff0fac from memory into f17
fmsub.s f5, f21, f12, f17, dyn # perform operation
fmsub.s f5, f21, f12, f17, rdn # perform operation
fmsub.s f5, f21, f12, f17, rmm # perform operation
fmsub.s f5, f21, f12, f17, rne # perform operation
fmsub.s f5, f21, f12, f17, rtz # perform operation
fmsub.s f5, f21, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x5, 0xf79de220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x13eab2c2 # load x3 with value 0x13eab2c2
sw x3, 0(x2) # store 0x13eab2c2 in memory
flw f28, 0(x2) # load 0x13eab2c2 from memory into f28
fmsub.s f5, f3, f19, f28, dyn # perform operation
fmsub.s f5, f3, f19, f28, rdn # perform operation
fmsub.s f5, f3, f19, f28, rmm # perform operation
fmsub.s f5, f3, f19, f28, rne # perform operation
fmsub.s f5, f3, f19, f28, rtz # perform operation
fmsub.s f5, f3, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x16, 0xb89459c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0xb95dd711 # load x3 with value 0xb95dd711
sw x3, 0(x2) # store 0xb95dd711 in memory
flw f22, 0(x2) # load 0xb95dd711 from memory into f22
fmsub.s f16, f6, f1, f22, dyn # perform operation
fmsub.s f16, f6, f1, f22, rdn # perform operation
fmsub.s f16, f6, f1, f22, rmm # perform operation
fmsub.s f16, f6, f1, f22, rne # perform operation
fmsub.s f16, f6, f1, f22, rtz # perform operation
fmsub.s f16, f6, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f6, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x5, 0x1b819064 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xfec7d843 # load x3 with value 0xfec7d843
sw x3, 0(x2) # store 0xfec7d843 in memory
flw f20, 0(x2) # load 0xfec7d843 from memory into f20
fmsub.s f5, f16, f3, f20, dyn # perform operation
fmsub.s f5, f16, f3, f20, rdn # perform operation
fmsub.s f5, f16, f3, f20, rmm # perform operation
fmsub.s f5, f16, f3, f20, rne # perform operation
fmsub.s f5, f16, f3, f20, rtz # perform operation
fmsub.s f5, f16, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f16, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x8, 0xbd434a59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x4640c795 # load x3 with value 0x4640c795
sw x3, 0(x2) # store 0x4640c795 in memory
flw f18, 0(x2) # load 0x4640c795 from memory into f18
fmsub.s f8, f31, f29, f18, dyn # perform operation
fmsub.s f8, f31, f29, f18, rdn # perform operation
fmsub.s f8, f31, f29, f18, rmm # perform operation
fmsub.s f8, f31, f29, f18, rne # perform operation
fmsub.s f8, f31, f29, f18, rtz # perform operation
fmsub.s f8, f31, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f31, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f31, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x30, 0xfbfea925 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x51fbed08 # load x3 with value 0x51fbed08
sw x3, 0(x2) # store 0x51fbed08 in memory
flw f9, 0(x2) # load 0x51fbed08 from memory into f9
fmsub.s f30, f26, f2, f9, dyn # perform operation
fmsub.s f30, f26, f2, f9, rdn # perform operation
fmsub.s f30, f26, f2, f9, rmm # perform operation
fmsub.s f30, f26, f2, f9, rne # perform operation
fmsub.s f30, f26, f2, f9, rtz # perform operation
fmsub.s f30, f26, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f26, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f26, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x10, 0xeb4ff4a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x6c8e327d # load x3 with value 0x6c8e327d
sw x3, 0(x2) # store 0x6c8e327d in memory
flw f15, 0(x2) # load 0x6c8e327d from memory into f15
fmsub.s f10, f29, f5, f15, dyn # perform operation
fmsub.s f10, f29, f5, f15, rdn # perform operation
fmsub.s f10, f29, f5, f15, rmm # perform operation
fmsub.s f10, f29, f5, f15, rne # perform operation
fmsub.s f10, f29, f5, f15, rtz # perform operation
fmsub.s f10, f29, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f29, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x18, 0x4dbb4d0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x4f975367 # load x3 with value 0x4f975367
sw x3, 0(x2) # store 0x4f975367 in memory
flw f12, 0(x2) # load 0x4f975367 from memory into f12
fmsub.s f18, f5, f23, f12, dyn # perform operation
fmsub.s f18, f5, f23, f12, rdn # perform operation
fmsub.s f18, f5, f23, f12, rmm # perform operation
fmsub.s f18, f5, f23, f12, rne # perform operation
fmsub.s f18, f5, f23, f12, rtz # perform operation
fmsub.s f18, f5, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f5, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x24, 0x700f48a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x55e6a321 # load x3 with value 0x55e6a321
sw x3, 0(x2) # store 0x55e6a321 in memory
flw f7, 0(x2) # load 0x55e6a321 from memory into f7
fmsub.s f24, f13, f30, f7, dyn # perform operation
fmsub.s f24, f13, f30, f7, rdn # perform operation
fmsub.s f24, f13, f30, f7, rmm # perform operation
fmsub.s f24, f13, f30, f7, rne # perform operation
fmsub.s f24, f13, f30, f7, rtz # perform operation
fmsub.s f24, f13, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f13, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x24, 0xc7c8a8a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x6811fecf # load x3 with value 0x6811fecf
sw x3, 0(x2) # store 0x6811fecf in memory
flw f30, 0(x2) # load 0x6811fecf from memory into f30
fmsub.s f24, f20, f19, f30, dyn # perform operation
fmsub.s f24, f20, f19, f30, rdn # perform operation
fmsub.s f24, f20, f19, f30, rmm # perform operation
fmsub.s f24, f20, f19, f30, rne # perform operation
fmsub.s f24, f20, f19, f30, rtz # perform operation
fmsub.s f24, f20, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x10, 0xab59d1f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x8307a29f # load x3 with value 0x8307a29f
sw x3, 0(x2) # store 0x8307a29f in memory
flw f19, 0(x2) # load 0x8307a29f from memory into f19
fmsub.s f10, f16, f9, f19, dyn # perform operation
fmsub.s f10, f16, f9, f19, rdn # perform operation
fmsub.s f10, f16, f9, f19, rmm # perform operation
fmsub.s f10, f16, f9, f19, rne # perform operation
fmsub.s f10, f16, f9, f19, rtz # perform operation
fmsub.s f10, f16, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f16, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f16, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f16, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f16, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f16, f9, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x1, 0xc1e8d5b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x33ad8b39 # load x3 with value 0x33ad8b39
sw x3, 0(x2) # store 0x33ad8b39 in memory
flw f27, 0(x2) # load 0x33ad8b39 from memory into f27
fmsub.s f1, f8, f16, f27, dyn # perform operation
fmsub.s f1, f8, f16, f27, rdn # perform operation
fmsub.s f1, f8, f16, f27, rmm # perform operation
fmsub.s f1, f8, f16, f27, rne # perform operation
fmsub.s f1, f8, f16, f27, rtz # perform operation
fmsub.s f1, f8, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f8, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f8, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f8, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f8, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f8, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x26, 0x8b986fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x43bc3e4f # load x3 with value 0x43bc3e4f
sw x3, 0(x2) # store 0x43bc3e4f in memory
flw f10, 0(x2) # load 0x43bc3e4f from memory into f10
fmsub.s f26, f19, f4, f10, dyn # perform operation
fmsub.s f26, f19, f4, f10, rdn # perform operation
fmsub.s f26, f19, f4, f10, rmm # perform operation
fmsub.s f26, f19, f4, f10, rne # perform operation
fmsub.s f26, f19, f4, f10, rtz # perform operation
fmsub.s f26, f19, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f19, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f19, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x8, 0x57691a79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x86c28978 # load x3 with value 0x86c28978
sw x3, 0(x2) # store 0x86c28978 in memory
flw f11, 0(x2) # load 0x86c28978 from memory into f11
fmsub.s f8, f27, f30, f11, dyn # perform operation
fmsub.s f8, f27, f30, f11, rdn # perform operation
fmsub.s f8, f27, f30, f11, rmm # perform operation
fmsub.s f8, f27, f30, f11, rne # perform operation
fmsub.s f8, f27, f30, f11, rtz # perform operation
fmsub.s f8, f27, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f27, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f27, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f27, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f27, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f27, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x4, 0x6fa2de62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xe3fc7ae5 # load x3 with value 0xe3fc7ae5
sw x3, 0(x2) # store 0xe3fc7ae5 in memory
flw f9, 0(x2) # load 0xe3fc7ae5 from memory into f9
fmsub.s f4, f1, f16, f9, dyn # perform operation
fmsub.s f4, f1, f16, f9, rdn # perform operation
fmsub.s f4, f1, f16, f9, rmm # perform operation
fmsub.s f4, f1, f16, f9, rne # perform operation
fmsub.s f4, f1, f16, f9, rtz # perform operation
fmsub.s f4, f1, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f1, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f1, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x10, 0xd1c09ad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x45e29326 # load x3 with value 0x45e29326
sw x3, 0(x2) # store 0x45e29326 in memory
flw f21, 0(x2) # load 0x45e29326 from memory into f21
fmsub.s f10, f14, f12, f21, dyn # perform operation
fmsub.s f10, f14, f12, f21, rdn # perform operation
fmsub.s f10, f14, f12, f21, rmm # perform operation
fmsub.s f10, f14, f12, f21, rne # perform operation
fmsub.s f10, f14, f12, f21, rtz # perform operation
fmsub.s f10, f14, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f12, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x27, 0x9e23214e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x64930524 # load x3 with value 0x64930524
sw x3, 0(x2) # store 0x64930524 in memory
flw f16, 0(x2) # load 0x64930524 from memory into f16
fmsub.s f27, f10, f21, f16, dyn # perform operation
fmsub.s f27, f10, f21, f16, rdn # perform operation
fmsub.s f27, f10, f21, f16, rmm # perform operation
fmsub.s f27, f10, f21, f16, rne # perform operation
fmsub.s f27, f10, f21, f16, rtz # perform operation
fmsub.s f27, f10, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f10, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x9, 0xa572dd57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x7592b811 # load x3 with value 0x7592b811
sw x3, 0(x2) # store 0x7592b811 in memory
flw f22, 0(x2) # load 0x7592b811 from memory into f22
fmsub.s f9, f3, f13, f22, dyn # perform operation
fmsub.s f9, f3, f13, f22, rdn # perform operation
fmsub.s f9, f3, f13, f22, rmm # perform operation
fmsub.s f9, f3, f13, f22, rne # perform operation
fmsub.s f9, f3, f13, f22, rtz # perform operation
fmsub.s f9, f3, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f3, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f3, f13, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x30, 0x78cc8d4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xd634809c # load x3 with value 0xd634809c
sw x3, 0(x2) # store 0xd634809c in memory
flw f5, 0(x2) # load 0xd634809c from memory into f5
fmsub.s f30, f4, f9, f5, dyn # perform operation
fmsub.s f30, f4, f9, f5, rdn # perform operation
fmsub.s f30, f4, f9, f5, rmm # perform operation
fmsub.s f30, f4, f9, f5, rne # perform operation
fmsub.s f30, f4, f9, f5, rtz # perform operation
fmsub.s f30, f4, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f4, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x5, 0xc793013c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0x8a314fe5 # load x3 with value 0x8a314fe5
sw x3, 0(x2) # store 0x8a314fe5 in memory
flw f2, 0(x2) # load 0x8a314fe5 from memory into f2
fmsub.s f5, f13, f18, f2, dyn # perform operation
fmsub.s f5, f13, f18, f2, rdn # perform operation
fmsub.s f5, f13, f18, f2, rmm # perform operation
fmsub.s f5, f13, f18, f2, rne # perform operation
fmsub.s f5, f13, f18, f2, rtz # perform operation
fmsub.s f5, f13, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f13, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f13, f18, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x5, 0x79c686e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x51705455 # load x3 with value 0x51705455
sw x3, 0(x2) # store 0x51705455 in memory
flw f9, 0(x2) # load 0x51705455 from memory into f9
fmsub.s f5, f18, f23, f9, dyn # perform operation
fmsub.s f5, f18, f23, f9, rdn # perform operation
fmsub.s f5, f18, f23, f9, rmm # perform operation
fmsub.s f5, f18, f23, f9, rne # perform operation
fmsub.s f5, f18, f23, f9, rtz # perform operation
fmsub.s f5, f18, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f18, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f18, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x23, 0x921c8af2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0xc9c8129c # load x3 with value 0xc9c8129c
sw x3, 0(x2) # store 0xc9c8129c in memory
flw f11, 0(x2) # load 0xc9c8129c from memory into f11
fmsub.s f23, f28, f29, f11, dyn # perform operation
fmsub.s f23, f28, f29, f11, rdn # perform operation
fmsub.s f23, f28, f29, f11, rmm # perform operation
fmsub.s f23, f28, f29, f11, rne # perform operation
fmsub.s f23, f28, f29, f11, rtz # perform operation
fmsub.s f23, f28, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f28, f29, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x8, 0xf139e1e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x327f79e7 # load x3 with value 0x327f79e7
sw x3, 0(x2) # store 0x327f79e7 in memory
flw f30, 0(x2) # load 0x327f79e7 from memory into f30
fmsub.s f8, f10, f23, f30, dyn # perform operation
fmsub.s f8, f10, f23, f30, rdn # perform operation
fmsub.s f8, f10, f23, f30, rmm # perform operation
fmsub.s f8, f10, f23, f30, rne # perform operation
fmsub.s f8, f10, f23, f30, rtz # perform operation
fmsub.s f8, f10, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x16, 0xafb2f047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x7eb93c85 # load x3 with value 0x7eb93c85
sw x3, 0(x2) # store 0x7eb93c85 in memory
flw f26, 0(x2) # load 0x7eb93c85 from memory into f26
fmsub.s f16, f2, f18, f26, dyn # perform operation
fmsub.s f16, f2, f18, f26, rdn # perform operation
fmsub.s f16, f2, f18, f26, rmm # perform operation
fmsub.s f16, f2, f18, f26, rne # perform operation
fmsub.s f16, f2, f18, f26, rtz # perform operation
fmsub.s f16, f2, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x14, 0x0e5abbcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xe1c5c55a # load x3 with value 0xe1c5c55a
sw x3, 0(x2) # store 0xe1c5c55a in memory
flw f21, 0(x2) # load 0xe1c5c55a from memory into f21
fmsub.s f14, f31, f26, f21, dyn # perform operation
fmsub.s f14, f31, f26, f21, rdn # perform operation
fmsub.s f14, f31, f26, f21, rmm # perform operation
fmsub.s f14, f31, f26, f21, rne # perform operation
fmsub.s f14, f31, f26, f21, rtz # perform operation
fmsub.s f14, f31, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f31, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f31, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x16, 0x7b9ec010 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x58995c44 # load x3 with value 0x58995c44
sw x3, 0(x2) # store 0x58995c44 in memory
flw f10, 0(x2) # load 0x58995c44 from memory into f10
fmsub.s f16, f26, f1, f10, dyn # perform operation
fmsub.s f16, f26, f1, f10, rdn # perform operation
fmsub.s f16, f26, f1, f10, rmm # perform operation
fmsub.s f16, f26, f1, f10, rne # perform operation
fmsub.s f16, f26, f1, f10, rtz # perform operation
fmsub.s f16, f26, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x26, 0xb7dc6e36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xc0907662 # load x3 with value 0xc0907662
sw x3, 0(x2) # store 0xc0907662 in memory
flw f20, 0(x2) # load 0xc0907662 from memory into f20
fmsub.s f26, f30, f28, f20, dyn # perform operation
fmsub.s f26, f30, f28, f20, rdn # perform operation
fmsub.s f26, f30, f28, f20, rmm # perform operation
fmsub.s f26, f30, f28, f20, rne # perform operation
fmsub.s f26, f30, f28, f20, rtz # perform operation
fmsub.s f26, f30, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x28, 0xb24add93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x5b6af0b8 # load x3 with value 0x5b6af0b8
sw x3, 0(x2) # store 0x5b6af0b8 in memory
flw f11, 0(x2) # load 0x5b6af0b8 from memory into f11
fmsub.s f28, f13, f22, f11, dyn # perform operation
fmsub.s f28, f13, f22, f11, rdn # perform operation
fmsub.s f28, f13, f22, f11, rmm # perform operation
fmsub.s f28, f13, f22, f11, rne # perform operation
fmsub.s f28, f13, f22, f11, rtz # perform operation
fmsub.s f28, f13, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x23, 0xbde9ab68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x629365ec # load x3 with value 0x629365ec
sw x3, 0(x2) # store 0x629365ec in memory
flw f24, 0(x2) # load 0x629365ec from memory into f24
fmsub.s f23, f19, f31, f24, dyn # perform operation
fmsub.s f23, f19, f31, f24, rdn # perform operation
fmsub.s f23, f19, f31, f24, rmm # perform operation
fmsub.s f23, f19, f31, f24, rne # perform operation
fmsub.s f23, f19, f31, f24, rtz # perform operation
fmsub.s f23, f19, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f19, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x6, 0x26830edc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xcc8de101 # load x3 with value 0xcc8de101
sw x3, 0(x2) # store 0xcc8de101 in memory
flw f12, 0(x2) # load 0xcc8de101 from memory into f12
fmsub.s f6, f24, f4, f12, dyn # perform operation
fmsub.s f6, f24, f4, f12, rdn # perform operation
fmsub.s f6, f24, f4, f12, rmm # perform operation
fmsub.s f6, f24, f4, f12, rne # perform operation
fmsub.s f6, f24, f4, f12, rtz # perform operation
fmsub.s f6, f24, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f4, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x22, 0x44244085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xee32b496 # load x3 with value 0xee32b496
sw x3, 0(x2) # store 0xee32b496 in memory
flw f27, 0(x2) # load 0xee32b496 from memory into f27
fmsub.s f22, f24, f20, f27, dyn # perform operation
fmsub.s f22, f24, f20, f27, rdn # perform operation
fmsub.s f22, f24, f20, f27, rmm # perform operation
fmsub.s f22, f24, f20, f27, rne # perform operation
fmsub.s f22, f24, f20, f27, rtz # perform operation
fmsub.s f22, f24, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f24, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f24, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f24, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f24, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f24, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x25, 0x74ad0995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xd19154eb # load x3 with value 0xd19154eb
sw x3, 0(x2) # store 0xd19154eb in memory
flw f10, 0(x2) # load 0xd19154eb from memory into f10
fmsub.s f25, f9, f14, f10, dyn # perform operation
fmsub.s f25, f9, f14, f10, rdn # perform operation
fmsub.s f25, f9, f14, f10, rmm # perform operation
fmsub.s f25, f9, f14, f10, rne # perform operation
fmsub.s f25, f9, f14, f10, rtz # perform operation
fmsub.s f25, f9, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f9, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f9, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x16, 0x6c23026c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x88a3d527 # load x3 with value 0x88a3d527
sw x3, 0(x2) # store 0x88a3d527 in memory
flw f29, 0(x2) # load 0x88a3d527 from memory into f29
fmsub.s f16, f14, f5, f29, dyn # perform operation
fmsub.s f16, f14, f5, f29, rdn # perform operation
fmsub.s f16, f14, f5, f29, rmm # perform operation
fmsub.s f16, f14, f5, f29, rne # perform operation
fmsub.s f16, f14, f5, f29, rtz # perform operation
fmsub.s f16, f14, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f14, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f14, f5, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x3, 0x6dff5e17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x99132725 # load x3 with value 0x99132725
sw x3, 0(x2) # store 0x99132725 in memory
flw f11, 0(x2) # load 0x99132725 from memory into f11
fmsub.s f3, f29, f21, f11, dyn # perform operation
fmsub.s f3, f29, f21, f11, rdn # perform operation
fmsub.s f3, f29, f21, f11, rmm # perform operation
fmsub.s f3, f29, f21, f11, rne # perform operation
fmsub.s f3, f29, f21, f11, rtz # perform operation
fmsub.s f3, f29, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x18, 0xba91d645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0xd79fd8c7 # load x3 with value 0xd79fd8c7
sw x3, 0(x2) # store 0xd79fd8c7 in memory
flw f26, 0(x2) # load 0xd79fd8c7 from memory into f26
fmsub.s f18, f21, f1, f26, dyn # perform operation
fmsub.s f18, f21, f1, f26, rdn # perform operation
fmsub.s f18, f21, f1, f26, rmm # perform operation
fmsub.s f18, f21, f1, f26, rne # perform operation
fmsub.s f18, f21, f1, f26, rtz # perform operation
fmsub.s f18, f21, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f21, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f21, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x24, 0x1f293b99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xaa8c9df0 # load x3 with value 0xaa8c9df0
sw x3, 0(x2) # store 0xaa8c9df0 in memory
flw f4, 0(x2) # load 0xaa8c9df0 from memory into f4
fmsub.s f24, f26, f13, f4, dyn # perform operation
fmsub.s f24, f26, f13, f4, rdn # perform operation
fmsub.s f24, f26, f13, f4, rmm # perform operation
fmsub.s f24, f26, f13, f4, rne # perform operation
fmsub.s f24, f26, f13, f4, rtz # perform operation
fmsub.s f24, f26, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x7, 0x4b1c7f9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x3a45654f # load x3 with value 0x3a45654f
sw x3, 0(x2) # store 0x3a45654f in memory
flw f15, 0(x2) # load 0x3a45654f from memory into f15
fmsub.s f7, f27, f9, f15, dyn # perform operation
fmsub.s f7, f27, f9, f15, rdn # perform operation
fmsub.s f7, f27, f9, f15, rmm # perform operation
fmsub.s f7, f27, f9, f15, rne # perform operation
fmsub.s f7, f27, f9, f15, rtz # perform operation
fmsub.s f7, f27, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f27, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f27, f9, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x28, 0xa2c65e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x7d7a58e4 # load x3 with value 0x7d7a58e4
sw x3, 0(x2) # store 0x7d7a58e4 in memory
flw f8, 0(x2) # load 0x7d7a58e4 from memory into f8
fmsub.s f28, f13, f14, f8, dyn # perform operation
fmsub.s f28, f13, f14, f8, rdn # perform operation
fmsub.s f28, f13, f14, f8, rmm # perform operation
fmsub.s f28, f13, f14, f8, rne # perform operation
fmsub.s f28, f13, f14, f8, rtz # perform operation
fmsub.s f28, f13, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x21, 0x0ac7a186 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x40e4d876 # load x3 with value 0x40e4d876
sw x3, 0(x2) # store 0x40e4d876 in memory
flw f28, 0(x2) # load 0x40e4d876 from memory into f28
fmsub.s f21, f12, f7, f28, dyn # perform operation
fmsub.s f21, f12, f7, f28, rdn # perform operation
fmsub.s f21, f12, f7, f28, rmm # perform operation
fmsub.s f21, f12, f7, f28, rne # perform operation
fmsub.s f21, f12, f7, f28, rtz # perform operation
fmsub.s f21, f12, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x9, 0x828e0c8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0xd32154c3 # load x3 with value 0xd32154c3
sw x3, 0(x2) # store 0xd32154c3 in memory
flw f15, 0(x2) # load 0xd32154c3 from memory into f15
fmsub.s f9, f16, f18, f15, dyn # perform operation
fmsub.s f9, f16, f18, f15, rdn # perform operation
fmsub.s f9, f16, f18, f15, rmm # perform operation
fmsub.s f9, f16, f18, f15, rne # perform operation
fmsub.s f9, f16, f18, f15, rtz # perform operation
fmsub.s f9, f16, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f16, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f16, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f16, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f16, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f16, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x9, 0xeef77e4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x5f2760d4 # load x3 with value 0x5f2760d4
sw x3, 0(x2) # store 0x5f2760d4 in memory
flw f18, 0(x2) # load 0x5f2760d4 from memory into f18
fmsub.s f9, f6, f19, f18, dyn # perform operation
fmsub.s f9, f6, f19, f18, rdn # perform operation
fmsub.s f9, f6, f19, f18, rmm # perform operation
fmsub.s f9, f6, f19, f18, rne # perform operation
fmsub.s f9, f6, f19, f18, rtz # perform operation
fmsub.s f9, f6, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x19, 0x7de1908e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0xefc76ab7 # load x3 with value 0xefc76ab7
sw x3, 0(x2) # store 0xefc76ab7 in memory
flw f15, 0(x2) # load 0xefc76ab7 from memory into f15
fmsub.s f19, f1, f30, f15, dyn # perform operation
fmsub.s f19, f1, f30, f15, rdn # perform operation
fmsub.s f19, f1, f30, f15, rmm # perform operation
fmsub.s f19, f1, f30, f15, rne # perform operation
fmsub.s f19, f1, f30, f15, rtz # perform operation
fmsub.s f19, f1, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f1, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f1, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f1, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f1, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f1, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x16, 0xd1bdac34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xea377264 # load x3 with value 0xea377264
sw x3, 0(x2) # store 0xea377264 in memory
flw f10, 0(x2) # load 0xea377264 from memory into f10
fmsub.s f16, f9, f24, f10, dyn # perform operation
fmsub.s f16, f9, f24, f10, rdn # perform operation
fmsub.s f16, f9, f24, f10, rmm # perform operation
fmsub.s f16, f9, f24, f10, rne # perform operation
fmsub.s f16, f9, f24, f10, rtz # perform operation
fmsub.s f16, f9, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f9, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x26, 0x0ce59726 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x0af5a125 # load x3 with value 0x0af5a125
sw x3, 0(x2) # store 0x0af5a125 in memory
flw f19, 0(x2) # load 0x0af5a125 from memory into f19
fmsub.s f26, f13, f6, f19, dyn # perform operation
fmsub.s f26, f13, f6, f19, rdn # perform operation
fmsub.s f26, f13, f6, f19, rmm # perform operation
fmsub.s f26, f13, f6, f19, rne # perform operation
fmsub.s f26, f13, f6, f19, rtz # perform operation
fmsub.s f26, f13, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f13, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f13, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f13, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f13, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f13, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x9, 0x5b348615 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0xb5cdad0b # load x3 with value 0xb5cdad0b
sw x3, 0(x2) # store 0xb5cdad0b in memory
flw f23, 0(x2) # load 0xb5cdad0b from memory into f23
fmsub.s f9, f11, f31, f23, dyn # perform operation
fmsub.s f9, f11, f31, f23, rdn # perform operation
fmsub.s f9, f11, f31, f23, rmm # perform operation
fmsub.s f9, f11, f31, f23, rne # perform operation
fmsub.s f9, f11, f31, f23, rtz # perform operation
fmsub.s f9, f11, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x29, 0x5fd5fe77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x84807146 # load x3 with value 0x84807146
sw x3, 0(x2) # store 0x84807146 in memory
flw f14, 0(x2) # load 0x84807146 from memory into f14
fmsub.s f29, f6, f16, f14, dyn # perform operation
fmsub.s f29, f6, f16, f14, rdn # perform operation
fmsub.s f29, f6, f16, f14, rmm # perform operation
fmsub.s f29, f6, f16, f14, rne # perform operation
fmsub.s f29, f6, f16, f14, rtz # perform operation
fmsub.s f29, f6, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f6, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x20, 0x6088d1f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x8d98c6a0 # load x3 with value 0x8d98c6a0
sw x3, 0(x2) # store 0x8d98c6a0 in memory
flw f22, 0(x2) # load 0x8d98c6a0 from memory into f22
fmsub.s f20, f17, f4, f22, dyn # perform operation
fmsub.s f20, f17, f4, f22, rdn # perform operation
fmsub.s f20, f17, f4, f22, rmm # perform operation
fmsub.s f20, f17, f4, f22, rne # perform operation
fmsub.s f20, f17, f4, f22, rtz # perform operation
fmsub.s f20, f17, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x19, 0x34bf04b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x8da0a5fc # load x3 with value 0x8da0a5fc
sw x3, 0(x2) # store 0x8da0a5fc in memory
flw f12, 0(x2) # load 0x8da0a5fc from memory into f12
fmsub.s f19, f21, f23, f12, dyn # perform operation
fmsub.s f19, f21, f23, f12, rdn # perform operation
fmsub.s f19, f21, f23, f12, rmm # perform operation
fmsub.s f19, f21, f23, f12, rne # perform operation
fmsub.s f19, f21, f23, f12, rtz # perform operation
fmsub.s f19, f21, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x10, 0xb9c9fc62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x06cf61aa # load x3 with value 0x06cf61aa
sw x3, 0(x2) # store 0x06cf61aa in memory
flw f13, 0(x2) # load 0x06cf61aa from memory into f13
fmsub.s f10, f8, f21, f13, dyn # perform operation
fmsub.s f10, f8, f21, f13, rdn # perform operation
fmsub.s f10, f8, f21, f13, rmm # perform operation
fmsub.s f10, f8, f21, f13, rne # perform operation
fmsub.s f10, f8, f21, f13, rtz # perform operation
fmsub.s f10, f8, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f8, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f8, f21, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x27, 0x0a60bb63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x40350f64 # load x3 with value 0x40350f64
sw x3, 0(x2) # store 0x40350f64 in memory
flw f1, 0(x2) # load 0x40350f64 from memory into f1
fmsub.s f27, f6, f11, f1, dyn # perform operation
fmsub.s f27, f6, f11, f1, rdn # perform operation
fmsub.s f27, f6, f11, f1, rmm # perform operation
fmsub.s f27, f6, f11, f1, rne # perform operation
fmsub.s f27, f6, f11, f1, rtz # perform operation
fmsub.s f27, f6, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f6, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f6, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f6, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f6, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f6, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x28, 0xb86d0bf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xc57eb2ca # load x3 with value 0xc57eb2ca
sw x3, 0(x2) # store 0xc57eb2ca in memory
flw f20, 0(x2) # load 0xc57eb2ca from memory into f20
fmsub.s f28, f30, f9, f20, dyn # perform operation
fmsub.s f28, f30, f9, f20, rdn # perform operation
fmsub.s f28, f30, f9, f20, rmm # perform operation
fmsub.s f28, f30, f9, f20, rne # perform operation
fmsub.s f28, f30, f9, f20, rtz # perform operation
fmsub.s f28, f30, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f30, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f30, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f30, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f30, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f30, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x6, 0x2569e365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x8f75b944 # load x3 with value 0x8f75b944
sw x3, 0(x2) # store 0x8f75b944 in memory
flw f9, 0(x2) # load 0x8f75b944 from memory into f9
fmsub.s f6, f21, f15, f9, dyn # perform operation
fmsub.s f6, f21, f15, f9, rdn # perform operation
fmsub.s f6, f21, f15, f9, rmm # perform operation
fmsub.s f6, f21, f15, f9, rne # perform operation
fmsub.s f6, f21, f15, f9, rtz # perform operation
fmsub.s f6, f21, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f21, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x5, 0x6701707d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x9d8768d3 # load x3 with value 0x9d8768d3
sw x3, 0(x2) # store 0x9d8768d3 in memory
flw f24, 0(x2) # load 0x9d8768d3 from memory into f24
fmsub.s f5, f17, f15, f24, dyn # perform operation
fmsub.s f5, f17, f15, f24, rdn # perform operation
fmsub.s f5, f17, f15, f24, rmm # perform operation
fmsub.s f5, f17, f15, f24, rne # perform operation
fmsub.s f5, f17, f15, f24, rtz # perform operation
fmsub.s f5, f17, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f17, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f17, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x19, 0x83fa9396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x50810b26 # load x3 with value 0x50810b26
sw x3, 0(x2) # store 0x50810b26 in memory
flw f26, 0(x2) # load 0x50810b26 from memory into f26
fmsub.s f19, f11, f14, f26, dyn # perform operation
fmsub.s f19, f11, f14, f26, rdn # perform operation
fmsub.s f19, f11, f14, f26, rmm # perform operation
fmsub.s f19, f11, f14, f26, rne # perform operation
fmsub.s f19, f11, f14, f26, rtz # perform operation
fmsub.s f19, f11, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f11, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f11, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f11, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f11, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f11, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x26, 0xe255445f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x3c0a224a # load x3 with value 0x3c0a224a
sw x3, 0(x2) # store 0x3c0a224a in memory
flw f13, 0(x2) # load 0x3c0a224a from memory into f13
fmsub.s f26, f5, f14, f13, dyn # perform operation
fmsub.s f26, f5, f14, f13, rdn # perform operation
fmsub.s f26, f5, f14, f13, rmm # perform operation
fmsub.s f26, f5, f14, f13, rne # perform operation
fmsub.s f26, f5, f14, f13, rtz # perform operation
fmsub.s f26, f5, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f5, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x23, 0xe99e4f24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x98fb9b6a # load x3 with value 0x98fb9b6a
sw x3, 0(x2) # store 0x98fb9b6a in memory
flw f27, 0(x2) # load 0x98fb9b6a from memory into f27
fmsub.s f23, f19, f17, f27, dyn # perform operation
fmsub.s f23, f19, f17, f27, rdn # perform operation
fmsub.s f23, f19, f17, f27, rmm # perform operation
fmsub.s f23, f19, f17, f27, rne # perform operation
fmsub.s f23, f19, f17, f27, rtz # perform operation
fmsub.s f23, f19, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f19, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f19, f17, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x4, 0x96a6ead2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x20bd1ba1 # load x3 with value 0x20bd1ba1
sw x3, 0(x2) # store 0x20bd1ba1 in memory
flw f27, 0(x2) # load 0x20bd1ba1 from memory into f27
fmsub.s f4, f11, f7, f27, dyn # perform operation
fmsub.s f4, f11, f7, f27, rdn # perform operation
fmsub.s f4, f11, f7, f27, rmm # perform operation
fmsub.s f4, f11, f7, f27, rne # perform operation
fmsub.s f4, f11, f7, f27, rtz # perform operation
fmsub.s f4, f11, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f11, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f11, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x29, 0x005dcf69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x1bd9d54a # load x3 with value 0x1bd9d54a
sw x3, 0(x2) # store 0x1bd9d54a in memory
flw f30, 0(x2) # load 0x1bd9d54a from memory into f30
fmsub.s f29, f2, f17, f30, dyn # perform operation
fmsub.s f29, f2, f17, f30, rdn # perform operation
fmsub.s f29, f2, f17, f30, rmm # perform operation
fmsub.s f29, f2, f17, f30, rne # perform operation
fmsub.s f29, f2, f17, f30, rtz # perform operation
fmsub.s f29, f2, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x3, 0x033fb474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x6f324e04 # load x3 with value 0x6f324e04
sw x3, 0(x2) # store 0x6f324e04 in memory
flw f14, 0(x2) # load 0x6f324e04 from memory into f14
fmsub.s f3, f15, f27, f14, dyn # perform operation
fmsub.s f3, f15, f27, f14, rdn # perform operation
fmsub.s f3, f15, f27, f14, rmm # perform operation
fmsub.s f3, f15, f27, f14, rne # perform operation
fmsub.s f3, f15, f27, f14, rtz # perform operation
fmsub.s f3, f15, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f15, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f15, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x31, 0x9214ce3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x45ce55e6 # load x3 with value 0x45ce55e6
sw x3, 0(x2) # store 0x45ce55e6 in memory
flw f4, 0(x2) # load 0x45ce55e6 from memory into f4
fmsub.s f31, f29, f28, f4, dyn # perform operation
fmsub.s f31, f29, f28, f4, rdn # perform operation
fmsub.s f31, f29, f28, f4, rmm # perform operation
fmsub.s f31, f29, f28, f4, rne # perform operation
fmsub.s f31, f29, f28, f4, rtz # perform operation
fmsub.s f31, f29, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f29, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f29, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f29, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f29, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f29, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x29, 0x12fbf9bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xa1ab8ed1 # load x3 with value 0xa1ab8ed1
sw x3, 0(x2) # store 0xa1ab8ed1 in memory
flw f1, 0(x2) # load 0xa1ab8ed1 from memory into f1
fmsub.s f29, f5, f19, f1, dyn # perform operation
fmsub.s f29, f5, f19, f1, rdn # perform operation
fmsub.s f29, f5, f19, f1, rmm # perform operation
fmsub.s f29, f5, f19, f1, rne # perform operation
fmsub.s f29, f5, f19, f1, rtz # perform operation
fmsub.s f29, f5, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f5, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f5, f19, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x28, 0xb93b2c65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x73129599 # load x3 with value 0x73129599
sw x3, 0(x2) # store 0x73129599 in memory
flw f24, 0(x2) # load 0x73129599 from memory into f24
fmsub.s f28, f25, f13, f24, dyn # perform operation
fmsub.s f28, f25, f13, f24, rdn # perform operation
fmsub.s f28, f25, f13, f24, rmm # perform operation
fmsub.s f28, f25, f13, f24, rne # perform operation
fmsub.s f28, f25, f13, f24, rtz # perform operation
fmsub.s f28, f25, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x18, 0x005e2260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x471e5d2d # load x3 with value 0x471e5d2d
sw x3, 0(x2) # store 0x471e5d2d in memory
flw f5, 0(x2) # load 0x471e5d2d from memory into f5
fmsub.s f18, f30, f15, f5, dyn # perform operation
fmsub.s f18, f30, f15, f5, rdn # perform operation
fmsub.s f18, f30, f15, f5, rmm # perform operation
fmsub.s f18, f30, f15, f5, rne # perform operation
fmsub.s f18, f30, f15, f5, rtz # perform operation
fmsub.s f18, f30, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f30, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f30, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f30, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f30, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f30, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x30, 0x3d66e136 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x08898a82 # load x3 with value 0x08898a82
sw x3, 0(x2) # store 0x08898a82 in memory
flw f4, 0(x2) # load 0x08898a82 from memory into f4
fmsub.s f30, f18, f3, f4, dyn # perform operation
fmsub.s f30, f18, f3, f4, rdn # perform operation
fmsub.s f30, f18, f3, f4, rmm # perform operation
fmsub.s f30, f18, f3, f4, rne # perform operation
fmsub.s f30, f18, f3, f4, rtz # perform operation
fmsub.s f30, f18, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f18, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f18, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f18, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f18, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f18, f3, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x25, 0xe9ed7d34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x5630dac3 # load x3 with value 0x5630dac3
sw x3, 0(x2) # store 0x5630dac3 in memory
flw f16, 0(x2) # load 0x5630dac3 from memory into f16
fmsub.s f25, f23, f28, f16, dyn # perform operation
fmsub.s f25, f23, f28, f16, rdn # perform operation
fmsub.s f25, f23, f28, f16, rmm # perform operation
fmsub.s f25, f23, f28, f16, rne # perform operation
fmsub.s f25, f23, f28, f16, rtz # perform operation
fmsub.s f25, f23, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x21, 0xe9046c68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x2a4e2e33 # load x3 with value 0x2a4e2e33
sw x3, 0(x2) # store 0x2a4e2e33 in memory
flw f1, 0(x2) # load 0x2a4e2e33 from memory into f1
fmsub.s f21, f25, f16, f1, dyn # perform operation
fmsub.s f21, f25, f16, f1, rdn # perform operation
fmsub.s f21, f25, f16, f1, rmm # perform operation
fmsub.s f21, f25, f16, f1, rne # perform operation
fmsub.s f21, f25, f16, f1, rtz # perform operation
fmsub.s f21, f25, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f16, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x9, 0xbf83ff84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x7852e8c3 # load x3 with value 0x7852e8c3
sw x3, 0(x2) # store 0x7852e8c3 in memory
flw f1, 0(x2) # load 0x7852e8c3 from memory into f1
fmsub.s f9, f18, f11, f1, dyn # perform operation
fmsub.s f9, f18, f11, f1, rdn # perform operation
fmsub.s f9, f18, f11, f1, rmm # perform operation
fmsub.s f9, f18, f11, f1, rne # perform operation
fmsub.s f9, f18, f11, f1, rtz # perform operation
fmsub.s f9, f18, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x18, 0x464a8f73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x2c57f267 # load x3 with value 0x2c57f267
sw x3, 0(x2) # store 0x2c57f267 in memory
flw f23, 0(x2) # load 0x2c57f267 from memory into f23
fmsub.s f18, f26, f7, f23, dyn # perform operation
fmsub.s f18, f26, f7, f23, rdn # perform operation
fmsub.s f18, f26, f7, f23, rmm # perform operation
fmsub.s f18, f26, f7, f23, rne # perform operation
fmsub.s f18, f26, f7, f23, rtz # perform operation
fmsub.s f18, f26, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x12, 0x6841f9df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x965dd99c # load x3 with value 0x965dd99c
sw x3, 0(x2) # store 0x965dd99c in memory
flw f22, 0(x2) # load 0x965dd99c from memory into f22
fmsub.s f12, f23, f26, f22, dyn # perform operation
fmsub.s f12, f23, f26, f22, rdn # perform operation
fmsub.s f12, f23, f26, f22, rmm # perform operation
fmsub.s f12, f23, f26, f22, rne # perform operation
fmsub.s f12, f23, f26, f22, rtz # perform operation
fmsub.s f12, f23, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f23, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f23, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f23, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f23, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f23, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x20, 0x510514b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x3fa786e0 # load x3 with value 0x3fa786e0
sw x3, 0(x2) # store 0x3fa786e0 in memory
flw f7, 0(x2) # load 0x3fa786e0 from memory into f7
fmsub.s f20, f23, f10, f7, dyn # perform operation
fmsub.s f20, f23, f10, f7, rdn # perform operation
fmsub.s f20, f23, f10, f7, rmm # perform operation
fmsub.s f20, f23, f10, f7, rne # perform operation
fmsub.s f20, f23, f10, f7, rtz # perform operation
fmsub.s f20, f23, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f23, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f23, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f23, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f23, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f23, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x17, 0x8e5cdf2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x8edb527d # load x3 with value 0x8edb527d
sw x3, 0(x2) # store 0x8edb527d in memory
flw f23, 0(x2) # load 0x8edb527d from memory into f23
fmsub.s f17, f31, f11, f23, dyn # perform operation
fmsub.s f17, f31, f11, f23, rdn # perform operation
fmsub.s f17, f31, f11, f23, rmm # perform operation
fmsub.s f17, f31, f11, f23, rne # perform operation
fmsub.s f17, f31, f11, f23, rtz # perform operation
fmsub.s f17, f31, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f31, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x24, 0x95baaa70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x80615d25 # load x3 with value 0x80615d25
sw x3, 0(x2) # store 0x80615d25 in memory
flw f31, 0(x2) # load 0x80615d25 from memory into f31
fmsub.s f24, f9, f11, f31, dyn # perform operation
fmsub.s f24, f9, f11, f31, rdn # perform operation
fmsub.s f24, f9, f11, f31, rmm # perform operation
fmsub.s f24, f9, f11, f31, rne # perform operation
fmsub.s f24, f9, f11, f31, rtz # perform operation
fmsub.s f24, f9, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f9, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f9, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f9, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f9, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f9, f11, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x14, 0x31ccf6d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xecdb00dd # load x3 with value 0xecdb00dd
sw x3, 0(x2) # store 0xecdb00dd in memory
flw f11, 0(x2) # load 0xecdb00dd from memory into f11
fmsub.s f14, f4, f25, f11, dyn # perform operation
fmsub.s f14, f4, f25, f11, rdn # perform operation
fmsub.s f14, f4, f25, f11, rmm # perform operation
fmsub.s f14, f4, f25, f11, rne # perform operation
fmsub.s f14, f4, f25, f11, rtz # perform operation
fmsub.s f14, f4, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f4, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f4, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x3, 0x3066a1c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0xe88915f6 # load x3 with value 0xe88915f6
sw x3, 0(x2) # store 0xe88915f6 in memory
flw f1, 0(x2) # load 0xe88915f6 from memory into f1
fmsub.s f3, f11, f24, f1, dyn # perform operation
fmsub.s f3, f11, f24, f1, rdn # perform operation
fmsub.s f3, f11, f24, f1, rmm # perform operation
fmsub.s f3, f11, f24, f1, rne # perform operation
fmsub.s f3, f11, f24, f1, rtz # perform operation
fmsub.s f3, f11, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x3, 0xddc42d1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xfb41c6f4 # load x3 with value 0xfb41c6f4
sw x3, 0(x2) # store 0xfb41c6f4 in memory
flw f9, 0(x2) # load 0xfb41c6f4 from memory into f9
fmsub.s f3, f6, f18, f9, dyn # perform operation
fmsub.s f3, f6, f18, f9, rdn # perform operation
fmsub.s f3, f6, f18, f9, rmm # perform operation
fmsub.s f3, f6, f18, f9, rne # perform operation
fmsub.s f3, f6, f18, f9, rtz # perform operation
fmsub.s f3, f6, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x12, 0xcbd1605e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x8ccbf385 # load x3 with value 0x8ccbf385
sw x3, 0(x2) # store 0x8ccbf385 in memory
flw f18, 0(x2) # load 0x8ccbf385 from memory into f18
fmsub.s f12, f28, f19, f18, dyn # perform operation
fmsub.s f12, f28, f19, f18, rdn # perform operation
fmsub.s f12, f28, f19, f18, rmm # perform operation
fmsub.s f12, f28, f19, f18, rne # perform operation
fmsub.s f12, f28, f19, f18, rtz # perform operation
fmsub.s f12, f28, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x28, 0x32601f1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x82d171f4 # load x3 with value 0x82d171f4
sw x3, 0(x2) # store 0x82d171f4 in memory
flw f10, 0(x2) # load 0x82d171f4 from memory into f10
fmsub.s f28, f11, f29, f10, dyn # perform operation
fmsub.s f28, f11, f29, f10, rdn # perform operation
fmsub.s f28, f11, f29, f10, rmm # perform operation
fmsub.s f28, f11, f29, f10, rne # perform operation
fmsub.s f28, f11, f29, f10, rtz # perform operation
fmsub.s f28, f11, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x10, 0x2ef6bdbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0xe60b5b18 # load x3 with value 0xe60b5b18
sw x3, 0(x2) # store 0xe60b5b18 in memory
flw f12, 0(x2) # load 0xe60b5b18 from memory into f12
fmsub.s f10, f20, f15, f12, dyn # perform operation
fmsub.s f10, f20, f15, f12, rdn # perform operation
fmsub.s f10, f20, f15, f12, rmm # perform operation
fmsub.s f10, f20, f15, f12, rne # perform operation
fmsub.s f10, f20, f15, f12, rtz # perform operation
fmsub.s f10, f20, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f20, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f20, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f20, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f20, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f20, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x6, 0xc4809af2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x91adfc75 # load x3 with value 0x91adfc75
sw x3, 0(x2) # store 0x91adfc75 in memory
flw f23, 0(x2) # load 0x91adfc75 from memory into f23
fmsub.s f6, f8, f20, f23, dyn # perform operation
fmsub.s f6, f8, f20, f23, rdn # perform operation
fmsub.s f6, f8, f20, f23, rmm # perform operation
fmsub.s f6, f8, f20, f23, rne # perform operation
fmsub.s f6, f8, f20, f23, rtz # perform operation
fmsub.s f6, f8, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f20, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x16, 0x20966e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x9d103e0a # load x3 with value 0x9d103e0a
sw x3, 0(x2) # store 0x9d103e0a in memory
flw f7, 0(x2) # load 0x9d103e0a from memory into f7
fmsub.s f16, f21, f30, f7, dyn # perform operation
fmsub.s f16, f21, f30, f7, rdn # perform operation
fmsub.s f16, f21, f30, f7, rmm # perform operation
fmsub.s f16, f21, f30, f7, rne # perform operation
fmsub.s f16, f21, f30, f7, rtz # perform operation
fmsub.s f16, f21, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f21, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f21, f30, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x18, 0xb89d03a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0xfb18848a # load x3 with value 0xfb18848a
sw x3, 0(x2) # store 0xfb18848a in memory
flw f26, 0(x2) # load 0xfb18848a from memory into f26
fmsub.s f18, f17, f12, f26, dyn # perform operation
fmsub.s f18, f17, f12, f26, rdn # perform operation
fmsub.s f18, f17, f12, f26, rmm # perform operation
fmsub.s f18, f17, f12, f26, rne # perform operation
fmsub.s f18, f17, f12, f26, rtz # perform operation
fmsub.s f18, f17, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f17, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x18, 0xed9c2ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0xede88367 # load x3 with value 0xede88367
sw x3, 0(x2) # store 0xede88367 in memory
flw f7, 0(x2) # load 0xede88367 from memory into f7
fmsub.s f18, f4, f19, f7, dyn # perform operation
fmsub.s f18, f4, f19, f7, rdn # perform operation
fmsub.s f18, f4, f19, f7, rmm # perform operation
fmsub.s f18, f4, f19, f7, rne # perform operation
fmsub.s f18, f4, f19, f7, rtz # perform operation
fmsub.s f18, f4, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f4, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f4, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f4, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f4, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f4, f19, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x6, 0x11f0a1f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x8025dc64 # load x3 with value 0x8025dc64
sw x3, 0(x2) # store 0x8025dc64 in memory
flw f18, 0(x2) # load 0x8025dc64 from memory into f18
fmsub.s f6, f16, f17, f18, dyn # perform operation
fmsub.s f6, f16, f17, f18, rdn # perform operation
fmsub.s f6, f16, f17, f18, rmm # perform operation
fmsub.s f6, f16, f17, f18, rne # perform operation
fmsub.s f6, f16, f17, f18, rtz # perform operation
fmsub.s f6, f16, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f16, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f16, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x26, 0xee3db4a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x3e001791 # load x3 with value 0x3e001791
sw x3, 0(x2) # store 0x3e001791 in memory
flw f2, 0(x2) # load 0x3e001791 from memory into f2
fmsub.s f26, f15, f9, f2, dyn # perform operation
fmsub.s f26, f15, f9, f2, rdn # perform operation
fmsub.s f26, f15, f9, f2, rmm # perform operation
fmsub.s f26, f15, f9, f2, rne # perform operation
fmsub.s f26, f15, f9, f2, rtz # perform operation
fmsub.s f26, f15, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x27, 0x2632c40a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0xff771a14 # load x3 with value 0xff771a14
sw x3, 0(x2) # store 0xff771a14 in memory
flw f12, 0(x2) # load 0xff771a14 from memory into f12
fmsub.s f27, f5, f31, f12, dyn # perform operation
fmsub.s f27, f5, f31, f12, rdn # perform operation
fmsub.s f27, f5, f31, f12, rmm # perform operation
fmsub.s f27, f5, f31, f12, rne # perform operation
fmsub.s f27, f5, f31, f12, rtz # perform operation
fmsub.s f27, f5, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x15, 0xbb4f72ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xb48681bf # load x3 with value 0xb48681bf
sw x3, 0(x2) # store 0xb48681bf in memory
flw f16, 0(x2) # load 0xb48681bf from memory into f16
fmsub.s f15, f4, f7, f16, dyn # perform operation
fmsub.s f15, f4, f7, f16, rdn # perform operation
fmsub.s f15, f4, f7, f16, rmm # perform operation
fmsub.s f15, f4, f7, f16, rne # perform operation
fmsub.s f15, f4, f7, f16, rtz # perform operation
fmsub.s f15, f4, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f4, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f4, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f4, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f4, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f4, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x2, 0x7138bdd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x6825be9f # load x3 with value 0x6825be9f
sw x3, 0(x2) # store 0x6825be9f in memory
flw f31, 0(x2) # load 0x6825be9f from memory into f31
fmsub.s f2, f9, f1, f31, dyn # perform operation
fmsub.s f2, f9, f1, f31, rdn # perform operation
fmsub.s f2, f9, f1, f31, rmm # perform operation
fmsub.s f2, f9, f1, f31, rne # perform operation
fmsub.s f2, f9, f1, f31, rtz # perform operation
fmsub.s f2, f9, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f1, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x18, 0x5bfcb24d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x90ebb581 # load x3 with value 0x90ebb581
sw x3, 0(x2) # store 0x90ebb581 in memory
flw f10, 0(x2) # load 0x90ebb581 from memory into f10
fmsub.s f18, f23, f30, f10, dyn # perform operation
fmsub.s f18, f23, f30, f10, rdn # perform operation
fmsub.s f18, f23, f30, f10, rmm # perform operation
fmsub.s f18, f23, f30, f10, rne # perform operation
fmsub.s f18, f23, f30, f10, rtz # perform operation
fmsub.s f18, f23, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x29, 0x42559f52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x42678775 # load x3 with value 0x42678775
sw x3, 0(x2) # store 0x42678775 in memory
flw f11, 0(x2) # load 0x42678775 from memory into f11
fmsub.s f29, f7, f9, f11, dyn # perform operation
fmsub.s f29, f7, f9, f11, rdn # perform operation
fmsub.s f29, f7, f9, f11, rmm # perform operation
fmsub.s f29, f7, f9, f11, rne # perform operation
fmsub.s f29, f7, f9, f11, rtz # perform operation
fmsub.s f29, f7, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f7, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f7, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x13, 0xfa096933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0xdf583c25 # load x3 with value 0xdf583c25
sw x3, 0(x2) # store 0xdf583c25 in memory
flw f3, 0(x2) # load 0xdf583c25 from memory into f3
fmsub.s f13, f7, f11, f3, dyn # perform operation
fmsub.s f13, f7, f11, f3, rdn # perform operation
fmsub.s f13, f7, f11, f3, rmm # perform operation
fmsub.s f13, f7, f11, f3, rne # perform operation
fmsub.s f13, f7, f11, f3, rtz # perform operation
fmsub.s f13, f7, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f7, f11, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x5, 0x927fb5c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xa3b5d711 # load x3 with value 0xa3b5d711
sw x3, 0(x2) # store 0xa3b5d711 in memory
flw f25, 0(x2) # load 0xa3b5d711 from memory into f25
fmsub.s f5, f19, f2, f25, dyn # perform operation
fmsub.s f5, f19, f2, f25, rdn # perform operation
fmsub.s f5, f19, f2, f25, rmm # perform operation
fmsub.s f5, f19, f2, f25, rne # perform operation
fmsub.s f5, f19, f2, f25, rtz # perform operation
fmsub.s f5, f19, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x16, 0x76fe25d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xd69f8d6a # load x3 with value 0xd69f8d6a
sw x3, 0(x2) # store 0xd69f8d6a in memory
flw f9, 0(x2) # load 0xd69f8d6a from memory into f9
fmsub.s f16, f8, f27, f9, dyn # perform operation
fmsub.s f16, f8, f27, f9, rdn # perform operation
fmsub.s f16, f8, f27, f9, rmm # perform operation
fmsub.s f16, f8, f27, f9, rne # perform operation
fmsub.s f16, f8, f27, f9, rtz # perform operation
fmsub.s f16, f8, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f8, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f8, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x5, 0x2bd1d82a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xf8986b7a # load x3 with value 0xf8986b7a
sw x3, 0(x2) # store 0xf8986b7a in memory
flw f26, 0(x2) # load 0xf8986b7a from memory into f26
fmsub.s f5, f19, f7, f26, dyn # perform operation
fmsub.s f5, f19, f7, f26, rdn # perform operation
fmsub.s f5, f19, f7, f26, rmm # perform operation
fmsub.s f5, f19, f7, f26, rne # perform operation
fmsub.s f5, f19, f7, f26, rtz # perform operation
fmsub.s f5, f19, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f7, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x23, 0x61b0c6e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xb5a9d184 # load x3 with value 0xb5a9d184
sw x3, 0(x2) # store 0xb5a9d184 in memory
flw f20, 0(x2) # load 0xb5a9d184 from memory into f20
fmsub.s f23, f26, f27, f20, dyn # perform operation
fmsub.s f23, f26, f27, f20, rdn # perform operation
fmsub.s f23, f26, f27, f20, rmm # perform operation
fmsub.s f23, f26, f27, f20, rne # perform operation
fmsub.s f23, f26, f27, f20, rtz # perform operation
fmsub.s f23, f26, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f26, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f26, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x23, 0x83152ab1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x255f2054 # load x3 with value 0x255f2054
sw x3, 0(x2) # store 0x255f2054 in memory
flw f14, 0(x2) # load 0x255f2054 from memory into f14
fmsub.s f23, f10, f6, f14, dyn # perform operation
fmsub.s f23, f10, f6, f14, rdn # perform operation
fmsub.s f23, f10, f6, f14, rmm # perform operation
fmsub.s f23, f10, f6, f14, rne # perform operation
fmsub.s f23, f10, f6, f14, rtz # perform operation
fmsub.s f23, f10, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x19, 0xdcdd17d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0xaaa97318 # load x3 with value 0xaaa97318
sw x3, 0(x2) # store 0xaaa97318 in memory
flw f6, 0(x2) # load 0xaaa97318 from memory into f6
fmsub.s f19, f24, f9, f6, dyn # perform operation
fmsub.s f19, f24, f9, f6, rdn # perform operation
fmsub.s f19, f24, f9, f6, rmm # perform operation
fmsub.s f19, f24, f9, f6, rne # perform operation
fmsub.s f19, f24, f9, f6, rtz # perform operation
fmsub.s f19, f24, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f24, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f24, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f24, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f24, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f24, f9, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x14, 0x2a0d7fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x4d2b5c1e # load x3 with value 0x4d2b5c1e
sw x3, 0(x2) # store 0x4d2b5c1e in memory
flw f25, 0(x2) # load 0x4d2b5c1e from memory into f25
fmsub.s f14, f3, f26, f25, dyn # perform operation
fmsub.s f14, f3, f26, f25, rdn # perform operation
fmsub.s f14, f3, f26, f25, rmm # perform operation
fmsub.s f14, f3, f26, f25, rne # perform operation
fmsub.s f14, f3, f26, f25, rtz # perform operation
fmsub.s f14, f3, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x12, 0xe44f134e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0xbafbde0e # load x3 with value 0xbafbde0e
sw x3, 0(x2) # store 0xbafbde0e in memory
flw f5, 0(x2) # load 0xbafbde0e from memory into f5
fmsub.s f12, f7, f22, f5, dyn # perform operation
fmsub.s f12, f7, f22, f5, rdn # perform operation
fmsub.s f12, f7, f22, f5, rmm # perform operation
fmsub.s f12, f7, f22, f5, rne # perform operation
fmsub.s f12, f7, f22, f5, rtz # perform operation
fmsub.s f12, f7, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f7, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x9, 0x8aebcee0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xb2b27ec3 # load x3 with value 0xb2b27ec3
sw x3, 0(x2) # store 0xb2b27ec3 in memory
flw f3, 0(x2) # load 0xb2b27ec3 from memory into f3
fmsub.s f9, f28, f19, f3, dyn # perform operation
fmsub.s f9, f28, f19, f3, rdn # perform operation
fmsub.s f9, f28, f19, f3, rmm # perform operation
fmsub.s f9, f28, f19, f3, rne # perform operation
fmsub.s f9, f28, f19, f3, rtz # perform operation
fmsub.s f9, f28, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x24, 0x9f66823d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x3e912533 # load x3 with value 0x3e912533
sw x3, 0(x2) # store 0x3e912533 in memory
flw f7, 0(x2) # load 0x3e912533 from memory into f7
fmsub.s f24, f15, f29, f7, dyn # perform operation
fmsub.s f24, f15, f29, f7, rdn # perform operation
fmsub.s f24, f15, f29, f7, rmm # perform operation
fmsub.s f24, f15, f29, f7, rne # perform operation
fmsub.s f24, f15, f29, f7, rtz # perform operation
fmsub.s f24, f15, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f15, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f15, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f15, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f15, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f15, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x30, 0x00edc6ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xc67846f8 # load x3 with value 0xc67846f8
sw x3, 0(x2) # store 0xc67846f8 in memory
flw f12, 0(x2) # load 0xc67846f8 from memory into f12
fmsub.s f30, f21, f25, f12, dyn # perform operation
fmsub.s f30, f21, f25, f12, rdn # perform operation
fmsub.s f30, f21, f25, f12, rmm # perform operation
fmsub.s f30, f21, f25, f12, rne # perform operation
fmsub.s f30, f21, f25, f12, rtz # perform operation
fmsub.s f30, f21, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x5, 0x8f97cb8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x7a3984e6 # load x3 with value 0x7a3984e6
sw x3, 0(x2) # store 0x7a3984e6 in memory
flw f4, 0(x2) # load 0x7a3984e6 from memory into f4
fmsub.s f5, f8, f22, f4, dyn # perform operation
fmsub.s f5, f8, f22, f4, rdn # perform operation
fmsub.s f5, f8, f22, f4, rmm # perform operation
fmsub.s f5, f8, f22, f4, rne # perform operation
fmsub.s f5, f8, f22, f4, rtz # perform operation
fmsub.s f5, f8, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f8, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f8, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x24, 0xdf4880f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xe0028bdd # load x3 with value 0xe0028bdd
sw x3, 0(x2) # store 0xe0028bdd in memory
flw f15, 0(x2) # load 0xe0028bdd from memory into f15
fmsub.s f24, f7, f31, f15, dyn # perform operation
fmsub.s f24, f7, f31, f15, rdn # perform operation
fmsub.s f24, f7, f31, f15, rmm # perform operation
fmsub.s f24, f7, f31, f15, rne # perform operation
fmsub.s f24, f7, f31, f15, rtz # perform operation
fmsub.s f24, f7, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f7, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f7, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f7, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f7, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f7, f31, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x1, 0x85c79428 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0xb4ce2fd7 # load x3 with value 0xb4ce2fd7
sw x3, 0(x2) # store 0xb4ce2fd7 in memory
flw f22, 0(x2) # load 0xb4ce2fd7 from memory into f22
fmsub.s f1, f21, f2, f22, dyn # perform operation
fmsub.s f1, f21, f2, f22, rdn # perform operation
fmsub.s f1, f21, f2, f22, rmm # perform operation
fmsub.s f1, f21, f2, f22, rne # perform operation
fmsub.s f1, f21, f2, f22, rtz # perform operation
fmsub.s f1, f21, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f21, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f21, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f21, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f21, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f21, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x17, 0x75daf68f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x16a72cba # load x3 with value 0x16a72cba
sw x3, 0(x2) # store 0x16a72cba in memory
flw f27, 0(x2) # load 0x16a72cba from memory into f27
fmsub.s f17, f10, f4, f27, dyn # perform operation
fmsub.s f17, f10, f4, f27, rdn # perform operation
fmsub.s f17, f10, f4, f27, rmm # perform operation
fmsub.s f17, f10, f4, f27, rne # perform operation
fmsub.s f17, f10, f4, f27, rtz # perform operation
fmsub.s f17, f10, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f10, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f10, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f10, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f10, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f10, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x17, 0x4e84104d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xf383235c # load x3 with value 0xf383235c
sw x3, 0(x2) # store 0xf383235c in memory
flw f14, 0(x2) # load 0xf383235c from memory into f14
fmsub.s f17, f2, f27, f14, dyn # perform operation
fmsub.s f17, f2, f27, f14, rdn # perform operation
fmsub.s f17, f2, f27, f14, rmm # perform operation
fmsub.s f17, f2, f27, f14, rne # perform operation
fmsub.s f17, f2, f27, f14, rtz # perform operation
fmsub.s f17, f2, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x26, 0xde2c3e6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0xe4602d29 # load x3 with value 0xe4602d29
sw x3, 0(x2) # store 0xe4602d29 in memory
flw f12, 0(x2) # load 0xe4602d29 from memory into f12
fmsub.s f26, f20, f3, f12, dyn # perform operation
fmsub.s f26, f20, f3, f12, rdn # perform operation
fmsub.s f26, f20, f3, f12, rmm # perform operation
fmsub.s f26, f20, f3, f12, rne # perform operation
fmsub.s f26, f20, f3, f12, rtz # perform operation
fmsub.s f26, f20, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x19, 0xf010d00d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x7798835d # load x3 with value 0x7798835d
sw x3, 0(x2) # store 0x7798835d in memory
flw f7, 0(x2) # load 0x7798835d from memory into f7
fmsub.s f19, f16, f26, f7, dyn # perform operation
fmsub.s f19, f16, f26, f7, rdn # perform operation
fmsub.s f19, f16, f26, f7, rmm # perform operation
fmsub.s f19, f16, f26, f7, rne # perform operation
fmsub.s f19, f16, f26, f7, rtz # perform operation
fmsub.s f19, f16, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f16, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f16, f26, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x20, 0x1dd69393 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xd73e704d # load x3 with value 0xd73e704d
sw x3, 0(x2) # store 0xd73e704d in memory
flw f17, 0(x2) # load 0xd73e704d from memory into f17
fmsub.s f20, f22, f30, f17, dyn # perform operation
fmsub.s f20, f22, f30, f17, rdn # perform operation
fmsub.s f20, f22, f30, f17, rmm # perform operation
fmsub.s f20, f22, f30, f17, rne # perform operation
fmsub.s f20, f22, f30, f17, rtz # perform operation
fmsub.s f20, f22, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f22, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f22, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f22, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f22, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f22, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x28, 0x13a77052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x635b3e2c # load x3 with value 0x635b3e2c
sw x3, 0(x2) # store 0x635b3e2c in memory
flw f25, 0(x2) # load 0x635b3e2c from memory into f25
fmsub.s f28, f20, f12, f25, dyn # perform operation
fmsub.s f28, f20, f12, f25, rdn # perform operation
fmsub.s f28, f20, f12, f25, rmm # perform operation
fmsub.s f28, f20, f12, f25, rne # perform operation
fmsub.s f28, f20, f12, f25, rtz # perform operation
fmsub.s f28, f20, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f12, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x16, 0xd39ee66e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x92eb92ca # load x3 with value 0x92eb92ca
sw x3, 0(x2) # store 0x92eb92ca in memory
flw f3, 0(x2) # load 0x92eb92ca from memory into f3
fmsub.s f16, f12, f20, f3, dyn # perform operation
fmsub.s f16, f12, f20, f3, rdn # perform operation
fmsub.s f16, f12, f20, f3, rmm # perform operation
fmsub.s f16, f12, f20, f3, rne # perform operation
fmsub.s f16, f12, f20, f3, rtz # perform operation
fmsub.s f16, f12, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x13, 0x82902dad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0xcd591add # load x3 with value 0xcd591add
sw x3, 0(x2) # store 0xcd591add in memory
flw f17, 0(x2) # load 0xcd591add from memory into f17
fmsub.s f13, f4, f1, f17, dyn # perform operation
fmsub.s f13, f4, f1, f17, rdn # perform operation
fmsub.s f13, f4, f1, f17, rmm # perform operation
fmsub.s f13, f4, f1, f17, rne # perform operation
fmsub.s f13, f4, f1, f17, rtz # perform operation
fmsub.s f13, f4, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f4, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f4, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f4, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f4, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f4, f1, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x20, 0x8ad36fa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0xae553fec # load x3 with value 0xae553fec
sw x3, 0(x2) # store 0xae553fec in memory
flw f29, 0(x2) # load 0xae553fec from memory into f29
fmsub.s f20, f9, f26, f29, dyn # perform operation
fmsub.s f20, f9, f26, f29, rdn # perform operation
fmsub.s f20, f9, f26, f29, rmm # perform operation
fmsub.s f20, f9, f26, f29, rne # perform operation
fmsub.s f20, f9, f26, f29, rtz # perform operation
fmsub.s f20, f9, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f9, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f9, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x30, 0xddc1dc31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x02125c9d # load x3 with value 0x02125c9d
sw x3, 0(x2) # store 0x02125c9d in memory
flw f14, 0(x2) # load 0x02125c9d from memory into f14
fmsub.s f30, f8, f16, f14, dyn # perform operation
fmsub.s f30, f8, f16, f14, rdn # perform operation
fmsub.s f30, f8, f16, f14, rmm # perform operation
fmsub.s f30, f8, f16, f14, rne # perform operation
fmsub.s f30, f8, f16, f14, rtz # perform operation
fmsub.s f30, f8, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f16, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x30, 0x0e758420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0xeb16053d # load x3 with value 0xeb16053d
sw x3, 0(x2) # store 0xeb16053d in memory
flw f26, 0(x2) # load 0xeb16053d from memory into f26
fmsub.s f30, f7, f24, f26, dyn # perform operation
fmsub.s f30, f7, f24, f26, rdn # perform operation
fmsub.s f30, f7, f24, f26, rmm # perform operation
fmsub.s f30, f7, f24, f26, rne # perform operation
fmsub.s f30, f7, f24, f26, rtz # perform operation
fmsub.s f30, f7, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x8, 0x989ae815 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0xda48492f # load x3 with value 0xda48492f
sw x3, 0(x2) # store 0xda48492f in memory
flw f20, 0(x2) # load 0xda48492f from memory into f20
fmsub.s f8, f29, f15, f20, dyn # perform operation
fmsub.s f8, f29, f15, f20, rdn # perform operation
fmsub.s f8, f29, f15, f20, rmm # perform operation
fmsub.s f8, f29, f15, f20, rne # perform operation
fmsub.s f8, f29, f15, f20, rtz # perform operation
fmsub.s f8, f29, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f29, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x13, 0x36675cdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xaf15f637 # load x3 with value 0xaf15f637
sw x3, 0(x2) # store 0xaf15f637 in memory
flw f28, 0(x2) # load 0xaf15f637 from memory into f28
fmsub.s f13, f22, f30, f28, dyn # perform operation
fmsub.s f13, f22, f30, f28, rdn # perform operation
fmsub.s f13, f22, f30, f28, rmm # perform operation
fmsub.s f13, f22, f30, f28, rne # perform operation
fmsub.s f13, f22, f30, f28, rtz # perform operation
fmsub.s f13, f22, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f22, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f22, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f22, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f22, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f22, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x29, 0x1570519c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xc5ee64ec # load x3 with value 0xc5ee64ec
sw x3, 0(x2) # store 0xc5ee64ec in memory
flw f3, 0(x2) # load 0xc5ee64ec from memory into f3
fmsub.s f29, f13, f20, f3, dyn # perform operation
fmsub.s f29, f13, f20, f3, rdn # perform operation
fmsub.s f29, f13, f20, f3, rmm # perform operation
fmsub.s f29, f13, f20, f3, rne # perform operation
fmsub.s f29, f13, f20, f3, rtz # perform operation
fmsub.s f29, f13, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x16, 0xc9f734ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x409cf64b # load x3 with value 0x409cf64b
sw x3, 0(x2) # store 0x409cf64b in memory
flw f3, 0(x2) # load 0x409cf64b from memory into f3
fmsub.s f16, f27, f15, f3, dyn # perform operation
fmsub.s f16, f27, f15, f3, rdn # perform operation
fmsub.s f16, f27, f15, f3, rmm # perform operation
fmsub.s f16, f27, f15, f3, rne # perform operation
fmsub.s f16, f27, f15, f3, rtz # perform operation
fmsub.s f16, f27, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f27, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x16, 0x284aaef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0x6534f7e2 # load x3 with value 0x6534f7e2
sw x3, 0(x2) # store 0x6534f7e2 in memory
flw f1, 0(x2) # load 0x6534f7e2 from memory into f1
fmsub.s f16, f24, f29, f1, dyn # perform operation
fmsub.s f16, f24, f29, f1, rdn # perform operation
fmsub.s f16, f24, f29, f1, rmm # perform operation
fmsub.s f16, f24, f29, f1, rne # perform operation
fmsub.s f16, f24, f29, f1, rtz # perform operation
fmsub.s f16, f24, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x11, 0x9245c378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0xa9bda7b3 # load x3 with value 0xa9bda7b3
sw x3, 0(x2) # store 0xa9bda7b3 in memory
flw f23, 0(x2) # load 0xa9bda7b3 from memory into f23
fmsub.s f11, f8, f14, f23, dyn # perform operation
fmsub.s f11, f8, f14, f23, rdn # perform operation
fmsub.s f11, f8, f14, f23, rmm # perform operation
fmsub.s f11, f8, f14, f23, rne # perform operation
fmsub.s f11, f8, f14, f23, rtz # perform operation
fmsub.s f11, f8, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x9, 0xe1ce1934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0xf2abaa8f # load x3 with value 0xf2abaa8f
sw x3, 0(x2) # store 0xf2abaa8f in memory
flw f5, 0(x2) # load 0xf2abaa8f from memory into f5
fmsub.s f9, f28, f11, f5, dyn # perform operation
fmsub.s f9, f28, f11, f5, rdn # perform operation
fmsub.s f9, f28, f11, f5, rmm # perform operation
fmsub.s f9, f28, f11, f5, rne # perform operation
fmsub.s f9, f28, f11, f5, rtz # perform operation
fmsub.s f9, f28, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x2, 0xefabbf41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x6a631e93 # load x3 with value 0x6a631e93
sw x3, 0(x2) # store 0x6a631e93 in memory
flw f15, 0(x2) # load 0x6a631e93 from memory into f15
fmsub.s f2, f14, f5, f15, dyn # perform operation
fmsub.s f2, f14, f5, f15, rdn # perform operation
fmsub.s f2, f14, f5, f15, rmm # perform operation
fmsub.s f2, f14, f5, f15, rne # perform operation
fmsub.s f2, f14, f5, f15, rtz # perform operation
fmsub.s f2, f14, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x2, 0x93cd9574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0xa4fc9bd7 # load x3 with value 0xa4fc9bd7
sw x3, 0(x2) # store 0xa4fc9bd7 in memory
flw f27, 0(x2) # load 0xa4fc9bd7 from memory into f27
fmsub.s f2, f17, f4, f27, dyn # perform operation
fmsub.s f2, f17, f4, f27, rdn # perform operation
fmsub.s f2, f17, f4, f27, rmm # perform operation
fmsub.s f2, f17, f4, f27, rne # perform operation
fmsub.s f2, f17, f4, f27, rtz # perform operation
fmsub.s f2, f17, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f17, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f17, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x24, 0x6270c39d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0xff298cbe # load x3 with value 0xff298cbe
sw x3, 0(x2) # store 0xff298cbe in memory
flw f20, 0(x2) # load 0xff298cbe from memory into f20
fmsub.s f24, f26, f23, f20, dyn # perform operation
fmsub.s f24, f26, f23, f20, rdn # perform operation
fmsub.s f24, f26, f23, f20, rmm # perform operation
fmsub.s f24, f26, f23, f20, rne # perform operation
fmsub.s f24, f26, f23, f20, rtz # perform operation
fmsub.s f24, f26, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f23, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x25, 0x184fb8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x1ff6e8a4 # load x3 with value 0x1ff6e8a4
sw x3, 0(x2) # store 0x1ff6e8a4 in memory
flw f21, 0(x2) # load 0x1ff6e8a4 from memory into f21
fmsub.s f25, f30, f23, f21, dyn # perform operation
fmsub.s f25, f30, f23, f21, rdn # perform operation
fmsub.s f25, f30, f23, f21, rmm # perform operation
fmsub.s f25, f30, f23, f21, rne # perform operation
fmsub.s f25, f30, f23, f21, rtz # perform operation
fmsub.s f25, f30, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f30, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f30, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x14, 0xe9333a90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0xfb4b7260 # load x3 with value 0xfb4b7260
sw x3, 0(x2) # store 0xfb4b7260 in memory
flw f16, 0(x2) # load 0xfb4b7260 from memory into f16
fmsub.s f14, f29, f23, f16, dyn # perform operation
fmsub.s f14, f29, f23, f16, rdn # perform operation
fmsub.s f14, f29, f23, f16, rmm # perform operation
fmsub.s f14, f29, f23, f16, rne # perform operation
fmsub.s f14, f29, f23, f16, rtz # perform operation
fmsub.s f14, f29, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x11, 0x0e4b9c23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xa28fd7aa # load x3 with value 0xa28fd7aa
sw x3, 0(x2) # store 0xa28fd7aa in memory
flw f27, 0(x2) # load 0xa28fd7aa from memory into f27
fmsub.s f11, f13, f12, f27, dyn # perform operation
fmsub.s f11, f13, f12, f27, rdn # perform operation
fmsub.s f11, f13, f12, f27, rmm # perform operation
fmsub.s f11, f13, f12, f27, rne # perform operation
fmsub.s f11, f13, f12, f27, rtz # perform operation
fmsub.s f11, f13, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x21, 0x5194e560 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x4d134755 # load x3 with value 0x4d134755
sw x3, 0(x2) # store 0x4d134755 in memory
flw f14, 0(x2) # load 0x4d134755 from memory into f14
fmsub.s f21, f19, f13, f14, dyn # perform operation
fmsub.s f21, f19, f13, f14, rdn # perform operation
fmsub.s f21, f19, f13, f14, rmm # perform operation
fmsub.s f21, f19, f13, f14, rne # perform operation
fmsub.s f21, f19, f13, f14, rtz # perform operation
fmsub.s f21, f19, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x29, 0xf1cb57ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x66dcde24 # load x3 with value 0x66dcde24
sw x3, 0(x2) # store 0x66dcde24 in memory
flw f16, 0(x2) # load 0x66dcde24 from memory into f16
fmsub.s f29, f30, f18, f16, dyn # perform operation
fmsub.s f29, f30, f18, f16, rdn # perform operation
fmsub.s f29, f30, f18, f16, rmm # perform operation
fmsub.s f29, f30, f18, f16, rne # perform operation
fmsub.s f29, f30, f18, f16, rtz # perform operation
fmsub.s f29, f30, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f30, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x19, 0x8b308c75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x3720a121 # load x3 with value 0x3720a121
sw x3, 0(x2) # store 0x3720a121 in memory
flw f22, 0(x2) # load 0x3720a121 from memory into f22
fmsub.s f19, f15, f17, f22, dyn # perform operation
fmsub.s f19, f15, f17, f22, rdn # perform operation
fmsub.s f19, f15, f17, f22, rmm # perform operation
fmsub.s f19, f15, f17, f22, rne # perform operation
fmsub.s f19, f15, f17, f22, rtz # perform operation
fmsub.s f19, f15, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x15, 0xc2b2cf2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xdf04cb7f # load x3 with value 0xdf04cb7f
sw x3, 0(x2) # store 0xdf04cb7f in memory
flw f10, 0(x2) # load 0xdf04cb7f from memory into f10
fmsub.s f15, f23, f3, f10, dyn # perform operation
fmsub.s f15, f23, f3, f10, rdn # perform operation
fmsub.s f15, f23, f3, f10, rmm # perform operation
fmsub.s f15, f23, f3, f10, rne # perform operation
fmsub.s f15, f23, f3, f10, rtz # perform operation
fmsub.s f15, f23, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f3, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x10, 0x5f2baa98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xdc82b202 # load x3 with value 0xdc82b202
sw x3, 0(x2) # store 0xdc82b202 in memory
flw f31, 0(x2) # load 0xdc82b202 from memory into f31
fmsub.s f10, f9, f18, f31, dyn # perform operation
fmsub.s f10, f9, f18, f31, rdn # perform operation
fmsub.s f10, f9, f18, f31, rmm # perform operation
fmsub.s f10, f9, f18, f31, rne # perform operation
fmsub.s f10, f9, f18, f31, rtz # perform operation
fmsub.s f10, f9, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f18, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x17, 0x9359e27f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x9ad0d009 # load x3 with value 0x9ad0d009
sw x3, 0(x2) # store 0x9ad0d009 in memory
flw f3, 0(x2) # load 0x9ad0d009 from memory into f3
fmsub.s f17, f11, f4, f3, dyn # perform operation
fmsub.s f17, f11, f4, f3, rdn # perform operation
fmsub.s f17, f11, f4, f3, rmm # perform operation
fmsub.s f17, f11, f4, f3, rne # perform operation
fmsub.s f17, f11, f4, f3, rtz # perform operation
fmsub.s f17, f11, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f11, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f11, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f11, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f11, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f11, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x18, 0x7b1c1b4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x991b12f8 # load x3 with value 0x991b12f8
sw x3, 0(x2) # store 0x991b12f8 in memory
flw f29, 0(x2) # load 0x991b12f8 from memory into f29
fmsub.s f18, f3, f11, f29, dyn # perform operation
fmsub.s f18, f3, f11, f29, rdn # perform operation
fmsub.s f18, f3, f11, f29, rmm # perform operation
fmsub.s f18, f3, f11, f29, rne # perform operation
fmsub.s f18, f3, f11, f29, rtz # perform operation
fmsub.s f18, f3, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f3, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f3, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x13, 0xef1467b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xcd04fc26 # load x3 with value 0xcd04fc26
sw x3, 0(x2) # store 0xcd04fc26 in memory
flw f2, 0(x2) # load 0xcd04fc26 from memory into f2
fmsub.s f13, f29, f12, f2, dyn # perform operation
fmsub.s f13, f29, f12, f2, rdn # perform operation
fmsub.s f13, f29, f12, f2, rmm # perform operation
fmsub.s f13, f29, f12, f2, rne # perform operation
fmsub.s f13, f29, f12, f2, rtz # perform operation
fmsub.s f13, f29, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f29, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f29, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x10, 0x96b350ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x3c74eb2d # load x3 with value 0x3c74eb2d
sw x3, 0(x2) # store 0x3c74eb2d in memory
flw f27, 0(x2) # load 0x3c74eb2d from memory into f27
fmsub.s f10, f30, f22, f27, dyn # perform operation
fmsub.s f10, f30, f22, f27, rdn # perform operation
fmsub.s f10, f30, f22, f27, rmm # perform operation
fmsub.s f10, f30, f22, f27, rne # perform operation
fmsub.s f10, f30, f22, f27, rtz # perform operation
fmsub.s f10, f30, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f30, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f30, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x12, 0xaa44763b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x96f10da1 # load x3 with value 0x96f10da1
sw x3, 0(x2) # store 0x96f10da1 in memory
flw f4, 0(x2) # load 0x96f10da1 from memory into f4
fmsub.s f12, f8, f25, f4, dyn # perform operation
fmsub.s f12, f8, f25, f4, rdn # perform operation
fmsub.s f12, f8, f25, f4, rmm # perform operation
fmsub.s f12, f8, f25, f4, rne # perform operation
fmsub.s f12, f8, f25, f4, rtz # perform operation
fmsub.s f12, f8, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x29, 0x8e6e9b07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x5220fde2 # load x3 with value 0x5220fde2
sw x3, 0(x2) # store 0x5220fde2 in memory
flw f27, 0(x2) # load 0x5220fde2 from memory into f27
fmsub.s f29, f26, f8, f27, dyn # perform operation
fmsub.s f29, f26, f8, f27, rdn # perform operation
fmsub.s f29, f26, f8, f27, rmm # perform operation
fmsub.s f29, f26, f8, f27, rne # perform operation
fmsub.s f29, f26, f8, f27, rtz # perform operation
fmsub.s f29, f26, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f8, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x18, 0x2208dd9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x64cc41af # load x3 with value 0x64cc41af
sw x3, 0(x2) # store 0x64cc41af in memory
flw f30, 0(x2) # load 0x64cc41af from memory into f30
fmsub.s f18, f26, f20, f30, dyn # perform operation
fmsub.s f18, f26, f20, f30, rdn # perform operation
fmsub.s f18, f26, f20, f30, rmm # perform operation
fmsub.s f18, f26, f20, f30, rne # perform operation
fmsub.s f18, f26, f20, f30, rtz # perform operation
fmsub.s f18, f26, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f26, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x29, 0x208b4f4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0xd4b6c580 # load x3 with value 0xd4b6c580
sw x3, 0(x2) # store 0xd4b6c580 in memory
flw f21, 0(x2) # load 0xd4b6c580 from memory into f21
fmsub.s f29, f9, f4, f21, dyn # perform operation
fmsub.s f29, f9, f4, f21, rdn # perform operation
fmsub.s f29, f9, f4, f21, rmm # perform operation
fmsub.s f29, f9, f4, f21, rne # perform operation
fmsub.s f29, f9, f4, f21, rtz # perform operation
fmsub.s f29, f9, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x12, 0x693abad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xef84a725 # load x3 with value 0xef84a725
sw x3, 0(x2) # store 0xef84a725 in memory
flw f25, 0(x2) # load 0xef84a725 from memory into f25
fmsub.s f12, f2, f3, f25, dyn # perform operation
fmsub.s f12, f2, f3, f25, rdn # perform operation
fmsub.s f12, f2, f3, f25, rmm # perform operation
fmsub.s f12, f2, f3, f25, rne # perform operation
fmsub.s f12, f2, f3, f25, rtz # perform operation
fmsub.s f12, f2, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x30, 0xf73aadf8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xaa2c100f # load x3 with value 0xaa2c100f
sw x3, 0(x2) # store 0xaa2c100f in memory
flw f25, 0(x2) # load 0xaa2c100f from memory into f25
fmsub.s f30, f8, f27, f25, dyn # perform operation
fmsub.s f30, f8, f27, f25, rdn # perform operation
fmsub.s f30, f8, f27, f25, rmm # perform operation
fmsub.s f30, f8, f27, f25, rne # perform operation
fmsub.s f30, f8, f27, f25, rtz # perform operation
fmsub.s f30, f8, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x8, 0xe87cd873 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x68ddd528 # load x3 with value 0x68ddd528
sw x3, 0(x2) # store 0x68ddd528 in memory
flw f12, 0(x2) # load 0x68ddd528 from memory into f12
fmsub.s f8, f15, f20, f12, dyn # perform operation
fmsub.s f8, f15, f20, f12, rdn # perform operation
fmsub.s f8, f15, f20, f12, rmm # perform operation
fmsub.s f8, f15, f20, f12, rne # perform operation
fmsub.s f8, f15, f20, f12, rtz # perform operation
fmsub.s f8, f15, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x15, 0x4982b5c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x7cba4c77 # load x3 with value 0x7cba4c77
sw x3, 0(x2) # store 0x7cba4c77 in memory
flw f14, 0(x2) # load 0x7cba4c77 from memory into f14
fmsub.s f15, f29, f9, f14, dyn # perform operation
fmsub.s f15, f29, f9, f14, rdn # perform operation
fmsub.s f15, f29, f9, f14, rmm # perform operation
fmsub.s f15, f29, f9, f14, rne # perform operation
fmsub.s f15, f29, f9, f14, rtz # perform operation
fmsub.s f15, f29, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x31, 0xa2b12588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0xcae512cd # load x3 with value 0xcae512cd
sw x3, 0(x2) # store 0xcae512cd in memory
flw f21, 0(x2) # load 0xcae512cd from memory into f21
fmsub.s f31, f11, f25, f21, dyn # perform operation
fmsub.s f31, f11, f25, f21, rdn # perform operation
fmsub.s f31, f11, f25, f21, rmm # perform operation
fmsub.s f31, f11, f25, f21, rne # perform operation
fmsub.s f31, f11, f25, f21, rtz # perform operation
fmsub.s f31, f11, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x2, 0xca8f82f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0xdf94c7dd # load x3 with value 0xdf94c7dd
sw x3, 0(x2) # store 0xdf94c7dd in memory
flw f12, 0(x2) # load 0xdf94c7dd from memory into f12
fmsub.s f2, f14, f21, f12, dyn # perform operation
fmsub.s f2, f14, f21, f12, rdn # perform operation
fmsub.s f2, f14, f21, f12, rmm # perform operation
fmsub.s f2, f14, f21, f12, rne # perform operation
fmsub.s f2, f14, f21, f12, rtz # perform operation
fmsub.s f2, f14, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x12, 0x3020f50b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x5fef495b # load x3 with value 0x5fef495b
sw x3, 0(x2) # store 0x5fef495b in memory
flw f14, 0(x2) # load 0x5fef495b from memory into f14
fmsub.s f12, f1, f18, f14, dyn # perform operation
fmsub.s f12, f1, f18, f14, rdn # perform operation
fmsub.s f12, f1, f18, f14, rmm # perform operation
fmsub.s f12, f1, f18, f14, rne # perform operation
fmsub.s f12, f1, f18, f14, rtz # perform operation
fmsub.s f12, f1, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x7, 0x8be10538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x1dd7955e # load x3 with value 0x1dd7955e
sw x3, 0(x2) # store 0x1dd7955e in memory
flw f22, 0(x2) # load 0x1dd7955e from memory into f22
fmsub.s f7, f8, f5, f22, dyn # perform operation
fmsub.s f7, f8, f5, f22, rdn # perform operation
fmsub.s f7, f8, f5, f22, rmm # perform operation
fmsub.s f7, f8, f5, f22, rne # perform operation
fmsub.s f7, f8, f5, f22, rtz # perform operation
fmsub.s f7, f8, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f8, f5, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x7, 0x967dd360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x2de5d9c4 # load x3 with value 0x2de5d9c4
sw x3, 0(x2) # store 0x2de5d9c4 in memory
flw f26, 0(x2) # load 0x2de5d9c4 from memory into f26
fmsub.s f7, f20, f3, f26, dyn # perform operation
fmsub.s f7, f20, f3, f26, rdn # perform operation
fmsub.s f7, f20, f3, f26, rmm # perform operation
fmsub.s f7, f20, f3, f26, rne # perform operation
fmsub.s f7, f20, f3, f26, rtz # perform operation
fmsub.s f7, f20, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x14, 0x0bcbe3d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xb7204cfc # load x3 with value 0xb7204cfc
sw x3, 0(x2) # store 0xb7204cfc in memory
flw f7, 0(x2) # load 0xb7204cfc from memory into f7
fmsub.s f14, f25, f21, f7, dyn # perform operation
fmsub.s f14, f25, f21, f7, rdn # perform operation
fmsub.s f14, f25, f21, f7, rmm # perform operation
fmsub.s f14, f25, f21, f7, rne # perform operation
fmsub.s f14, f25, f21, f7, rtz # perform operation
fmsub.s f14, f25, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f25, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x17, 0x30d659bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x09ec0b67 # load x3 with value 0x09ec0b67
sw x3, 0(x2) # store 0x09ec0b67 in memory
flw f28, 0(x2) # load 0x09ec0b67 from memory into f28
fmsub.s f17, f6, f12, f28, dyn # perform operation
fmsub.s f17, f6, f12, f28, rdn # perform operation
fmsub.s f17, f6, f12, f28, rmm # perform operation
fmsub.s f17, f6, f12, f28, rne # perform operation
fmsub.s f17, f6, f12, f28, rtz # perform operation
fmsub.s f17, f6, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f6, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f6, f12, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x3, 0x285c2fa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x2841677e # load x3 with value 0x2841677e
sw x3, 0(x2) # store 0x2841677e in memory
flw f2, 0(x2) # load 0x2841677e from memory into f2
fmsub.s f3, f29, f19, f2, dyn # perform operation
fmsub.s f3, f29, f19, f2, rdn # perform operation
fmsub.s f3, f29, f19, f2, rmm # perform operation
fmsub.s f3, f29, f19, f2, rne # perform operation
fmsub.s f3, f29, f19, f2, rtz # perform operation
fmsub.s f3, f29, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x4, 0x3eb19359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0xaa381ca0 # load x3 with value 0xaa381ca0
sw x3, 0(x2) # store 0xaa381ca0 in memory
flw f29, 0(x2) # load 0xaa381ca0 from memory into f29
fmsub.s f4, f27, f25, f29, dyn # perform operation
fmsub.s f4, f27, f25, f29, rdn # perform operation
fmsub.s f4, f27, f25, f29, rmm # perform operation
fmsub.s f4, f27, f25, f29, rne # perform operation
fmsub.s f4, f27, f25, f29, rtz # perform operation
fmsub.s f4, f27, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f27, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f27, f25, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x6, 0xf5d556b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xa577317b # load x3 with value 0xa577317b
sw x3, 0(x2) # store 0xa577317b in memory
flw f10, 0(x2) # load 0xa577317b from memory into f10
fmsub.s f6, f24, f7, f10, dyn # perform operation
fmsub.s f6, f24, f7, f10, rdn # perform operation
fmsub.s f6, f24, f7, f10, rmm # perform operation
fmsub.s f6, f24, f7, f10, rne # perform operation
fmsub.s f6, f24, f7, f10, rtz # perform operation
fmsub.s f6, f24, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f24, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f24, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x25, 0x0d758d92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x44fced8b # load x3 with value 0x44fced8b
sw x3, 0(x2) # store 0x44fced8b in memory
flw f3, 0(x2) # load 0x44fced8b from memory into f3
fmsub.s f25, f18, f17, f3, dyn # perform operation
fmsub.s f25, f18, f17, f3, rdn # perform operation
fmsub.s f25, f18, f17, f3, rmm # perform operation
fmsub.s f25, f18, f17, f3, rne # perform operation
fmsub.s f25, f18, f17, f3, rtz # perform operation
fmsub.s f25, f18, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x28, 0x6a6d1737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x7d1b764e # load x3 with value 0x7d1b764e
sw x3, 0(x2) # store 0x7d1b764e in memory
flw f20, 0(x2) # load 0x7d1b764e from memory into f20
fmsub.s f28, f7, f12, f20, dyn # perform operation
fmsub.s f28, f7, f12, f20, rdn # perform operation
fmsub.s f28, f7, f12, f20, rmm # perform operation
fmsub.s f28, f7, f12, f20, rne # perform operation
fmsub.s f28, f7, f12, f20, rtz # perform operation
fmsub.s f28, f7, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f7, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f7, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f7, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f7, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f7, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x5, 0xfaf3eda3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x2dbe11fe # load x3 with value 0x2dbe11fe
sw x3, 0(x2) # store 0x2dbe11fe in memory
flw f11, 0(x2) # load 0x2dbe11fe from memory into f11
fmsub.s f5, f9, f24, f11, dyn # perform operation
fmsub.s f5, f9, f24, f11, rdn # perform operation
fmsub.s f5, f9, f24, f11, rmm # perform operation
fmsub.s f5, f9, f24, f11, rne # perform operation
fmsub.s f5, f9, f24, f11, rtz # perform operation
fmsub.s f5, f9, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f9, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f9, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x20, 0xac606f97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0xda8136c4 # load x3 with value 0xda8136c4
sw x3, 0(x2) # store 0xda8136c4 in memory
flw f16, 0(x2) # load 0xda8136c4 from memory into f16
fmsub.s f20, f21, f7, f16, dyn # perform operation
fmsub.s f20, f21, f7, f16, rdn # perform operation
fmsub.s f20, f21, f7, f16, rmm # perform operation
fmsub.s f20, f21, f7, f16, rne # perform operation
fmsub.s f20, f21, f7, f16, rtz # perform operation
fmsub.s f20, f21, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f21, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f21, f7, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x9, 0x66eed189 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x456d6a48 # load x3 with value 0x456d6a48
sw x3, 0(x2) # store 0x456d6a48 in memory
flw f30, 0(x2) # load 0x456d6a48 from memory into f30
fmsub.s f9, f8, f13, f30, dyn # perform operation
fmsub.s f9, f8, f13, f30, rdn # perform operation
fmsub.s f9, f8, f13, f30, rmm # perform operation
fmsub.s f9, f8, f13, f30, rne # perform operation
fmsub.s f9, f8, f13, f30, rtz # perform operation
fmsub.s f9, f8, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f8, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f8, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x4, 0x1c7ca1b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x2e836196 # load x3 with value 0x2e836196
sw x3, 0(x2) # store 0x2e836196 in memory
flw f25, 0(x2) # load 0x2e836196 from memory into f25
fmsub.s f4, f31, f10, f25, dyn # perform operation
fmsub.s f4, f31, f10, f25, rdn # perform operation
fmsub.s f4, f31, f10, f25, rmm # perform operation
fmsub.s f4, f31, f10, f25, rne # perform operation
fmsub.s f4, f31, f10, f25, rtz # perform operation
fmsub.s f4, f31, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f31, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f31, f10, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x23, 0x209436e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x7f885691 # load x3 with value 0x7f885691
sw x3, 0(x2) # store 0x7f885691 in memory
flw f4, 0(x2) # load 0x7f885691 from memory into f4
fmsub.s f23, f13, f12, f4, dyn # perform operation
fmsub.s f23, f13, f12, f4, rdn # perform operation
fmsub.s f23, f13, f12, f4, rmm # perform operation
fmsub.s f23, f13, f12, f4, rne # perform operation
fmsub.s f23, f13, f12, f4, rtz # perform operation
fmsub.s f23, f13, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f13, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f13, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f13, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f13, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f13, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x27, 0xaeef479b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x64545427 # load x3 with value 0x64545427
sw x3, 0(x2) # store 0x64545427 in memory
flw f22, 0(x2) # load 0x64545427 from memory into f22
fmsub.s f27, f16, f20, f22, dyn # perform operation
fmsub.s f27, f16, f20, f22, rdn # perform operation
fmsub.s f27, f16, f20, f22, rmm # perform operation
fmsub.s f27, f16, f20, f22, rne # perform operation
fmsub.s f27, f16, f20, f22, rtz # perform operation
fmsub.s f27, f16, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x28, 0x1f095809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x63cffa95 # load x3 with value 0x63cffa95
sw x3, 0(x2) # store 0x63cffa95 in memory
flw f31, 0(x2) # load 0x63cffa95 from memory into f31
fmsub.s f28, f4, f2, f31, dyn # perform operation
fmsub.s f28, f4, f2, f31, rdn # perform operation
fmsub.s f28, f4, f2, f31, rmm # perform operation
fmsub.s f28, f4, f2, f31, rne # perform operation
fmsub.s f28, f4, f2, f31, rtz # perform operation
fmsub.s f28, f4, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f4, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f4, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f4, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f4, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f4, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x31, 0x9f20c303 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xc5bdb4ee # load x3 with value 0xc5bdb4ee
sw x3, 0(x2) # store 0xc5bdb4ee in memory
flw f12, 0(x2) # load 0xc5bdb4ee from memory into f12
fmsub.s f31, f10, f27, f12, dyn # perform operation
fmsub.s f31, f10, f27, f12, rdn # perform operation
fmsub.s f31, f10, f27, f12, rmm # perform operation
fmsub.s f31, f10, f27, f12, rne # perform operation
fmsub.s f31, f10, f27, f12, rtz # perform operation
fmsub.s f31, f10, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x31, 0xca088271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0xada92687 # load x3 with value 0xada92687
sw x3, 0(x2) # store 0xada92687 in memory
flw f16, 0(x2) # load 0xada92687 from memory into f16
fmsub.s f31, f8, f29, f16, dyn # perform operation
fmsub.s f31, f8, f29, f16, rdn # perform operation
fmsub.s f31, f8, f29, f16, rmm # perform operation
fmsub.s f31, f8, f29, f16, rne # perform operation
fmsub.s f31, f8, f29, f16, rtz # perform operation
fmsub.s f31, f8, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x23, 0x785d36e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x8be46073 # load x3 with value 0x8be46073
sw x3, 0(x2) # store 0x8be46073 in memory
flw f10, 0(x2) # load 0x8be46073 from memory into f10
fmsub.s f23, f22, f5, f10, dyn # perform operation
fmsub.s f23, f22, f5, f10, rdn # perform operation
fmsub.s f23, f22, f5, f10, rmm # perform operation
fmsub.s f23, f22, f5, f10, rne # perform operation
fmsub.s f23, f22, f5, f10, rtz # perform operation
fmsub.s f23, f22, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f22, f5, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x11, 0x636f86f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x4bb5f324 # load x3 with value 0x4bb5f324
sw x3, 0(x2) # store 0x4bb5f324 in memory
flw f20, 0(x2) # load 0x4bb5f324 from memory into f20
fmsub.s f11, f19, f30, f20, dyn # perform operation
fmsub.s f11, f19, f30, f20, rdn # perform operation
fmsub.s f11, f19, f30, f20, rmm # perform operation
fmsub.s f11, f19, f30, f20, rne # perform operation
fmsub.s f11, f19, f30, f20, rtz # perform operation
fmsub.s f11, f19, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x19, 0x83ab546a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0xb9f2d9ca # load x3 with value 0xb9f2d9ca
sw x3, 0(x2) # store 0xb9f2d9ca in memory
flw f12, 0(x2) # load 0xb9f2d9ca from memory into f12
fmsub.s f19, f28, f7, f12, dyn # perform operation
fmsub.s f19, f28, f7, f12, rdn # perform operation
fmsub.s f19, f28, f7, f12, rmm # perform operation
fmsub.s f19, f28, f7, f12, rne # perform operation
fmsub.s f19, f28, f7, f12, rtz # perform operation
fmsub.s f19, f28, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x14, 0x34920e8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x33bfc654 # load x3 with value 0x33bfc654
sw x3, 0(x2) # store 0x33bfc654 in memory
flw f10, 0(x2) # load 0x33bfc654 from memory into f10
fmsub.s f14, f9, f23, f10, dyn # perform operation
fmsub.s f14, f9, f23, f10, rdn # perform operation
fmsub.s f14, f9, f23, f10, rmm # perform operation
fmsub.s f14, f9, f23, f10, rne # perform operation
fmsub.s f14, f9, f23, f10, rtz # perform operation
fmsub.s f14, f9, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x14, 0x985f7ec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x835e90c8 # load x3 with value 0x835e90c8
sw x3, 0(x2) # store 0x835e90c8 in memory
flw f5, 0(x2) # load 0x835e90c8 from memory into f5
fmsub.s f14, f9, f7, f5, dyn # perform operation
fmsub.s f14, f9, f7, f5, rdn # perform operation
fmsub.s f14, f9, f7, f5, rmm # perform operation
fmsub.s f14, f9, f7, f5, rne # perform operation
fmsub.s f14, f9, f7, f5, rtz # perform operation
fmsub.s f14, f9, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f9, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f9, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f9, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f9, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f9, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x3, 0xf3e55eac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xa20bf278 # load x3 with value 0xa20bf278
sw x3, 0(x2) # store 0xa20bf278 in memory
flw f19, 0(x2) # load 0xa20bf278 from memory into f19
fmsub.s f3, f24, f26, f19, dyn # perform operation
fmsub.s f3, f24, f26, f19, rdn # perform operation
fmsub.s f3, f24, f26, f19, rmm # perform operation
fmsub.s f3, f24, f26, f19, rne # perform operation
fmsub.s f3, f24, f26, f19, rtz # perform operation
fmsub.s f3, f24, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f24, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f24, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x22, 0xb6ea480a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x2cfc586d # load x3 with value 0x2cfc586d
sw x3, 0(x2) # store 0x2cfc586d in memory
flw f12, 0(x2) # load 0x2cfc586d from memory into f12
fmsub.s f22, f15, f21, f12, dyn # perform operation
fmsub.s f22, f15, f21, f12, rdn # perform operation
fmsub.s f22, f15, f21, f12, rmm # perform operation
fmsub.s f22, f15, f21, f12, rne # perform operation
fmsub.s f22, f15, f21, f12, rtz # perform operation
fmsub.s f22, f15, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f21, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x1, 0x66d0f099 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x3a0ba644 # load x3 with value 0x3a0ba644
sw x3, 0(x2) # store 0x3a0ba644 in memory
flw f3, 0(x2) # load 0x3a0ba644 from memory into f3
fmsub.s f1, f30, f7, f3, dyn # perform operation
fmsub.s f1, f30, f7, f3, rdn # perform operation
fmsub.s f1, f30, f7, f3, rmm # perform operation
fmsub.s f1, f30, f7, f3, rne # perform operation
fmsub.s f1, f30, f7, f3, rtz # perform operation
fmsub.s f1, f30, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f30, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f30, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x10, 0x29c42493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xcf8c17e5 # load x3 with value 0xcf8c17e5
sw x3, 0(x2) # store 0xcf8c17e5 in memory
flw f27, 0(x2) # load 0xcf8c17e5 from memory into f27
fmsub.s f10, f6, f20, f27, dyn # perform operation
fmsub.s f10, f6, f20, f27, rdn # perform operation
fmsub.s f10, f6, f20, f27, rmm # perform operation
fmsub.s f10, f6, f20, f27, rne # perform operation
fmsub.s f10, f6, f20, f27, rtz # perform operation
fmsub.s f10, f6, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x29, 0xc40ea456 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x813120be # load x3 with value 0x813120be
sw x3, 0(x2) # store 0x813120be in memory
flw f6, 0(x2) # load 0x813120be from memory into f6
fmsub.s f29, f9, f21, f6, dyn # perform operation
fmsub.s f29, f9, f21, f6, rdn # perform operation
fmsub.s f29, f9, f21, f6, rmm # perform operation
fmsub.s f29, f9, f21, f6, rne # perform operation
fmsub.s f29, f9, f21, f6, rtz # perform operation
fmsub.s f29, f9, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f9, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f9, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x13, 0xd76a9fb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x158ef4b4 # load x3 with value 0x158ef4b4
sw x3, 0(x2) # store 0x158ef4b4 in memory
flw f2, 0(x2) # load 0x158ef4b4 from memory into f2
fmsub.s f13, f12, f1, f2, dyn # perform operation
fmsub.s f13, f12, f1, f2, rdn # perform operation
fmsub.s f13, f12, f1, f2, rmm # perform operation
fmsub.s f13, f12, f1, f2, rne # perform operation
fmsub.s f13, f12, f1, f2, rtz # perform operation
fmsub.s f13, f12, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f12, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f12, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x23, 0xb806e30d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x68f74640 # load x3 with value 0x68f74640
sw x3, 0(x2) # store 0x68f74640 in memory
flw f24, 0(x2) # load 0x68f74640 from memory into f24
fmsub.s f23, f11, f17, f24, dyn # perform operation
fmsub.s f23, f11, f17, f24, rdn # perform operation
fmsub.s f23, f11, f17, f24, rmm # perform operation
fmsub.s f23, f11, f17, f24, rne # perform operation
fmsub.s f23, f11, f17, f24, rtz # perform operation
fmsub.s f23, f11, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f11, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f11, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f11, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f11, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f11, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x24, 0x0c889dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x1ad04789 # load x3 with value 0x1ad04789
sw x3, 0(x2) # store 0x1ad04789 in memory
flw f8, 0(x2) # load 0x1ad04789 from memory into f8
fmsub.s f24, f18, f5, f8, dyn # perform operation
fmsub.s f24, f18, f5, f8, rdn # perform operation
fmsub.s f24, f18, f5, f8, rmm # perform operation
fmsub.s f24, f18, f5, f8, rne # perform operation
fmsub.s f24, f18, f5, f8, rtz # perform operation
fmsub.s f24, f18, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x6, 0xa7bf47ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x5efd065e # load x3 with value 0x5efd065e
sw x3, 0(x2) # store 0x5efd065e in memory
flw f13, 0(x2) # load 0x5efd065e from memory into f13
fmsub.s f6, f16, f31, f13, dyn # perform operation
fmsub.s f6, f16, f31, f13, rdn # perform operation
fmsub.s f6, f16, f31, f13, rmm # perform operation
fmsub.s f6, f16, f31, f13, rne # perform operation
fmsub.s f6, f16, f31, f13, rtz # perform operation
fmsub.s f6, f16, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f16, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f16, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x15, 0xf06a3f28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xfe6a9053 # load x3 with value 0xfe6a9053
sw x3, 0(x2) # store 0xfe6a9053 in memory
flw f1, 0(x2) # load 0xfe6a9053 from memory into f1
fmsub.s f15, f22, f20, f1, dyn # perform operation
fmsub.s f15, f22, f20, f1, rdn # perform operation
fmsub.s f15, f22, f20, f1, rmm # perform operation
fmsub.s f15, f22, f20, f1, rne # perform operation
fmsub.s f15, f22, f20, f1, rtz # perform operation
fmsub.s f15, f22, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f22, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x4, 0xe380dcb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x0c220af9 # load x3 with value 0x0c220af9
sw x3, 0(x2) # store 0x0c220af9 in memory
flw f11, 0(x2) # load 0x0c220af9 from memory into f11
fmsub.s f4, f30, f19, f11, dyn # perform operation
fmsub.s f4, f30, f19, f11, rdn # perform operation
fmsub.s f4, f30, f19, f11, rmm # perform operation
fmsub.s f4, f30, f19, f11, rne # perform operation
fmsub.s f4, f30, f19, f11, rtz # perform operation
fmsub.s f4, f30, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f30, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f30, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f30, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f30, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f30, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x23, 0xcb046ac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x5af3a1df # load x3 with value 0x5af3a1df
sw x3, 0(x2) # store 0x5af3a1df in memory
flw f5, 0(x2) # load 0x5af3a1df from memory into f5
fmsub.s f23, f9, f22, f5, dyn # perform operation
fmsub.s f23, f9, f22, f5, rdn # perform operation
fmsub.s f23, f9, f22, f5, rmm # perform operation
fmsub.s f23, f9, f22, f5, rne # perform operation
fmsub.s f23, f9, f22, f5, rtz # perform operation
fmsub.s f23, f9, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x16, 0x58176a6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x42be451b # load x3 with value 0x42be451b
sw x3, 0(x2) # store 0x42be451b in memory
flw f2, 0(x2) # load 0x42be451b from memory into f2
fmsub.s f16, f25, f21, f2, dyn # perform operation
fmsub.s f16, f25, f21, f2, rdn # perform operation
fmsub.s f16, f25, f21, f2, rmm # perform operation
fmsub.s f16, f25, f21, f2, rne # perform operation
fmsub.s f16, f25, f21, f2, rtz # perform operation
fmsub.s f16, f25, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f25, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f25, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f25, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f25, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f25, f21, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x2, 0xd43bdd62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x35ab195a # load x3 with value 0x35ab195a
sw x3, 0(x2) # store 0x35ab195a in memory
flw f9, 0(x2) # load 0x35ab195a from memory into f9
fmsub.s f2, f14, f12, f9, dyn # perform operation
fmsub.s f2, f14, f12, f9, rdn # perform operation
fmsub.s f2, f14, f12, f9, rmm # perform operation
fmsub.s f2, f14, f12, f9, rne # perform operation
fmsub.s f2, f14, f12, f9, rtz # perform operation
fmsub.s f2, f14, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x19, 0x97dda246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0xeb1af3c0 # load x3 with value 0xeb1af3c0
sw x3, 0(x2) # store 0xeb1af3c0 in memory
flw f9, 0(x2) # load 0xeb1af3c0 from memory into f9
fmsub.s f19, f30, f15, f9, dyn # perform operation
fmsub.s f19, f30, f15, f9, rdn # perform operation
fmsub.s f19, f30, f15, f9, rmm # perform operation
fmsub.s f19, f30, f15, f9, rne # perform operation
fmsub.s f19, f30, f15, f9, rtz # perform operation
fmsub.s f19, f30, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f30, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f30, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x19, 0x73cd580f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x14b28ec3 # load x3 with value 0x14b28ec3
sw x3, 0(x2) # store 0x14b28ec3 in memory
flw f9, 0(x2) # load 0x14b28ec3 from memory into f9
fmsub.s f19, f31, f10, f9, dyn # perform operation
fmsub.s f19, f31, f10, f9, rdn # perform operation
fmsub.s f19, f31, f10, f9, rmm # perform operation
fmsub.s f19, f31, f10, f9, rne # perform operation
fmsub.s f19, f31, f10, f9, rtz # perform operation
fmsub.s f19, f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f31, f10, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x28, 0xcc204aa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x790d6f53 # load x3 with value 0x790d6f53
sw x3, 0(x2) # store 0x790d6f53 in memory
flw f27, 0(x2) # load 0x790d6f53 from memory into f27
fmsub.s f28, f12, f3, f27, dyn # perform operation
fmsub.s f28, f12, f3, f27, rdn # perform operation
fmsub.s f28, f12, f3, f27, rmm # perform operation
fmsub.s f28, f12, f3, f27, rne # perform operation
fmsub.s f28, f12, f3, f27, rtz # perform operation
fmsub.s f28, f12, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f12, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x3, 0xb55e2f7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0xdb6445e9 # load x3 with value 0xdb6445e9
sw x3, 0(x2) # store 0xdb6445e9 in memory
flw f13, 0(x2) # load 0xdb6445e9 from memory into f13
fmsub.s f3, f8, f10, f13, dyn # perform operation
fmsub.s f3, f8, f10, f13, rdn # perform operation
fmsub.s f3, f8, f10, f13, rmm # perform operation
fmsub.s f3, f8, f10, f13, rne # perform operation
fmsub.s f3, f8, f10, f13, rtz # perform operation
fmsub.s f3, f8, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f8, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f8, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x6, 0x071ea651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xda522fd0 # load x3 with value 0xda522fd0
sw x3, 0(x2) # store 0xda522fd0 in memory
flw f4, 0(x2) # load 0xda522fd0 from memory into f4
fmsub.s f6, f10, f17, f4, dyn # perform operation
fmsub.s f6, f10, f17, f4, rdn # perform operation
fmsub.s f6, f10, f17, f4, rmm # perform operation
fmsub.s f6, f10, f17, f4, rne # perform operation
fmsub.s f6, f10, f17, f4, rtz # perform operation
fmsub.s f6, f10, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x4, 0x48c0a637 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x69020ce1 # load x3 with value 0x69020ce1
sw x3, 0(x2) # store 0x69020ce1 in memory
flw f8, 0(x2) # load 0x69020ce1 from memory into f8
fmsub.s f4, f30, f3, f8, dyn # perform operation
fmsub.s f4, f30, f3, f8, rdn # perform operation
fmsub.s f4, f30, f3, f8, rmm # perform operation
fmsub.s f4, f30, f3, f8, rne # perform operation
fmsub.s f4, f30, f3, f8, rtz # perform operation
fmsub.s f4, f30, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f30, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x3, 0x42f7a216 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x8faad8fc # load x3 with value 0x8faad8fc
sw x3, 0(x2) # store 0x8faad8fc in memory
flw f11, 0(x2) # load 0x8faad8fc from memory into f11
fmsub.s f3, f17, f23, f11, dyn # perform operation
fmsub.s f3, f17, f23, f11, rdn # perform operation
fmsub.s f3, f17, f23, f11, rmm # perform operation
fmsub.s f3, f17, f23, f11, rne # perform operation
fmsub.s f3, f17, f23, f11, rtz # perform operation
fmsub.s f3, f17, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f17, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f17, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f17, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f17, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f17, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x24, 0xea931c99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x743f66eb # load x3 with value 0x743f66eb
sw x3, 0(x2) # store 0x743f66eb in memory
flw f1, 0(x2) # load 0x743f66eb from memory into f1
fmsub.s f24, f26, f7, f1, dyn # perform operation
fmsub.s f24, f26, f7, f1, rdn # perform operation
fmsub.s f24, f26, f7, f1, rmm # perform operation
fmsub.s f24, f26, f7, f1, rne # perform operation
fmsub.s f24, f26, f7, f1, rtz # perform operation
fmsub.s f24, f26, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f7, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x6, 0x340428d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x75b31ebe # load x3 with value 0x75b31ebe
sw x3, 0(x2) # store 0x75b31ebe in memory
flw f20, 0(x2) # load 0x75b31ebe from memory into f20
fmsub.s f6, f17, f11, f20, dyn # perform operation
fmsub.s f6, f17, f11, f20, rdn # perform operation
fmsub.s f6, f17, f11, f20, rmm # perform operation
fmsub.s f6, f17, f11, f20, rne # perform operation
fmsub.s f6, f17, f11, f20, rtz # perform operation
fmsub.s f6, f17, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f11, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x10, 0xbf5ef9dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x48cf9828 # load x3 with value 0x48cf9828
sw x3, 0(x2) # store 0x48cf9828 in memory
flw f28, 0(x2) # load 0x48cf9828 from memory into f28
fmsub.s f10, f11, f27, f28, dyn # perform operation
fmsub.s f10, f11, f27, f28, rdn # perform operation
fmsub.s f10, f11, f27, f28, rmm # perform operation
fmsub.s f10, f11, f27, f28, rne # perform operation
fmsub.s f10, f11, f27, f28, rtz # perform operation
fmsub.s f10, f11, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f27, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x11, 0x6704d4b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xa02db343 # load x3 with value 0xa02db343
sw x3, 0(x2) # store 0xa02db343 in memory
flw f17, 0(x2) # load 0xa02db343 from memory into f17
fmsub.s f11, f4, f3, f17, dyn # perform operation
fmsub.s f11, f4, f3, f17, rdn # perform operation
fmsub.s f11, f4, f3, f17, rmm # perform operation
fmsub.s f11, f4, f3, f17, rne # perform operation
fmsub.s f11, f4, f3, f17, rtz # perform operation
fmsub.s f11, f4, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f4, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f4, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f4, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f4, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f4, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x17, 0x322e63e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x5db6b53a # load x3 with value 0x5db6b53a
sw x3, 0(x2) # store 0x5db6b53a in memory
flw f30, 0(x2) # load 0x5db6b53a from memory into f30
fmsub.s f17, f3, f15, f30, dyn # perform operation
fmsub.s f17, f3, f15, f30, rdn # perform operation
fmsub.s f17, f3, f15, f30, rmm # perform operation
fmsub.s f17, f3, f15, f30, rne # perform operation
fmsub.s f17, f3, f15, f30, rtz # perform operation
fmsub.s f17, f3, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f15, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x26, 0xea38dd43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xcdddd9bb # load x3 with value 0xcdddd9bb
sw x3, 0(x2) # store 0xcdddd9bb in memory
flw f18, 0(x2) # load 0xcdddd9bb from memory into f18
fmsub.s f26, f15, f16, f18, dyn # perform operation
fmsub.s f26, f15, f16, f18, rdn # perform operation
fmsub.s f26, f15, f16, f18, rmm # perform operation
fmsub.s f26, f15, f16, f18, rne # perform operation
fmsub.s f26, f15, f16, f18, rtz # perform operation
fmsub.s f26, f15, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f15, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f15, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f15, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f15, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f15, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x21, 0xc30a2f7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x8caed8e5 # load x3 with value 0x8caed8e5
sw x3, 0(x2) # store 0x8caed8e5 in memory
flw f16, 0(x2) # load 0x8caed8e5 from memory into f16
fmsub.s f21, f12, f5, f16, dyn # perform operation
fmsub.s f21, f12, f5, f16, rdn # perform operation
fmsub.s f21, f12, f5, f16, rmm # perform operation
fmsub.s f21, f12, f5, f16, rne # perform operation
fmsub.s f21, f12, f5, f16, rtz # perform operation
fmsub.s f21, f12, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f12, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f12, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x25, 0x5773e9b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x859604b4 # load x3 with value 0x859604b4
sw x3, 0(x2) # store 0x859604b4 in memory
flw f18, 0(x2) # load 0x859604b4 from memory into f18
fmsub.s f25, f27, f1, f18, dyn # perform operation
fmsub.s f25, f27, f1, f18, rdn # perform operation
fmsub.s f25, f27, f1, f18, rmm # perform operation
fmsub.s f25, f27, f1, f18, rne # perform operation
fmsub.s f25, f27, f1, f18, rtz # perform operation
fmsub.s f25, f27, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f27, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f27, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x10, 0xa90d5134 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x31b3147d # load x3 with value 0x31b3147d
sw x3, 0(x2) # store 0x31b3147d in memory
flw f11, 0(x2) # load 0x31b3147d from memory into f11
fmsub.s f10, f1, f15, f11, dyn # perform operation
fmsub.s f10, f1, f15, f11, rdn # perform operation
fmsub.s f10, f1, f15, f11, rmm # perform operation
fmsub.s f10, f1, f15, f11, rne # perform operation
fmsub.s f10, f1, f15, f11, rtz # perform operation
fmsub.s f10, f1, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x27, 0xea00b87f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0xd936a3cd # load x3 with value 0xd936a3cd
sw x3, 0(x2) # store 0xd936a3cd in memory
flw f14, 0(x2) # load 0xd936a3cd from memory into f14
fmsub.s f27, f8, f6, f14, dyn # perform operation
fmsub.s f27, f8, f6, f14, rdn # perform operation
fmsub.s f27, f8, f6, f14, rmm # perform operation
fmsub.s f27, f8, f6, f14, rne # perform operation
fmsub.s f27, f8, f6, f14, rtz # perform operation
fmsub.s f27, f8, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f8, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f8, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x7, 0x17f03e46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x929a3a71 # load x3 with value 0x929a3a71
sw x3, 0(x2) # store 0x929a3a71 in memory
flw f31, 0(x2) # load 0x929a3a71 from memory into f31
fmsub.s f7, f24, f8, f31, dyn # perform operation
fmsub.s f7, f24, f8, f31, rdn # perform operation
fmsub.s f7, f24, f8, f31, rmm # perform operation
fmsub.s f7, f24, f8, f31, rne # perform operation
fmsub.s f7, f24, f8, f31, rtz # perform operation
fmsub.s f7, f24, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f24, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x12, 0x99e4fa1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0xfd15a6db # load x3 with value 0xfd15a6db
sw x3, 0(x2) # store 0xfd15a6db in memory
flw f26, 0(x2) # load 0xfd15a6db from memory into f26
fmsub.s f12, f1, f10, f26, dyn # perform operation
fmsub.s f12, f1, f10, f26, rdn # perform operation
fmsub.s f12, f1, f10, f26, rmm # perform operation
fmsub.s f12, f1, f10, f26, rne # perform operation
fmsub.s f12, f1, f10, f26, rtz # perform operation
fmsub.s f12, f1, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x26, 0x131e483e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x50b11e8e # load x3 with value 0x50b11e8e
sw x3, 0(x2) # store 0x50b11e8e in memory
flw f4, 0(x2) # load 0x50b11e8e from memory into f4
fmsub.s f26, f20, f11, f4, dyn # perform operation
fmsub.s f26, f20, f11, f4, rdn # perform operation
fmsub.s f26, f20, f11, f4, rmm # perform operation
fmsub.s f26, f20, f11, f4, rne # perform operation
fmsub.s f26, f20, f11, f4, rtz # perform operation
fmsub.s f26, f20, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f20, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f20, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x17, 0x51e386c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x5e855cdf # load x3 with value 0x5e855cdf
sw x3, 0(x2) # store 0x5e855cdf in memory
flw f6, 0(x2) # load 0x5e855cdf from memory into f6
fmsub.s f17, f19, f23, f6, dyn # perform operation
fmsub.s f17, f19, f23, f6, rdn # perform operation
fmsub.s f17, f19, f23, f6, rmm # perform operation
fmsub.s f17, f19, f23, f6, rne # perform operation
fmsub.s f17, f19, f23, f6, rtz # perform operation
fmsub.s f17, f19, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x19, 0xcfc0d5ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xdf798796 # load x3 with value 0xdf798796
sw x3, 0(x2) # store 0xdf798796 in memory
flw f1, 0(x2) # load 0xdf798796 from memory into f1
fmsub.s f19, f3, f31, f1, dyn # perform operation
fmsub.s f19, f3, f31, f1, rdn # perform operation
fmsub.s f19, f3, f31, f1, rmm # perform operation
fmsub.s f19, f3, f31, f1, rne # perform operation
fmsub.s f19, f3, f31, f1, rtz # perform operation
fmsub.s f19, f3, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x9, 0x283ff0d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x3920d30d # load x3 with value 0x3920d30d
sw x3, 0(x2) # store 0x3920d30d in memory
flw f1, 0(x2) # load 0x3920d30d from memory into f1
fmsub.s f9, f2, f17, f1, dyn # perform operation
fmsub.s f9, f2, f17, f1, rdn # perform operation
fmsub.s f9, f2, f17, f1, rmm # perform operation
fmsub.s f9, f2, f17, f1, rne # perform operation
fmsub.s f9, f2, f17, f1, rtz # perform operation
fmsub.s f9, f2, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f2, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f2, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f2, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f2, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f2, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x20, 0x5cf8983d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xa236a709 # load x3 with value 0xa236a709
sw x3, 0(x2) # store 0xa236a709 in memory
flw f23, 0(x2) # load 0xa236a709 from memory into f23
fmsub.s f20, f27, f5, f23, dyn # perform operation
fmsub.s f20, f27, f5, f23, rdn # perform operation
fmsub.s f20, f27, f5, f23, rmm # perform operation
fmsub.s f20, f27, f5, f23, rne # perform operation
fmsub.s f20, f27, f5, f23, rtz # perform operation
fmsub.s f20, f27, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f27, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f27, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x12, 0x01050468 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x1e0e305c # load x3 with value 0x1e0e305c
sw x3, 0(x2) # store 0x1e0e305c in memory
flw f16, 0(x2) # load 0x1e0e305c from memory into f16
fmsub.s f12, f19, f22, f16, dyn # perform operation
fmsub.s f12, f19, f22, f16, rdn # perform operation
fmsub.s f12, f19, f22, f16, rmm # perform operation
fmsub.s f12, f19, f22, f16, rne # perform operation
fmsub.s f12, f19, f22, f16, rtz # perform operation
fmsub.s f12, f19, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f19, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x24, 0xa12bcb47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x1a7b9bdd # load x3 with value 0x1a7b9bdd
sw x3, 0(x2) # store 0x1a7b9bdd in memory
flw f16, 0(x2) # load 0x1a7b9bdd from memory into f16
fmsub.s f24, f20, f25, f16, dyn # perform operation
fmsub.s f24, f20, f25, f16, rdn # perform operation
fmsub.s f24, f20, f25, f16, rmm # perform operation
fmsub.s f24, f20, f25, f16, rne # perform operation
fmsub.s f24, f20, f25, f16, rtz # perform operation
fmsub.s f24, f20, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x4, 0x9d87c8ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x48ab671b # load x3 with value 0x48ab671b
sw x3, 0(x2) # store 0x48ab671b in memory
flw f28, 0(x2) # load 0x48ab671b from memory into f28
fmsub.s f4, f15, f8, f28, dyn # perform operation
fmsub.s f4, f15, f8, f28, rdn # perform operation
fmsub.s f4, f15, f8, f28, rmm # perform operation
fmsub.s f4, f15, f8, f28, rne # perform operation
fmsub.s f4, f15, f8, f28, rtz # perform operation
fmsub.s f4, f15, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f15, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f15, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x4, 0xf2b7b0fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x344fa180 # load x3 with value 0x344fa180
sw x3, 0(x2) # store 0x344fa180 in memory
flw f19, 0(x2) # load 0x344fa180 from memory into f19
fmsub.s f4, f8, f11, f19, dyn # perform operation
fmsub.s f4, f8, f11, f19, rdn # perform operation
fmsub.s f4, f8, f11, f19, rmm # perform operation
fmsub.s f4, f8, f11, f19, rne # perform operation
fmsub.s f4, f8, f11, f19, rtz # perform operation
fmsub.s f4, f8, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f8, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x31, 0xe755464e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0xe511ca87 # load x3 with value 0xe511ca87
sw x3, 0(x2) # store 0xe511ca87 in memory
flw f21, 0(x2) # load 0xe511ca87 from memory into f21
fmsub.s f31, f30, f24, f21, dyn # perform operation
fmsub.s f31, f30, f24, f21, rdn # perform operation
fmsub.s f31, f30, f24, f21, rmm # perform operation
fmsub.s f31, f30, f24, f21, rne # perform operation
fmsub.s f31, f30, f24, f21, rtz # perform operation
fmsub.s f31, f30, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f30, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f30, f24, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x22, 0x4f34f138 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x1de05c64 # load x3 with value 0x1de05c64
sw x3, 0(x2) # store 0x1de05c64 in memory
flw f26, 0(x2) # load 0x1de05c64 from memory into f26
fmsub.s f22, f21, f30, f26, dyn # perform operation
fmsub.s f22, f21, f30, f26, rdn # perform operation
fmsub.s f22, f21, f30, f26, rmm # perform operation
fmsub.s f22, f21, f30, f26, rne # perform operation
fmsub.s f22, f21, f30, f26, rtz # perform operation
fmsub.s f22, f21, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f21, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f21, f30, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x20, 0xd2ca08dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x44252062 # load x3 with value 0x44252062
sw x3, 0(x2) # store 0x44252062 in memory
flw f14, 0(x2) # load 0x44252062 from memory into f14
fmsub.s f20, f28, f11, f14, dyn # perform operation
fmsub.s f20, f28, f11, f14, rdn # perform operation
fmsub.s f20, f28, f11, f14, rmm # perform operation
fmsub.s f20, f28, f11, f14, rne # perform operation
fmsub.s f20, f28, f11, f14, rtz # perform operation
fmsub.s f20, f28, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f28, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f28, f11, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x10, 0xf648bd8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x5b99dd4d # load x3 with value 0x5b99dd4d
sw x3, 0(x2) # store 0x5b99dd4d in memory
flw f17, 0(x2) # load 0x5b99dd4d from memory into f17
fmsub.s f10, f24, f23, f17, dyn # perform operation
fmsub.s f10, f24, f23, f17, rdn # perform operation
fmsub.s f10, f24, f23, f17, rmm # perform operation
fmsub.s f10, f24, f23, f17, rne # perform operation
fmsub.s f10, f24, f23, f17, rtz # perform operation
fmsub.s f10, f24, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x8, 0xff8bac90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x84d2b2a5 # load x3 with value 0x84d2b2a5
sw x3, 0(x2) # store 0x84d2b2a5 in memory
flw f24, 0(x2) # load 0x84d2b2a5 from memory into f24
fmsub.s f8, f23, f12, f24, dyn # perform operation
fmsub.s f8, f23, f12, f24, rdn # perform operation
fmsub.s f8, f23, f12, f24, rmm # perform operation
fmsub.s f8, f23, f12, f24, rne # perform operation
fmsub.s f8, f23, f12, f24, rtz # perform operation
fmsub.s f8, f23, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f23, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f23, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f23, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f23, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f23, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x28, 0xbe77c9ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x65b98a44 # load x3 with value 0x65b98a44
sw x3, 0(x2) # store 0x65b98a44 in memory
flw f17, 0(x2) # load 0x65b98a44 from memory into f17
fmsub.s f28, f26, f21, f17, dyn # perform operation
fmsub.s f28, f26, f21, f17, rdn # perform operation
fmsub.s f28, f26, f21, f17, rmm # perform operation
fmsub.s f28, f26, f21, f17, rne # perform operation
fmsub.s f28, f26, f21, f17, rtz # perform operation
fmsub.s f28, f26, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f26, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f26, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f26, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f26, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f26, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x10, 0x6e904895 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x58880e9d # load x3 with value 0x58880e9d
sw x3, 0(x2) # store 0x58880e9d in memory
flw f21, 0(x2) # load 0x58880e9d from memory into f21
fmsub.s f10, f6, f20, f21, dyn # perform operation
fmsub.s f10, f6, f20, f21, rdn # perform operation
fmsub.s f10, f6, f20, f21, rmm # perform operation
fmsub.s f10, f6, f20, f21, rne # perform operation
fmsub.s f10, f6, f20, f21, rtz # perform operation
fmsub.s f10, f6, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f20, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x8, 0x901d417d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xb001f445 # load x3 with value 0xb001f445
sw x3, 0(x2) # store 0xb001f445 in memory
flw f27, 0(x2) # load 0xb001f445 from memory into f27
fmsub.s f8, f14, f26, f27, dyn # perform operation
fmsub.s f8, f14, f26, f27, rdn # perform operation
fmsub.s f8, f14, f26, f27, rmm # perform operation
fmsub.s f8, f14, f26, f27, rne # perform operation
fmsub.s f8, f14, f26, f27, rtz # perform operation
fmsub.s f8, f14, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x8, 0xc7080b01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x63594eea # load x3 with value 0x63594eea
sw x3, 0(x2) # store 0x63594eea in memory
flw f30, 0(x2) # load 0x63594eea from memory into f30
fmsub.s f8, f4, f6, f30, dyn # perform operation
fmsub.s f8, f4, f6, f30, rdn # perform operation
fmsub.s f8, f4, f6, f30, rmm # perform operation
fmsub.s f8, f4, f6, f30, rne # perform operation
fmsub.s f8, f4, f6, f30, rtz # perform operation
fmsub.s f8, f4, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f4, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f4, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f4, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f4, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f4, f6, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x6, 0x5d353a47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x29969b05 # load x3 with value 0x29969b05
sw x3, 0(x2) # store 0x29969b05 in memory
flw f17, 0(x2) # load 0x29969b05 from memory into f17
fmsub.s f6, f1, f21, f17, dyn # perform operation
fmsub.s f6, f1, f21, f17, rdn # perform operation
fmsub.s f6, f1, f21, f17, rmm # perform operation
fmsub.s f6, f1, f21, f17, rne # perform operation
fmsub.s f6, f1, f21, f17, rtz # perform operation
fmsub.s f6, f1, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x21, 0xbb24b6df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x92d0417d # load x3 with value 0x92d0417d
sw x3, 0(x2) # store 0x92d0417d in memory
flw f18, 0(x2) # load 0x92d0417d from memory into f18
fmsub.s f21, f10, f19, f18, dyn # perform operation
fmsub.s f21, f10, f19, f18, rdn # perform operation
fmsub.s f21, f10, f19, f18, rmm # perform operation
fmsub.s f21, f10, f19, f18, rne # perform operation
fmsub.s f21, f10, f19, f18, rtz # perform operation
fmsub.s f21, f10, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x1, 0xe8c5ca62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x00e1f254 # load x3 with value 0x00e1f254
sw x3, 0(x2) # store 0x00e1f254 in memory
flw f30, 0(x2) # load 0x00e1f254 from memory into f30
fmsub.s f1, f5, f10, f30, dyn # perform operation
fmsub.s f1, f5, f10, f30, rdn # perform operation
fmsub.s f1, f5, f10, f30, rmm # perform operation
fmsub.s f1, f5, f10, f30, rne # perform operation
fmsub.s f1, f5, f10, f30, rtz # perform operation
fmsub.s f1, f5, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f10, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x22, 0x3923d9ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0xe1d09360 # load x3 with value 0xe1d09360
sw x3, 0(x2) # store 0xe1d09360 in memory
flw f2, 0(x2) # load 0xe1d09360 from memory into f2
fmsub.s f22, f8, f15, f2, dyn # perform operation
fmsub.s f22, f8, f15, f2, rdn # perform operation
fmsub.s f22, f8, f15, f2, rmm # perform operation
fmsub.s f22, f8, f15, f2, rne # perform operation
fmsub.s f22, f8, f15, f2, rtz # perform operation
fmsub.s f22, f8, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x8, 0x6d1b963d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xd3ba17e5 # load x3 with value 0xd3ba17e5
sw x3, 0(x2) # store 0xd3ba17e5 in memory
flw f23, 0(x2) # load 0xd3ba17e5 from memory into f23
fmsub.s f8, f24, f12, f23, dyn # perform operation
fmsub.s f8, f24, f12, f23, rdn # perform operation
fmsub.s f8, f24, f12, f23, rmm # perform operation
fmsub.s f8, f24, f12, f23, rne # perform operation
fmsub.s f8, f24, f12, f23, rtz # perform operation
fmsub.s f8, f24, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x5, 0xc844c37d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xd87c147c # load x3 with value 0xd87c147c
sw x3, 0(x2) # store 0xd87c147c in memory
flw f15, 0(x2) # load 0xd87c147c from memory into f15
fmsub.s f5, f12, f17, f15, dyn # perform operation
fmsub.s f5, f12, f17, f15, rdn # perform operation
fmsub.s f5, f12, f17, f15, rmm # perform operation
fmsub.s f5, f12, f17, f15, rne # perform operation
fmsub.s f5, f12, f17, f15, rtz # perform operation
fmsub.s f5, f12, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f12, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f12, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x28, 0x4b4de99f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0xb286cab3 # load x3 with value 0xb286cab3
sw x3, 0(x2) # store 0xb286cab3 in memory
flw f23, 0(x2) # load 0xb286cab3 from memory into f23
fmsub.s f28, f21, f30, f23, dyn # perform operation
fmsub.s f28, f21, f30, f23, rdn # perform operation
fmsub.s f28, f21, f30, f23, rmm # perform operation
fmsub.s f28, f21, f30, f23, rne # perform operation
fmsub.s f28, f21, f30, f23, rtz # perform operation
fmsub.s f28, f21, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f21, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x29, 0x2098dfdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xe03b1c5b # load x3 with value 0xe03b1c5b
sw x3, 0(x2) # store 0xe03b1c5b in memory
flw f30, 0(x2) # load 0xe03b1c5b from memory into f30
fmsub.s f29, f28, f22, f30, dyn # perform operation
fmsub.s f29, f28, f22, f30, rdn # perform operation
fmsub.s f29, f28, f22, f30, rmm # perform operation
fmsub.s f29, f28, f22, f30, rne # perform operation
fmsub.s f29, f28, f22, f30, rtz # perform operation
fmsub.s f29, f28, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f28, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f28, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f28, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f28, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f28, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x10, 0xac0fe043 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x62695d23 # load x3 with value 0x62695d23
sw x3, 0(x2) # store 0x62695d23 in memory
flw f6, 0(x2) # load 0x62695d23 from memory into f6
fmsub.s f10, f22, f27, f6, dyn # perform operation
fmsub.s f10, f22, f27, f6, rdn # perform operation
fmsub.s f10, f22, f27, f6, rmm # perform operation
fmsub.s f10, f22, f27, f6, rne # perform operation
fmsub.s f10, f22, f27, f6, rtz # perform operation
fmsub.s f10, f22, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x10, 0x652a80f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x3ff1b09e # load x3 with value 0x3ff1b09e
sw x3, 0(x2) # store 0x3ff1b09e in memory
flw f19, 0(x2) # load 0x3ff1b09e from memory into f19
fmsub.s f10, f13, f22, f19, dyn # perform operation
fmsub.s f10, f13, f22, f19, rdn # perform operation
fmsub.s f10, f13, f22, f19, rmm # perform operation
fmsub.s f10, f13, f22, f19, rne # perform operation
fmsub.s f10, f13, f22, f19, rtz # perform operation
fmsub.s f10, f13, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f13, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f13, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x5, 0xcac3f7c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0xe48a95fc # load x3 with value 0xe48a95fc
sw x3, 0(x2) # store 0xe48a95fc in memory
flw f17, 0(x2) # load 0xe48a95fc from memory into f17
fmsub.s f5, f26, f22, f17, dyn # perform operation
fmsub.s f5, f26, f22, f17, rdn # perform operation
fmsub.s f5, f26, f22, f17, rmm # perform operation
fmsub.s f5, f26, f22, f17, rne # perform operation
fmsub.s f5, f26, f22, f17, rtz # perform operation
fmsub.s f5, f26, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x10, 0xc6aa9cc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x6f0f7330 # load x3 with value 0x6f0f7330
sw x3, 0(x2) # store 0x6f0f7330 in memory
flw f9, 0(x2) # load 0x6f0f7330 from memory into f9
fmsub.s f10, f28, f5, f9, dyn # perform operation
fmsub.s f10, f28, f5, f9, rdn # perform operation
fmsub.s f10, f28, f5, f9, rmm # perform operation
fmsub.s f10, f28, f5, f9, rne # perform operation
fmsub.s f10, f28, f5, f9, rtz # perform operation
fmsub.s f10, f28, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f28, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x2, 0x63d63743 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x96883778 # load x3 with value 0x96883778
sw x3, 0(x2) # store 0x96883778 in memory
flw f6, 0(x2) # load 0x96883778 from memory into f6
fmsub.s f2, f8, f3, f6, dyn # perform operation
fmsub.s f2, f8, f3, f6, rdn # perform operation
fmsub.s f2, f8, f3, f6, rmm # perform operation
fmsub.s f2, f8, f3, f6, rne # perform operation
fmsub.s f2, f8, f3, f6, rtz # perform operation
fmsub.s f2, f8, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x24, 0x7ad43582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xe57c59ee # load x3 with value 0xe57c59ee
sw x3, 0(x2) # store 0xe57c59ee in memory
flw f9, 0(x2) # load 0xe57c59ee from memory into f9
fmsub.s f24, f18, f17, f9, dyn # perform operation
fmsub.s f24, f18, f17, f9, rdn # perform operation
fmsub.s f24, f18, f17, f9, rmm # perform operation
fmsub.s f24, f18, f17, f9, rne # perform operation
fmsub.s f24, f18, f17, f9, rtz # perform operation
fmsub.s f24, f18, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f18, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f18, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f18, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f18, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f18, f17, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x10, 0xda97a769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xa3416887 # load x3 with value 0xa3416887
sw x3, 0(x2) # store 0xa3416887 in memory
flw f2, 0(x2) # load 0xa3416887 from memory into f2
fmsub.s f10, f12, f29, f2, dyn # perform operation
fmsub.s f10, f12, f29, f2, rdn # perform operation
fmsub.s f10, f12, f29, f2, rmm # perform operation
fmsub.s f10, f12, f29, f2, rne # perform operation
fmsub.s f10, f12, f29, f2, rtz # perform operation
fmsub.s f10, f12, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f12, f29, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x31, 0x74dd58c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0xa76398c6 # load x3 with value 0xa76398c6
sw x3, 0(x2) # store 0xa76398c6 in memory
flw f4, 0(x2) # load 0xa76398c6 from memory into f4
fmsub.s f31, f10, f15, f4, dyn # perform operation
fmsub.s f31, f10, f15, f4, rdn # perform operation
fmsub.s f31, f10, f15, f4, rmm # perform operation
fmsub.s f31, f10, f15, f4, rne # perform operation
fmsub.s f31, f10, f15, f4, rtz # perform operation
fmsub.s f31, f10, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f15, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x21, 0x88e7504e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0xa652dcd9 # load x3 with value 0xa652dcd9
sw x3, 0(x2) # store 0xa652dcd9 in memory
flw f15, 0(x2) # load 0xa652dcd9 from memory into f15
fmsub.s f21, f25, f29, f15, dyn # perform operation
fmsub.s f21, f25, f29, f15, rdn # perform operation
fmsub.s f21, f25, f29, f15, rmm # perform operation
fmsub.s f21, f25, f29, f15, rne # perform operation
fmsub.s f21, f25, f29, f15, rtz # perform operation
fmsub.s f21, f25, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f25, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x5, 0xd79ce9e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xc7c5408b # load x3 with value 0xc7c5408b
sw x3, 0(x2) # store 0xc7c5408b in memory
flw f8, 0(x2) # load 0xc7c5408b from memory into f8
fmsub.s f5, f26, f27, f8, dyn # perform operation
fmsub.s f5, f26, f27, f8, rdn # perform operation
fmsub.s f5, f26, f27, f8, rmm # perform operation
fmsub.s f5, f26, f27, f8, rne # perform operation
fmsub.s f5, f26, f27, f8, rtz # perform operation
fmsub.s f5, f26, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x27, 0x3f0811cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x03844562 # load x3 with value 0x03844562
sw x3, 0(x2) # store 0x03844562 in memory
flw f14, 0(x2) # load 0x03844562 from memory into f14
fmsub.s f27, f28, f4, f14, dyn # perform operation
fmsub.s f27, f28, f4, f14, rdn # perform operation
fmsub.s f27, f28, f4, f14, rmm # perform operation
fmsub.s f27, f28, f4, f14, rne # perform operation
fmsub.s f27, f28, f4, f14, rtz # perform operation
fmsub.s f27, f28, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f28, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f28, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f28, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f28, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f28, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x2, 0xf003f7eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x33fd8fee # load x3 with value 0x33fd8fee
sw x3, 0(x2) # store 0x33fd8fee in memory
flw f28, 0(x2) # load 0x33fd8fee from memory into f28
fmsub.s f2, f24, f21, f28, dyn # perform operation
fmsub.s f2, f24, f21, f28, rdn # perform operation
fmsub.s f2, f24, f21, f28, rmm # perform operation
fmsub.s f2, f24, f21, f28, rne # perform operation
fmsub.s f2, f24, f21, f28, rtz # perform operation
fmsub.s f2, f24, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x20, 0x66f4cd7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0xd0c224df # load x3 with value 0xd0c224df
sw x3, 0(x2) # store 0xd0c224df in memory
flw f3, 0(x2) # load 0xd0c224df from memory into f3
fmsub.s f20, f24, f28, f3, dyn # perform operation
fmsub.s f20, f24, f28, f3, rdn # perform operation
fmsub.s f20, f24, f28, f3, rmm # perform operation
fmsub.s f20, f24, f28, f3, rne # perform operation
fmsub.s f20, f24, f28, f3, rtz # perform operation
fmsub.s f20, f24, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f24, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f24, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f24, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f24, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f24, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x30, 0xc8ff851c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0xb5e8565d # load x3 with value 0xb5e8565d
sw x3, 0(x2) # store 0xb5e8565d in memory
flw f20, 0(x2) # load 0xb5e8565d from memory into f20
fmsub.s f30, f14, f29, f20, dyn # perform operation
fmsub.s f30, f14, f29, f20, rdn # perform operation
fmsub.s f30, f14, f29, f20, rmm # perform operation
fmsub.s f30, f14, f29, f20, rne # perform operation
fmsub.s f30, f14, f29, f20, rtz # perform operation
fmsub.s f30, f14, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f14, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f14, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x25, 0xd2522c39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x57428105 # load x3 with value 0x57428105
sw x3, 0(x2) # store 0x57428105 in memory
flw f3, 0(x2) # load 0x57428105 from memory into f3
fmsub.s f25, f29, f16, f3, dyn # perform operation
fmsub.s f25, f29, f16, f3, rdn # perform operation
fmsub.s f25, f29, f16, f3, rmm # perform operation
fmsub.s f25, f29, f16, f3, rne # perform operation
fmsub.s f25, f29, f16, f3, rtz # perform operation
fmsub.s f25, f29, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x25, 0x02d4ebf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0xf1703d82 # load x3 with value 0xf1703d82
sw x3, 0(x2) # store 0xf1703d82 in memory
flw f6, 0(x2) # load 0xf1703d82 from memory into f6
fmsub.s f25, f21, f5, f6, dyn # perform operation
fmsub.s f25, f21, f5, f6, rdn # perform operation
fmsub.s f25, f21, f5, f6, rmm # perform operation
fmsub.s f25, f21, f5, f6, rne # perform operation
fmsub.s f25, f21, f5, f6, rtz # perform operation
fmsub.s f25, f21, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f21, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f21, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x3, 0xf6edc254 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x80079682 # load x3 with value 0x80079682
sw x3, 0(x2) # store 0x80079682 in memory
flw f7, 0(x2) # load 0x80079682 from memory into f7
fmsub.s f3, f18, f2, f7, dyn # perform operation
fmsub.s f3, f18, f2, f7, rdn # perform operation
fmsub.s f3, f18, f2, f7, rmm # perform operation
fmsub.s f3, f18, f2, f7, rne # perform operation
fmsub.s f3, f18, f2, f7, rtz # perform operation
fmsub.s f3, f18, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f18, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f18, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f18, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f18, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f18, f2, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x22, 0x4ccc6406 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x0c986724 # load x3 with value 0x0c986724
sw x3, 0(x2) # store 0x0c986724 in memory
flw f12, 0(x2) # load 0x0c986724 from memory into f12
fmsub.s f22, f15, f18, f12, dyn # perform operation
fmsub.s f22, f15, f18, f12, rdn # perform operation
fmsub.s f22, f15, f18, f12, rmm # perform operation
fmsub.s f22, f15, f18, f12, rne # perform operation
fmsub.s f22, f15, f18, f12, rtz # perform operation
fmsub.s f22, f15, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x2, 0xf072b0c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x3210ed12 # load x3 with value 0x3210ed12
sw x3, 0(x2) # store 0x3210ed12 in memory
flw f10, 0(x2) # load 0x3210ed12 from memory into f10
fmsub.s f2, f29, f8, f10, dyn # perform operation
fmsub.s f2, f29, f8, f10, rdn # perform operation
fmsub.s f2, f29, f8, f10, rmm # perform operation
fmsub.s f2, f29, f8, f10, rne # perform operation
fmsub.s f2, f29, f8, f10, rtz # perform operation
fmsub.s f2, f29, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f29, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f29, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f29, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f29, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f29, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x12, 0x7292e5eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x18e27978 # load x3 with value 0x18e27978
sw x3, 0(x2) # store 0x18e27978 in memory
flw f29, 0(x2) # load 0x18e27978 from memory into f29
fmsub.s f12, f18, f4, f29, dyn # perform operation
fmsub.s f12, f18, f4, f29, rdn # perform operation
fmsub.s f12, f18, f4, f29, rmm # perform operation
fmsub.s f12, f18, f4, f29, rne # perform operation
fmsub.s f12, f18, f4, f29, rtz # perform operation
fmsub.s f12, f18, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f18, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f18, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f18, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f18, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f18, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x26, 0xfec1fae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0xd3a0b1d3 # load x3 with value 0xd3a0b1d3
sw x3, 0(x2) # store 0xd3a0b1d3 in memory
flw f4, 0(x2) # load 0xd3a0b1d3 from memory into f4
fmsub.s f26, f19, f17, f4, dyn # perform operation
fmsub.s f26, f19, f17, f4, rdn # perform operation
fmsub.s f26, f19, f17, f4, rmm # perform operation
fmsub.s f26, f19, f17, f4, rne # perform operation
fmsub.s f26, f19, f17, f4, rtz # perform operation
fmsub.s f26, f19, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f19, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f19, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f19, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f19, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f19, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x5, 0xe8372af0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xa352775b # load x3 with value 0xa352775b
sw x3, 0(x2) # store 0xa352775b in memory
flw f29, 0(x2) # load 0xa352775b from memory into f29
fmsub.s f5, f24, f18, f29, dyn # perform operation
fmsub.s f5, f24, f18, f29, rdn # perform operation
fmsub.s f5, f24, f18, f29, rmm # perform operation
fmsub.s f5, f24, f18, f29, rne # perform operation
fmsub.s f5, f24, f18, f29, rtz # perform operation
fmsub.s f5, f24, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f24, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x6, 0x19163c0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x2de0283c # load x3 with value 0x2de0283c
sw x3, 0(x2) # store 0x2de0283c in memory
flw f4, 0(x2) # load 0x2de0283c from memory into f4
fmsub.s f6, f10, f13, f4, dyn # perform operation
fmsub.s f6, f10, f13, f4, rdn # perform operation
fmsub.s f6, f10, f13, f4, rmm # perform operation
fmsub.s f6, f10, f13, f4, rne # perform operation
fmsub.s f6, f10, f13, f4, rtz # perform operation
fmsub.s f6, f10, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x24, 0xc0b1bd7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xacf96abb # load x3 with value 0xacf96abb
sw x3, 0(x2) # store 0xacf96abb in memory
flw f20, 0(x2) # load 0xacf96abb from memory into f20
fmsub.s f24, f4, f10, f20, dyn # perform operation
fmsub.s f24, f4, f10, f20, rdn # perform operation
fmsub.s f24, f4, f10, f20, rmm # perform operation
fmsub.s f24, f4, f10, f20, rne # perform operation
fmsub.s f24, f4, f10, f20, rtz # perform operation
fmsub.s f24, f4, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f4, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f4, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x12, 0x6daad8be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x1e11a630 # load x3 with value 0x1e11a630
sw x3, 0(x2) # store 0x1e11a630 in memory
flw f8, 0(x2) # load 0x1e11a630 from memory into f8
fmsub.s f12, f6, f15, f8, dyn # perform operation
fmsub.s f12, f6, f15, f8, rdn # perform operation
fmsub.s f12, f6, f15, f8, rmm # perform operation
fmsub.s f12, f6, f15, f8, rne # perform operation
fmsub.s f12, f6, f15, f8, rtz # perform operation
fmsub.s f12, f6, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f6, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f6, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x12, 0x28f7a870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x093e14bf # load x3 with value 0x093e14bf
sw x3, 0(x2) # store 0x093e14bf in memory
flw f1, 0(x2) # load 0x093e14bf from memory into f1
fmsub.s f12, f13, f9, f1, dyn # perform operation
fmsub.s f12, f13, f9, f1, rdn # perform operation
fmsub.s f12, f13, f9, f1, rmm # perform operation
fmsub.s f12, f13, f9, f1, rne # perform operation
fmsub.s f12, f13, f9, f1, rtz # perform operation
fmsub.s f12, f13, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f13, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f13, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f13, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f13, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f13, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x10, 0x14d5a142 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xb5198b08 # load x3 with value 0xb5198b08
sw x3, 0(x2) # store 0xb5198b08 in memory
flw f7, 0(x2) # load 0xb5198b08 from memory into f7
fmsub.s f10, f25, f8, f7, dyn # perform operation
fmsub.s f10, f25, f8, f7, rdn # perform operation
fmsub.s f10, f25, f8, f7, rmm # perform operation
fmsub.s f10, f25, f8, f7, rne # perform operation
fmsub.s f10, f25, f8, f7, rtz # perform operation
fmsub.s f10, f25, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x11, 0xc0e1825b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0xef5326bb # load x3 with value 0xef5326bb
sw x3, 0(x2) # store 0xef5326bb in memory
flw f28, 0(x2) # load 0xef5326bb from memory into f28
fmsub.s f11, f21, f9, f28, dyn # perform operation
fmsub.s f11, f21, f9, f28, rdn # perform operation
fmsub.s f11, f21, f9, f28, rmm # perform operation
fmsub.s f11, f21, f9, f28, rne # perform operation
fmsub.s f11, f21, f9, f28, rtz # perform operation
fmsub.s f11, f21, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x21, 0x5ad5f381 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0xc10604ed # load x3 with value 0xc10604ed
sw x3, 0(x2) # store 0xc10604ed in memory
flw f17, 0(x2) # load 0xc10604ed from memory into f17
fmsub.s f21, f1, f3, f17, dyn # perform operation
fmsub.s f21, f1, f3, f17, rdn # perform operation
fmsub.s f21, f1, f3, f17, rmm # perform operation
fmsub.s f21, f1, f3, f17, rne # perform operation
fmsub.s f21, f1, f3, f17, rtz # perform operation
fmsub.s f21, f1, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f1, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f1, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f1, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f1, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f1, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x14, 0xdbcc27fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x3b60e56e # load x3 with value 0x3b60e56e
sw x3, 0(x2) # store 0x3b60e56e in memory
flw f12, 0(x2) # load 0x3b60e56e from memory into f12
fmsub.s f14, f17, f29, f12, dyn # perform operation
fmsub.s f14, f17, f29, f12, rdn # perform operation
fmsub.s f14, f17, f29, f12, rmm # perform operation
fmsub.s f14, f17, f29, f12, rne # perform operation
fmsub.s f14, f17, f29, f12, rtz # perform operation
fmsub.s f14, f17, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f17, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f17, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x8, 0x3121cc04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x65bf9d9f # load x3 with value 0x65bf9d9f
sw x3, 0(x2) # store 0x65bf9d9f in memory
flw f13, 0(x2) # load 0x65bf9d9f from memory into f13
fmsub.s f8, f24, f5, f13, dyn # perform operation
fmsub.s f8, f24, f5, f13, rdn # perform operation
fmsub.s f8, f24, f5, f13, rmm # perform operation
fmsub.s f8, f24, f5, f13, rne # perform operation
fmsub.s f8, f24, f5, f13, rtz # perform operation
fmsub.s f8, f24, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f24, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f24, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x15, 0x2c6b3aa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x2cc1f405 # load x3 with value 0x2cc1f405
sw x3, 0(x2) # store 0x2cc1f405 in memory
flw f30, 0(x2) # load 0x2cc1f405 from memory into f30
fmsub.s f15, f6, f5, f30, dyn # perform operation
fmsub.s f15, f6, f5, f30, rdn # perform operation
fmsub.s f15, f6, f5, f30, rmm # perform operation
fmsub.s f15, f6, f5, f30, rne # perform operation
fmsub.s f15, f6, f5, f30, rtz # perform operation
fmsub.s f15, f6, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x9, 0xe7e198ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0xf02b8f0f # load x3 with value 0xf02b8f0f
sw x3, 0(x2) # store 0xf02b8f0f in memory
flw f13, 0(x2) # load 0xf02b8f0f from memory into f13
fmsub.s f9, f26, f8, f13, dyn # perform operation
fmsub.s f9, f26, f8, f13, rdn # perform operation
fmsub.s f9, f26, f8, f13, rmm # perform operation
fmsub.s f9, f26, f8, f13, rne # perform operation
fmsub.s f9, f26, f8, f13, rtz # perform operation
fmsub.s f9, f26, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f26, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f26, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x24, 0x7e51214e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x777546b7 # load x3 with value 0x777546b7
sw x3, 0(x2) # store 0x777546b7 in memory
flw f27, 0(x2) # load 0x777546b7 from memory into f27
fmsub.s f24, f17, f12, f27, dyn # perform operation
fmsub.s f24, f17, f12, f27, rdn # perform operation
fmsub.s f24, f17, f12, f27, rmm # perform operation
fmsub.s f24, f17, f12, f27, rne # perform operation
fmsub.s f24, f17, f12, f27, rtz # perform operation
fmsub.s f24, f17, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x20, 0x1015dd6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0xbdb4dec9 # load x3 with value 0xbdb4dec9
sw x3, 0(x2) # store 0xbdb4dec9 in memory
flw f24, 0(x2) # load 0xbdb4dec9 from memory into f24
fmsub.s f20, f30, f7, f24, dyn # perform operation
fmsub.s f20, f30, f7, f24, rdn # perform operation
fmsub.s f20, f30, f7, f24, rmm # perform operation
fmsub.s f20, f30, f7, f24, rne # perform operation
fmsub.s f20, f30, f7, f24, rtz # perform operation
fmsub.s f20, f30, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f7, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x20, 0x2c0a7a24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0xcabb0a79 # load x3 with value 0xcabb0a79
sw x3, 0(x2) # store 0xcabb0a79 in memory
flw f9, 0(x2) # load 0xcabb0a79 from memory into f9
fmsub.s f20, f7, f5, f9, dyn # perform operation
fmsub.s f20, f7, f5, f9, rdn # perform operation
fmsub.s f20, f7, f5, f9, rmm # perform operation
fmsub.s f20, f7, f5, f9, rne # perform operation
fmsub.s f20, f7, f5, f9, rtz # perform operation
fmsub.s f20, f7, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x27, 0x568e8667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x241c39aa # load x3 with value 0x241c39aa
sw x3, 0(x2) # store 0x241c39aa in memory
flw f4, 0(x2) # load 0x241c39aa from memory into f4
fmsub.s f27, f10, f5, f4, dyn # perform operation
fmsub.s f27, f10, f5, f4, rdn # perform operation
fmsub.s f27, f10, f5, f4, rmm # perform operation
fmsub.s f27, f10, f5, f4, rne # perform operation
fmsub.s f27, f10, f5, f4, rtz # perform operation
fmsub.s f27, f10, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f10, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f10, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x30, 0xab591340 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x36e80415 # load x3 with value 0x36e80415
sw x3, 0(x2) # store 0x36e80415 in memory
flw f18, 0(x2) # load 0x36e80415 from memory into f18
fmsub.s f30, f19, f17, f18, dyn # perform operation
fmsub.s f30, f19, f17, f18, rdn # perform operation
fmsub.s f30, f19, f17, f18, rmm # perform operation
fmsub.s f30, f19, f17, f18, rne # perform operation
fmsub.s f30, f19, f17, f18, rtz # perform operation
fmsub.s f30, f19, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x10, 0xd543a994 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x5b8e8fe4 # load x3 with value 0x5b8e8fe4
sw x3, 0(x2) # store 0x5b8e8fe4 in memory
flw f30, 0(x2) # load 0x5b8e8fe4 from memory into f30
fmsub.s f10, f9, f26, f30, dyn # perform operation
fmsub.s f10, f9, f26, f30, rdn # perform operation
fmsub.s f10, f9, f26, f30, rmm # perform operation
fmsub.s f10, f9, f26, f30, rne # perform operation
fmsub.s f10, f9, f26, f30, rtz # perform operation
fmsub.s f10, f9, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f26, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x10, 0x0cff9cab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x1eeced2f # load x3 with value 0x1eeced2f
sw x3, 0(x2) # store 0x1eeced2f in memory
flw f29, 0(x2) # load 0x1eeced2f from memory into f29
fmsub.s f10, f16, f21, f29, dyn # perform operation
fmsub.s f10, f16, f21, f29, rdn # perform operation
fmsub.s f10, f16, f21, f29, rmm # perform operation
fmsub.s f10, f16, f21, f29, rne # perform operation
fmsub.s f10, f16, f21, f29, rtz # perform operation
fmsub.s f10, f16, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f16, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x4, 0x35ff4135 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x9385f160 # load x3 with value 0x9385f160
sw x3, 0(x2) # store 0x9385f160 in memory
flw f7, 0(x2) # load 0x9385f160 from memory into f7
fmsub.s f4, f26, f3, f7, dyn # perform operation
fmsub.s f4, f26, f3, f7, rdn # perform operation
fmsub.s f4, f26, f3, f7, rmm # perform operation
fmsub.s f4, f26, f3, f7, rne # perform operation
fmsub.s f4, f26, f3, f7, rtz # perform operation
fmsub.s f4, f26, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f26, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f26, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x9, 0xc63469d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x3b4f39c8 # load x3 with value 0x3b4f39c8
sw x3, 0(x2) # store 0x3b4f39c8 in memory
flw f2, 0(x2) # load 0x3b4f39c8 from memory into f2
fmsub.s f9, f1, f11, f2, dyn # perform operation
fmsub.s f9, f1, f11, f2, rdn # perform operation
fmsub.s f9, f1, f11, f2, rmm # perform operation
fmsub.s f9, f1, f11, f2, rne # perform operation
fmsub.s f9, f1, f11, f2, rtz # perform operation
fmsub.s f9, f1, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f1, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f1, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x9, 0xa4007cca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x634d6560 # load x3 with value 0x634d6560
sw x3, 0(x2) # store 0x634d6560 in memory
flw f12, 0(x2) # load 0x634d6560 from memory into f12
fmsub.s f9, f24, f31, f12, dyn # perform operation
fmsub.s f9, f24, f31, f12, rdn # perform operation
fmsub.s f9, f24, f31, f12, rmm # perform operation
fmsub.s f9, f24, f31, f12, rne # perform operation
fmsub.s f9, f24, f31, f12, rtz # perform operation
fmsub.s f9, f24, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f24, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f24, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x16, 0x81ef6103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x911e3afc # load x3 with value 0x911e3afc
sw x3, 0(x2) # store 0x911e3afc in memory
flw f2, 0(x2) # load 0x911e3afc from memory into f2
fmsub.s f16, f24, f4, f2, dyn # perform operation
fmsub.s f16, f24, f4, f2, rdn # perform operation
fmsub.s f16, f24, f4, f2, rmm # perform operation
fmsub.s f16, f24, f4, f2, rne # perform operation
fmsub.s f16, f24, f4, f2, rtz # perform operation
fmsub.s f16, f24, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f24, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f24, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f24, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f24, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f24, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x8, 0xe3164b68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xc704c755 # load x3 with value 0xc704c755
sw x3, 0(x2) # store 0xc704c755 in memory
flw f26, 0(x2) # load 0xc704c755 from memory into f26
fmsub.s f8, f7, f20, f26, dyn # perform operation
fmsub.s f8, f7, f20, f26, rdn # perform operation
fmsub.s f8, f7, f20, f26, rmm # perform operation
fmsub.s f8, f7, f20, f26, rne # perform operation
fmsub.s f8, f7, f20, f26, rtz # perform operation
fmsub.s f8, f7, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x14, 0x9931fe73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0xb94a4cac # load x3 with value 0xb94a4cac
sw x3, 0(x2) # store 0xb94a4cac in memory
flw f4, 0(x2) # load 0xb94a4cac from memory into f4
fmsub.s f14, f21, f12, f4, dyn # perform operation
fmsub.s f14, f21, f12, f4, rdn # perform operation
fmsub.s f14, f21, f12, f4, rmm # perform operation
fmsub.s f14, f21, f12, f4, rne # perform operation
fmsub.s f14, f21, f12, f4, rtz # perform operation
fmsub.s f14, f21, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f21, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f21, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f21, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f21, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f21, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x23, 0x11c61a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x028cb010 # load x3 with value 0x028cb010
sw x3, 0(x2) # store 0x028cb010 in memory
flw f19, 0(x2) # load 0x028cb010 from memory into f19
fmsub.s f23, f31, f10, f19, dyn # perform operation
fmsub.s f23, f31, f10, f19, rdn # perform operation
fmsub.s f23, f31, f10, f19, rmm # perform operation
fmsub.s f23, f31, f10, f19, rne # perform operation
fmsub.s f23, f31, f10, f19, rtz # perform operation
fmsub.s f23, f31, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x22, 0xdd6aa073 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x9acac448 # load x3 with value 0x9acac448
sw x3, 0(x2) # store 0x9acac448 in memory
flw f28, 0(x2) # load 0x9acac448 from memory into f28
fmsub.s f22, f15, f4, f28, dyn # perform operation
fmsub.s f22, f15, f4, f28, rdn # perform operation
fmsub.s f22, f15, f4, f28, rmm # perform operation
fmsub.s f22, f15, f4, f28, rne # perform operation
fmsub.s f22, f15, f4, f28, rtz # perform operation
fmsub.s f22, f15, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x2, 0xbdded63e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x37c45970 # load x3 with value 0x37c45970
sw x3, 0(x2) # store 0x37c45970 in memory
flw f4, 0(x2) # load 0x37c45970 from memory into f4
fmsub.s f2, f5, f10, f4, dyn # perform operation
fmsub.s f2, f5, f10, f4, rdn # perform operation
fmsub.s f2, f5, f10, f4, rmm # perform operation
fmsub.s f2, f5, f10, f4, rne # perform operation
fmsub.s f2, f5, f10, f4, rtz # perform operation
fmsub.s f2, f5, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f5, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f5, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f5, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f5, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f5, f10, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x4, 0x4743f0df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x52f57415 # load x3 with value 0x52f57415
sw x3, 0(x2) # store 0x52f57415 in memory
flw f29, 0(x2) # load 0x52f57415 from memory into f29
fmsub.s f4, f21, f30, f29, dyn # perform operation
fmsub.s f4, f21, f30, f29, rdn # perform operation
fmsub.s f4, f21, f30, f29, rmm # perform operation
fmsub.s f4, f21, f30, f29, rne # perform operation
fmsub.s f4, f21, f30, f29, rtz # perform operation
fmsub.s f4, f21, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f21, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f21, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x10, 0xc8f03b1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xbff63d2a # load x3 with value 0xbff63d2a
sw x3, 0(x2) # store 0xbff63d2a in memory
flw f9, 0(x2) # load 0xbff63d2a from memory into f9
fmsub.s f10, f22, f18, f9, dyn # perform operation
fmsub.s f10, f22, f18, f9, rdn # perform operation
fmsub.s f10, f22, f18, f9, rmm # perform operation
fmsub.s f10, f22, f18, f9, rne # perform operation
fmsub.s f10, f22, f18, f9, rtz # perform operation
fmsub.s f10, f22, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f22, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f22, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x12, 0x8fd8f8d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0xa5e0479e # load x3 with value 0xa5e0479e
sw x3, 0(x2) # store 0xa5e0479e in memory
flw f28, 0(x2) # load 0xa5e0479e from memory into f28
fmsub.s f12, f23, f9, f28, dyn # perform operation
fmsub.s f12, f23, f9, f28, rdn # perform operation
fmsub.s f12, f23, f9, f28, rmm # perform operation
fmsub.s f12, f23, f9, f28, rne # perform operation
fmsub.s f12, f23, f9, f28, rtz # perform operation
fmsub.s f12, f23, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f23, f9, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x26, 0x4e191146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xca597b6d # load x3 with value 0xca597b6d
sw x3, 0(x2) # store 0xca597b6d in memory
flw f20, 0(x2) # load 0xca597b6d from memory into f20
fmsub.s f26, f5, f24, f20, dyn # perform operation
fmsub.s f26, f5, f24, f20, rdn # perform operation
fmsub.s f26, f5, f24, f20, rmm # perform operation
fmsub.s f26, f5, f24, f20, rne # perform operation
fmsub.s f26, f5, f24, f20, rtz # perform operation
fmsub.s f26, f5, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f5, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x12, 0x3af5e757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x2ad4b49d # load x3 with value 0x2ad4b49d
sw x3, 0(x2) # store 0x2ad4b49d in memory
flw f13, 0(x2) # load 0x2ad4b49d from memory into f13
fmsub.s f12, f4, f14, f13, dyn # perform operation
fmsub.s f12, f4, f14, f13, rdn # perform operation
fmsub.s f12, f4, f14, f13, rmm # perform operation
fmsub.s f12, f4, f14, f13, rne # perform operation
fmsub.s f12, f4, f14, f13, rtz # perform operation
fmsub.s f12, f4, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f4, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f4, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f4, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f4, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f4, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x25, 0x1f54135b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x29664730 # load x3 with value 0x29664730
sw x3, 0(x2) # store 0x29664730 in memory
flw f20, 0(x2) # load 0x29664730 from memory into f20
fmsub.s f25, f19, f5, f20, dyn # perform operation
fmsub.s f25, f19, f5, f20, rdn # perform operation
fmsub.s f25, f19, f5, f20, rmm # perform operation
fmsub.s f25, f19, f5, f20, rne # perform operation
fmsub.s f25, f19, f5, f20, rtz # perform operation
fmsub.s f25, f19, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x30, 0x68bbb57c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xa3552d34 # load x3 with value 0xa3552d34
sw x3, 0(x2) # store 0xa3552d34 in memory
flw f13, 0(x2) # load 0xa3552d34 from memory into f13
fmsub.s f30, f27, f26, f13, dyn # perform operation
fmsub.s f30, f27, f26, f13, rdn # perform operation
fmsub.s f30, f27, f26, f13, rmm # perform operation
fmsub.s f30, f27, f26, f13, rne # perform operation
fmsub.s f30, f27, f26, f13, rtz # perform operation
fmsub.s f30, f27, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f26, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x16, 0x9bd228c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x503b61a8 # load x3 with value 0x503b61a8
sw x3, 0(x2) # store 0x503b61a8 in memory
flw f17, 0(x2) # load 0x503b61a8 from memory into f17
fmsub.s f16, f22, f7, f17, dyn # perform operation
fmsub.s f16, f22, f7, f17, rdn # perform operation
fmsub.s f16, f22, f7, f17, rmm # perform operation
fmsub.s f16, f22, f7, f17, rne # perform operation
fmsub.s f16, f22, f7, f17, rtz # perform operation
fmsub.s f16, f22, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f22, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f22, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x7, 0x2cbadc74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xb10c86b0 # load x3 with value 0xb10c86b0
sw x3, 0(x2) # store 0xb10c86b0 in memory
flw f27, 0(x2) # load 0xb10c86b0 from memory into f27
fmsub.s f7, f17, f23, f27, dyn # perform operation
fmsub.s f7, f17, f23, f27, rdn # perform operation
fmsub.s f7, f17, f23, f27, rmm # perform operation
fmsub.s f7, f17, f23, f27, rne # perform operation
fmsub.s f7, f17, f23, f27, rtz # perform operation
fmsub.s f7, f17, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f17, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f17, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f17, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f17, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f17, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x15, 0x836208d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x847952e8 # load x3 with value 0x847952e8
sw x3, 0(x2) # store 0x847952e8 in memory
flw f16, 0(x2) # load 0x847952e8 from memory into f16
fmsub.s f15, f31, f2, f16, dyn # perform operation
fmsub.s f15, f31, f2, f16, rdn # perform operation
fmsub.s f15, f31, f2, f16, rmm # perform operation
fmsub.s f15, f31, f2, f16, rne # perform operation
fmsub.s f15, f31, f2, f16, rtz # perform operation
fmsub.s f15, f31, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x13, 0x7b417e2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x8ad15284 # load x3 with value 0x8ad15284
sw x3, 0(x2) # store 0x8ad15284 in memory
flw f4, 0(x2) # load 0x8ad15284 from memory into f4
fmsub.s f13, f19, f21, f4, dyn # perform operation
fmsub.s f13, f19, f21, f4, rdn # perform operation
fmsub.s f13, f19, f21, f4, rmm # perform operation
fmsub.s f13, f19, f21, f4, rne # perform operation
fmsub.s f13, f19, f21, f4, rtz # perform operation
fmsub.s f13, f19, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x9, 0x4c5658e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x1daacf10 # load x3 with value 0x1daacf10
sw x3, 0(x2) # store 0x1daacf10 in memory
flw f6, 0(x2) # load 0x1daacf10 from memory into f6
fmsub.s f9, f22, f16, f6, dyn # perform operation
fmsub.s f9, f22, f16, f6, rdn # perform operation
fmsub.s f9, f22, f16, f6, rmm # perform operation
fmsub.s f9, f22, f16, f6, rne # perform operation
fmsub.s f9, f22, f16, f6, rtz # perform operation
fmsub.s f9, f22, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f22, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f22, f16, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x5, 0xceadda0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0xa8340db2 # load x3 with value 0xa8340db2
sw x3, 0(x2) # store 0xa8340db2 in memory
flw f4, 0(x2) # load 0xa8340db2 from memory into f4
fmsub.s f5, f31, f9, f4, dyn # perform operation
fmsub.s f5, f31, f9, f4, rdn # perform operation
fmsub.s f5, f31, f9, f4, rmm # perform operation
fmsub.s f5, f31, f9, f4, rne # perform operation
fmsub.s f5, f31, f9, f4, rtz # perform operation
fmsub.s f5, f31, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f31, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f31, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x22, 0x681eb9da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xaf62e55a # load x3 with value 0xaf62e55a
sw x3, 0(x2) # store 0xaf62e55a in memory
flw f5, 0(x2) # load 0xaf62e55a from memory into f5
fmsub.s f22, f8, f16, f5, dyn # perform operation
fmsub.s f22, f8, f16, f5, rdn # perform operation
fmsub.s f22, f8, f16, f5, rmm # perform operation
fmsub.s f22, f8, f16, f5, rne # perform operation
fmsub.s f22, f8, f16, f5, rtz # perform operation
fmsub.s f22, f8, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f8, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x24, 0x56a633f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0xab792714 # load x3 with value 0xab792714
sw x3, 0(x2) # store 0xab792714 in memory
flw f10, 0(x2) # load 0xab792714 from memory into f10
fmsub.s f24, f25, f4, f10, dyn # perform operation
fmsub.s f24, f25, f4, f10, rdn # perform operation
fmsub.s f24, f25, f4, f10, rmm # perform operation
fmsub.s f24, f25, f4, f10, rne # perform operation
fmsub.s f24, f25, f4, f10, rtz # perform operation
fmsub.s f24, f25, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x19, 0x6bf138cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x023c74ba # load x3 with value 0x023c74ba
sw x3, 0(x2) # store 0x023c74ba in memory
flw f25, 0(x2) # load 0x023c74ba from memory into f25
fmsub.s f19, f15, f27, f25, dyn # perform operation
fmsub.s f19, f15, f27, f25, rdn # perform operation
fmsub.s f19, f15, f27, f25, rmm # perform operation
fmsub.s f19, f15, f27, f25, rne # perform operation
fmsub.s f19, f15, f27, f25, rtz # perform operation
fmsub.s f19, f15, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f15, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f15, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x21, 0x8fbe5634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x544f1a56 # load x3 with value 0x544f1a56
sw x3, 0(x2) # store 0x544f1a56 in memory
flw f7, 0(x2) # load 0x544f1a56 from memory into f7
fmsub.s f21, f30, f13, f7, dyn # perform operation
fmsub.s f21, f30, f13, f7, rdn # perform operation
fmsub.s f21, f30, f13, f7, rmm # perform operation
fmsub.s f21, f30, f13, f7, rne # perform operation
fmsub.s f21, f30, f13, f7, rtz # perform operation
fmsub.s f21, f30, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x10, 0xef0ca79d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x0fbbccb0 # load x3 with value 0x0fbbccb0
sw x3, 0(x2) # store 0x0fbbccb0 in memory
flw f3, 0(x2) # load 0x0fbbccb0 from memory into f3
fmsub.s f10, f17, f8, f3, dyn # perform operation
fmsub.s f10, f17, f8, f3, rdn # perform operation
fmsub.s f10, f17, f8, f3, rmm # perform operation
fmsub.s f10, f17, f8, f3, rne # perform operation
fmsub.s f10, f17, f8, f3, rtz # perform operation
fmsub.s f10, f17, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x14, 0x9fceec78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xa50cc8be # load x3 with value 0xa50cc8be
sw x3, 0(x2) # store 0xa50cc8be in memory
flw f16, 0(x2) # load 0xa50cc8be from memory into f16
fmsub.s f14, f31, f21, f16, dyn # perform operation
fmsub.s f14, f31, f21, f16, rdn # perform operation
fmsub.s f14, f31, f21, f16, rmm # perform operation
fmsub.s f14, f31, f21, f16, rne # perform operation
fmsub.s f14, f31, f21, f16, rtz # perform operation
fmsub.s f14, f31, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f31, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x25, 0xdcbaf839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x1203ff5a # load x3 with value 0x1203ff5a
sw x3, 0(x2) # store 0x1203ff5a in memory
flw f26, 0(x2) # load 0x1203ff5a from memory into f26
fmsub.s f25, f18, f28, f26, dyn # perform operation
fmsub.s f25, f18, f28, f26, rdn # perform operation
fmsub.s f25, f18, f28, f26, rmm # perform operation
fmsub.s f25, f18, f28, f26, rne # perform operation
fmsub.s f25, f18, f28, f26, rtz # perform operation
fmsub.s f25, f18, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f28, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x15, 0x05ee2ac5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0xa917cc69 # load x3 with value 0xa917cc69
sw x3, 0(x2) # store 0xa917cc69 in memory
flw f5, 0(x2) # load 0xa917cc69 from memory into f5
fmsub.s f15, f20, f2, f5, dyn # perform operation
fmsub.s f15, f20, f2, f5, rdn # perform operation
fmsub.s f15, f20, f2, f5, rmm # perform operation
fmsub.s f15, f20, f2, f5, rne # perform operation
fmsub.s f15, f20, f2, f5, rtz # perform operation
fmsub.s f15, f20, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x27, 0xe1cf8f21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x5dca8ebf # load x3 with value 0x5dca8ebf
sw x3, 0(x2) # store 0x5dca8ebf in memory
flw f13, 0(x2) # load 0x5dca8ebf from memory into f13
fmsub.s f27, f20, f18, f13, dyn # perform operation
fmsub.s f27, f20, f18, f13, rdn # perform operation
fmsub.s f27, f20, f18, f13, rmm # perform operation
fmsub.s f27, f20, f18, f13, rne # perform operation
fmsub.s f27, f20, f18, f13, rtz # perform operation
fmsub.s f27, f20, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f20, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f20, f18, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x11, 0x816ba5f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x9de15258 # load x3 with value 0x9de15258
sw x3, 0(x2) # store 0x9de15258 in memory
flw f4, 0(x2) # load 0x9de15258 from memory into f4
fmsub.s f11, f3, f30, f4, dyn # perform operation
fmsub.s f11, f3, f30, f4, rdn # perform operation
fmsub.s f11, f3, f30, f4, rmm # perform operation
fmsub.s f11, f3, f30, f4, rne # perform operation
fmsub.s f11, f3, f30, f4, rtz # perform operation
fmsub.s f11, f3, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f3, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f3, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x28, 0xf14727bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x0f5ca5d8 # load x3 with value 0x0f5ca5d8
sw x3, 0(x2) # store 0x0f5ca5d8 in memory
flw f27, 0(x2) # load 0x0f5ca5d8 from memory into f27
fmsub.s f28, f15, f29, f27, dyn # perform operation
fmsub.s f28, f15, f29, f27, rdn # perform operation
fmsub.s f28, f15, f29, f27, rmm # perform operation
fmsub.s f28, f15, f29, f27, rne # perform operation
fmsub.s f28, f15, f29, f27, rtz # perform operation
fmsub.s f28, f15, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x4, 0x076820f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x1d325cef # load x3 with value 0x1d325cef
sw x3, 0(x2) # store 0x1d325cef in memory
flw f10, 0(x2) # load 0x1d325cef from memory into f10
fmsub.s f4, f31, f13, f10, dyn # perform operation
fmsub.s f4, f31, f13, f10, rdn # perform operation
fmsub.s f4, f31, f13, f10, rmm # perform operation
fmsub.s f4, f31, f13, f10, rne # perform operation
fmsub.s f4, f31, f13, f10, rtz # perform operation
fmsub.s f4, f31, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f31, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f31, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f31, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f31, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f31, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x25, 0xe3e339f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x0fb95338 # load x3 with value 0x0fb95338
sw x3, 0(x2) # store 0x0fb95338 in memory
flw f4, 0(x2) # load 0x0fb95338 from memory into f4
fmsub.s f25, f28, f17, f4, dyn # perform operation
fmsub.s f25, f28, f17, f4, rdn # perform operation
fmsub.s f25, f28, f17, f4, rmm # perform operation
fmsub.s f25, f28, f17, f4, rne # perform operation
fmsub.s f25, f28, f17, f4, rtz # perform operation
fmsub.s f25, f28, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f28, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x17, 0xb541bbd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xc7152080 # load x3 with value 0xc7152080
sw x3, 0(x2) # store 0xc7152080 in memory
flw f27, 0(x2) # load 0xc7152080 from memory into f27
fmsub.s f17, f20, f11, f27, dyn # perform operation
fmsub.s f17, f20, f11, f27, rdn # perform operation
fmsub.s f17, f20, f11, f27, rmm # perform operation
fmsub.s f17, f20, f11, f27, rne # perform operation
fmsub.s f17, f20, f11, f27, rtz # perform operation
fmsub.s f17, f20, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f20, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f20, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x22, 0x2bfc830f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x0e0dfdd4 # load x3 with value 0x0e0dfdd4
sw x3, 0(x2) # store 0x0e0dfdd4 in memory
flw f6, 0(x2) # load 0x0e0dfdd4 from memory into f6
fmsub.s f22, f3, f14, f6, dyn # perform operation
fmsub.s f22, f3, f14, f6, rdn # perform operation
fmsub.s f22, f3, f14, f6, rmm # perform operation
fmsub.s f22, f3, f14, f6, rne # perform operation
fmsub.s f22, f3, f14, f6, rtz # perform operation
fmsub.s f22, f3, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f3, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x4, 0x1a09354b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xd1a757d4 # load x3 with value 0xd1a757d4
sw x3, 0(x2) # store 0xd1a757d4 in memory
flw f1, 0(x2) # load 0xd1a757d4 from memory into f1
fmsub.s f4, f17, f20, f1, dyn # perform operation
fmsub.s f4, f17, f20, f1, rdn # perform operation
fmsub.s f4, f17, f20, f1, rmm # perform operation
fmsub.s f4, f17, f20, f1, rne # perform operation
fmsub.s f4, f17, f20, f1, rtz # perform operation
fmsub.s f4, f17, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f17, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f17, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x28, 0xe6b5da85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0x2ff2dc81 # load x3 with value 0x2ff2dc81
sw x3, 0(x2) # store 0x2ff2dc81 in memory
flw f4, 0(x2) # load 0x2ff2dc81 from memory into f4
fmsub.s f28, f15, f9, f4, dyn # perform operation
fmsub.s f28, f15, f9, f4, rdn # perform operation
fmsub.s f28, f15, f9, f4, rmm # perform operation
fmsub.s f28, f15, f9, f4, rne # perform operation
fmsub.s f28, f15, f9, f4, rtz # perform operation
fmsub.s f28, f15, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f15, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f15, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x19, 0xeb6c4508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x6ae25d6d # load x3 with value 0x6ae25d6d
sw x3, 0(x2) # store 0x6ae25d6d in memory
flw f23, 0(x2) # load 0x6ae25d6d from memory into f23
fmsub.s f19, f28, f11, f23, dyn # perform operation
fmsub.s f19, f28, f11, f23, rdn # perform operation
fmsub.s f19, f28, f11, f23, rmm # perform operation
fmsub.s f19, f28, f11, f23, rne # perform operation
fmsub.s f19, f28, f11, f23, rtz # perform operation
fmsub.s f19, f28, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f28, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f28, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f28, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f28, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f28, f11, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x9, 0x801b02b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xc891d7b1 # load x3 with value 0xc891d7b1
sw x3, 0(x2) # store 0xc891d7b1 in memory
flw f13, 0(x2) # load 0xc891d7b1 from memory into f13
fmsub.s f9, f30, f27, f13, dyn # perform operation
fmsub.s f9, f30, f27, f13, rdn # perform operation
fmsub.s f9, f30, f27, f13, rmm # perform operation
fmsub.s f9, f30, f27, f13, rne # perform operation
fmsub.s f9, f30, f27, f13, rtz # perform operation
fmsub.s f9, f30, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f30, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f30, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x13, 0x45257ec6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x8b325725 # load x3 with value 0x8b325725
sw x3, 0(x2) # store 0x8b325725 in memory
flw f29, 0(x2) # load 0x8b325725 from memory into f29
fmsub.s f13, f15, f16, f29, dyn # perform operation
fmsub.s f13, f15, f16, f29, rdn # perform operation
fmsub.s f13, f15, f16, f29, rmm # perform operation
fmsub.s f13, f15, f16, f29, rne # perform operation
fmsub.s f13, f15, f16, f29, rtz # perform operation
fmsub.s f13, f15, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x22, 0x2c311f36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x5c2b40b1 # load x3 with value 0x5c2b40b1
sw x3, 0(x2) # store 0x5c2b40b1 in memory
flw f15, 0(x2) # load 0x5c2b40b1 from memory into f15
fmsub.s f22, f16, f23, f15, dyn # perform operation
fmsub.s f22, f16, f23, f15, rdn # perform operation
fmsub.s f22, f16, f23, f15, rmm # perform operation
fmsub.s f22, f16, f23, f15, rne # perform operation
fmsub.s f22, f16, f23, f15, rtz # perform operation
fmsub.s f22, f16, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x27, 0x9cd38645 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xcec7a83e # load x3 with value 0xcec7a83e
sw x3, 0(x2) # store 0xcec7a83e in memory
flw f3, 0(x2) # load 0xcec7a83e from memory into f3
fmsub.s f27, f19, f8, f3, dyn # perform operation
fmsub.s f27, f19, f8, f3, rdn # perform operation
fmsub.s f27, f19, f8, f3, rmm # perform operation
fmsub.s f27, f19, f8, f3, rne # perform operation
fmsub.s f27, f19, f8, f3, rtz # perform operation
fmsub.s f27, f19, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f19, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f19, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f19, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f19, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f19, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x16, 0x80c27c0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x9b748b25 # load x3 with value 0x9b748b25
sw x3, 0(x2) # store 0x9b748b25 in memory
flw f3, 0(x2) # load 0x9b748b25 from memory into f3
fmsub.s f16, f29, f12, f3, dyn # perform operation
fmsub.s f16, f29, f12, f3, rdn # perform operation
fmsub.s f16, f29, f12, f3, rmm # perform operation
fmsub.s f16, f29, f12, f3, rne # perform operation
fmsub.s f16, f29, f12, f3, rtz # perform operation
fmsub.s f16, f29, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f12, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x6, 0xe6b7e4fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x8026d092 # load x3 with value 0x8026d092
sw x3, 0(x2) # store 0x8026d092 in memory
flw f1, 0(x2) # load 0x8026d092 from memory into f1
fmsub.s f6, f28, f11, f1, dyn # perform operation
fmsub.s f6, f28, f11, f1, rdn # perform operation
fmsub.s f6, f28, f11, f1, rmm # perform operation
fmsub.s f6, f28, f11, f1, rne # perform operation
fmsub.s f6, f28, f11, f1, rtz # perform operation
fmsub.s f6, f28, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f28, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f28, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f28, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f28, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f28, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x18, 0x4e551eea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xae2ae416 # load x3 with value 0xae2ae416
sw x3, 0(x2) # store 0xae2ae416 in memory
flw f23, 0(x2) # load 0xae2ae416 from memory into f23
fmsub.s f18, f13, f5, f23, dyn # perform operation
fmsub.s f18, f13, f5, f23, rdn # perform operation
fmsub.s f18, f13, f5, f23, rmm # perform operation
fmsub.s f18, f13, f5, f23, rne # perform operation
fmsub.s f18, f13, f5, f23, rtz # perform operation
fmsub.s f18, f13, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f13, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f13, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x31, 0x0decc5b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xcc910fca # load x3 with value 0xcc910fca
sw x3, 0(x2) # store 0xcc910fca in memory
flw f22, 0(x2) # load 0xcc910fca from memory into f22
fmsub.s f31, f9, f15, f22, dyn # perform operation
fmsub.s f31, f9, f15, f22, rdn # perform operation
fmsub.s f31, f9, f15, f22, rmm # perform operation
fmsub.s f31, f9, f15, f22, rne # perform operation
fmsub.s f31, f9, f15, f22, rtz # perform operation
fmsub.s f31, f9, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x12, 0x8f771258 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xf5a7aa39 # load x3 with value 0xf5a7aa39
sw x3, 0(x2) # store 0xf5a7aa39 in memory
flw f7, 0(x2) # load 0xf5a7aa39 from memory into f7
fmsub.s f12, f1, f25, f7, dyn # perform operation
fmsub.s f12, f1, f25, f7, rdn # perform operation
fmsub.s f12, f1, f25, f7, rmm # perform operation
fmsub.s f12, f1, f25, f7, rne # perform operation
fmsub.s f12, f1, f25, f7, rtz # perform operation
fmsub.s f12, f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x6, 0x6f1e19ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x58d677d9 # load x3 with value 0x58d677d9
sw x3, 0(x2) # store 0x58d677d9 in memory
flw f23, 0(x2) # load 0x58d677d9 from memory into f23
fmsub.s f6, f8, f2, f23, dyn # perform operation
fmsub.s f6, f8, f2, f23, rdn # perform operation
fmsub.s f6, f8, f2, f23, rmm # perform operation
fmsub.s f6, f8, f2, f23, rne # perform operation
fmsub.s f6, f8, f2, f23, rtz # perform operation
fmsub.s f6, f8, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f2, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x31, 0xc9cfa484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xc7f0901c # load x3 with value 0xc7f0901c
sw x3, 0(x2) # store 0xc7f0901c in memory
flw f22, 0(x2) # load 0xc7f0901c from memory into f22
fmsub.s f31, f23, f17, f22, dyn # perform operation
fmsub.s f31, f23, f17, f22, rdn # perform operation
fmsub.s f31, f23, f17, f22, rmm # perform operation
fmsub.s f31, f23, f17, f22, rne # perform operation
fmsub.s f31, f23, f17, f22, rtz # perform operation
fmsub.s f31, f23, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f23, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f23, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f23, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f23, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f23, f17, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x8, 0xd44f22ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x96c89fc9 # load x3 with value 0x96c89fc9
sw x3, 0(x2) # store 0x96c89fc9 in memory
flw f12, 0(x2) # load 0x96c89fc9 from memory into f12
fmsub.s f8, f21, f18, f12, dyn # perform operation
fmsub.s f8, f21, f18, f12, rdn # perform operation
fmsub.s f8, f21, f18, f12, rmm # perform operation
fmsub.s f8, f21, f18, f12, rne # perform operation
fmsub.s f8, f21, f18, f12, rtz # perform operation
fmsub.s f8, f21, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f21, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f21, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x5, 0x3a82af6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x4166fc80 # load x3 with value 0x4166fc80
sw x3, 0(x2) # store 0x4166fc80 in memory
flw f26, 0(x2) # load 0x4166fc80 from memory into f26
fmsub.s f5, f3, f10, f26, dyn # perform operation
fmsub.s f5, f3, f10, f26, rdn # perform operation
fmsub.s f5, f3, f10, f26, rmm # perform operation
fmsub.s f5, f3, f10, f26, rne # perform operation
fmsub.s f5, f3, f10, f26, rtz # perform operation
fmsub.s f5, f3, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f3, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f3, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x9, 0x3a682908 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0xa643e0a5 # load x3 with value 0xa643e0a5
sw x3, 0(x2) # store 0xa643e0a5 in memory
flw f19, 0(x2) # load 0xa643e0a5 from memory into f19
fmsub.s f9, f27, f10, f19, dyn # perform operation
fmsub.s f9, f27, f10, f19, rdn # perform operation
fmsub.s f9, f27, f10, f19, rmm # perform operation
fmsub.s f9, f27, f10, f19, rne # perform operation
fmsub.s f9, f27, f10, f19, rtz # perform operation
fmsub.s f9, f27, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f10, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x14, 0x80ae2f27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x96c41fd4 # load x3 with value 0x96c41fd4
sw x3, 0(x2) # store 0x96c41fd4 in memory
flw f7, 0(x2) # load 0x96c41fd4 from memory into f7
fmsub.s f14, f29, f6, f7, dyn # perform operation
fmsub.s f14, f29, f6, f7, rdn # perform operation
fmsub.s f14, f29, f6, f7, rmm # perform operation
fmsub.s f14, f29, f6, f7, rne # perform operation
fmsub.s f14, f29, f6, f7, rtz # perform operation
fmsub.s f14, f29, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x18, 0x2376193d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0xda025917 # load x3 with value 0xda025917
sw x3, 0(x2) # store 0xda025917 in memory
flw f28, 0(x2) # load 0xda025917 from memory into f28
fmsub.s f18, f23, f15, f28, dyn # perform operation
fmsub.s f18, f23, f15, f28, rdn # perform operation
fmsub.s f18, f23, f15, f28, rmm # perform operation
fmsub.s f18, f23, f15, f28, rne # perform operation
fmsub.s f18, f23, f15, f28, rtz # perform operation
fmsub.s f18, f23, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f23, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x16, 0x041598f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x26afadf5 # load x3 with value 0x26afadf5
sw x3, 0(x2) # store 0x26afadf5 in memory
flw f4, 0(x2) # load 0x26afadf5 from memory into f4
fmsub.s f16, f22, f13, f4, dyn # perform operation
fmsub.s f16, f22, f13, f4, rdn # perform operation
fmsub.s f16, f22, f13, f4, rmm # perform operation
fmsub.s f16, f22, f13, f4, rne # perform operation
fmsub.s f16, f22, f13, f4, rtz # perform operation
fmsub.s f16, f22, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f22, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f22, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f22, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f22, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f22, f13, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x6, 0xf9cd0b08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0xde05cacf # load x3 with value 0xde05cacf
sw x3, 0(x2) # store 0xde05cacf in memory
flw f17, 0(x2) # load 0xde05cacf from memory into f17
fmsub.s f6, f12, f25, f17, dyn # perform operation
fmsub.s f6, f12, f25, f17, rdn # perform operation
fmsub.s f6, f12, f25, f17, rmm # perform operation
fmsub.s f6, f12, f25, f17, rne # perform operation
fmsub.s f6, f12, f25, f17, rtz # perform operation
fmsub.s f6, f12, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f12, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f12, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f12, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f12, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f12, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x30, 0xd8308b7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x58b16b1e # load x3 with value 0x58b16b1e
sw x3, 0(x2) # store 0x58b16b1e in memory
flw f21, 0(x2) # load 0x58b16b1e from memory into f21
fmsub.s f30, f31, f23, f21, dyn # perform operation
fmsub.s f30, f31, f23, f21, rdn # perform operation
fmsub.s f30, f31, f23, f21, rmm # perform operation
fmsub.s f30, f31, f23, f21, rne # perform operation
fmsub.s f30, f31, f23, f21, rtz # perform operation
fmsub.s f30, f31, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f31, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f31, f23, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x31, 0x0028e88b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x6c0352f9 # load x3 with value 0x6c0352f9
sw x3, 0(x2) # store 0x6c0352f9 in memory
flw f17, 0(x2) # load 0x6c0352f9 from memory into f17
fmsub.s f31, f13, f16, f17, dyn # perform operation
fmsub.s f31, f13, f16, f17, rdn # perform operation
fmsub.s f31, f13, f16, f17, rmm # perform operation
fmsub.s f31, f13, f16, f17, rne # perform operation
fmsub.s f31, f13, f16, f17, rtz # perform operation
fmsub.s f31, f13, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f13, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f13, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f13, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f13, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f13, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x15, 0x520fbe79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0xf1442325 # load x3 with value 0xf1442325
sw x3, 0(x2) # store 0xf1442325 in memory
flw f27, 0(x2) # load 0xf1442325 from memory into f27
fmsub.s f15, f5, f29, f27, dyn # perform operation
fmsub.s f15, f5, f29, f27, rdn # perform operation
fmsub.s f15, f5, f29, f27, rmm # perform operation
fmsub.s f15, f5, f29, f27, rne # perform operation
fmsub.s f15, f5, f29, f27, rtz # perform operation
fmsub.s f15, f5, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f5, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f5, f29, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x9, 0x639fabec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x940bdd3b # load x3 with value 0x940bdd3b
sw x3, 0(x2) # store 0x940bdd3b in memory
flw f2, 0(x2) # load 0x940bdd3b from memory into f2
fmsub.s f9, f10, f27, f2, dyn # perform operation
fmsub.s f9, f10, f27, f2, rdn # perform operation
fmsub.s f9, f10, f27, f2, rmm # perform operation
fmsub.s f9, f10, f27, f2, rne # perform operation
fmsub.s f9, f10, f27, f2, rtz # perform operation
fmsub.s f9, f10, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x27, 0x03218d01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x7b8df109 # load x3 with value 0x7b8df109
sw x3, 0(x2) # store 0x7b8df109 in memory
flw f28, 0(x2) # load 0x7b8df109 from memory into f28
fmsub.s f27, f8, f4, f28, dyn # perform operation
fmsub.s f27, f8, f4, f28, rdn # perform operation
fmsub.s f27, f8, f4, f28, rmm # perform operation
fmsub.s f27, f8, f4, f28, rne # perform operation
fmsub.s f27, f8, f4, f28, rtz # perform operation
fmsub.s f27, f8, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f8, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f8, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f8, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f8, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f8, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x30, 0x90051118 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x55e190dd # load x3 with value 0x55e190dd
sw x3, 0(x2) # store 0x55e190dd in memory
flw f14, 0(x2) # load 0x55e190dd from memory into f14
fmsub.s f30, f17, f21, f14, dyn # perform operation
fmsub.s f30, f17, f21, f14, rdn # perform operation
fmsub.s f30, f17, f21, f14, rmm # perform operation
fmsub.s f30, f17, f21, f14, rne # perform operation
fmsub.s f30, f17, f21, f14, rtz # perform operation
fmsub.s f30, f17, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x22, 0x793132f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x89bb1ca3 # load x3 with value 0x89bb1ca3
sw x3, 0(x2) # store 0x89bb1ca3 in memory
flw f7, 0(x2) # load 0x89bb1ca3 from memory into f7
fmsub.s f22, f10, f5, f7, dyn # perform operation
fmsub.s f22, f10, f5, f7, rdn # perform operation
fmsub.s f22, f10, f5, f7, rmm # perform operation
fmsub.s f22, f10, f5, f7, rne # perform operation
fmsub.s f22, f10, f5, f7, rtz # perform operation
fmsub.s f22, f10, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f10, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x3, 0xb24cd5fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x01535be6 # load x3 with value 0x01535be6
sw x3, 0(x2) # store 0x01535be6 in memory
flw f4, 0(x2) # load 0x01535be6 from memory into f4
fmsub.s f3, f10, f22, f4, dyn # perform operation
fmsub.s f3, f10, f22, f4, rdn # perform operation
fmsub.s f3, f10, f22, f4, rmm # perform operation
fmsub.s f3, f10, f22, f4, rne # perform operation
fmsub.s f3, f10, f22, f4, rtz # perform operation
fmsub.s f3, f10, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f10, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x21, 0x2b290228 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x99d7745d # load x3 with value 0x99d7745d
sw x3, 0(x2) # store 0x99d7745d in memory
flw f25, 0(x2) # load 0x99d7745d from memory into f25
fmsub.s f21, f7, f11, f25, dyn # perform operation
fmsub.s f21, f7, f11, f25, rdn # perform operation
fmsub.s f21, f7, f11, f25, rmm # perform operation
fmsub.s f21, f7, f11, f25, rne # perform operation
fmsub.s f21, f7, f11, f25, rtz # perform operation
fmsub.s f21, f7, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f7, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f7, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f7, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f7, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f7, f11, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x16, 0x2b86f330 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xe9887804 # load x3 with value 0xe9887804
sw x3, 0(x2) # store 0xe9887804 in memory
flw f25, 0(x2) # load 0xe9887804 from memory into f25
fmsub.s f16, f4, f21, f25, dyn # perform operation
fmsub.s f16, f4, f21, f25, rdn # perform operation
fmsub.s f16, f4, f21, f25, rmm # perform operation
fmsub.s f16, f4, f21, f25, rne # perform operation
fmsub.s f16, f4, f21, f25, rtz # perform operation
fmsub.s f16, f4, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f4, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f4, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f4, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f4, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f4, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x3, 0x44c28cf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xd52aaec6 # load x3 with value 0xd52aaec6
sw x3, 0(x2) # store 0xd52aaec6 in memory
flw f29, 0(x2) # load 0xd52aaec6 from memory into f29
fmsub.s f3, f21, f1, f29, dyn # perform operation
fmsub.s f3, f21, f1, f29, rdn # perform operation
fmsub.s f3, f21, f1, f29, rmm # perform operation
fmsub.s f3, f21, f1, f29, rne # perform operation
fmsub.s f3, f21, f1, f29, rtz # perform operation
fmsub.s f3, f21, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x23, 0x659f981a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x95bc3178 # load x3 with value 0x95bc3178
sw x3, 0(x2) # store 0x95bc3178 in memory
flw f2, 0(x2) # load 0x95bc3178 from memory into f2
fmsub.s f23, f6, f9, f2, dyn # perform operation
fmsub.s f23, f6, f9, f2, rdn # perform operation
fmsub.s f23, f6, f9, f2, rmm # perform operation
fmsub.s f23, f6, f9, f2, rne # perform operation
fmsub.s f23, f6, f9, f2, rtz # perform operation
fmsub.s f23, f6, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x27, 0x8c25b144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x87beb76b # load x3 with value 0x87beb76b
sw x3, 0(x2) # store 0x87beb76b in memory
flw f18, 0(x2) # load 0x87beb76b from memory into f18
fmsub.s f27, f16, f10, f18, dyn # perform operation
fmsub.s f27, f16, f10, f18, rdn # perform operation
fmsub.s f27, f16, f10, f18, rmm # perform operation
fmsub.s f27, f16, f10, f18, rne # perform operation
fmsub.s f27, f16, f10, f18, rtz # perform operation
fmsub.s f27, f16, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x28, 0x68563f35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x5bcfc745 # load x3 with value 0x5bcfc745
sw x3, 0(x2) # store 0x5bcfc745 in memory
flw f4, 0(x2) # load 0x5bcfc745 from memory into f4
fmsub.s f28, f29, f31, f4, dyn # perform operation
fmsub.s f28, f29, f31, f4, rdn # perform operation
fmsub.s f28, f29, f31, f4, rmm # perform operation
fmsub.s f28, f29, f31, f4, rne # perform operation
fmsub.s f28, f29, f31, f4, rtz # perform operation
fmsub.s f28, f29, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x2, 0x5cf0392d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0xa0890726 # load x3 with value 0xa0890726
sw x3, 0(x2) # store 0xa0890726 in memory
flw f23, 0(x2) # load 0xa0890726 from memory into f23
fmsub.s f2, f9, f14, f23, dyn # perform operation
fmsub.s f2, f9, f14, f23, rdn # perform operation
fmsub.s f2, f9, f14, f23, rmm # perform operation
fmsub.s f2, f9, f14, f23, rne # perform operation
fmsub.s f2, f9, f14, f23, rtz # perform operation
fmsub.s f2, f9, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x9, 0xf90c7891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0xe543feaf # load x3 with value 0xe543feaf
sw x3, 0(x2) # store 0xe543feaf in memory
flw f22, 0(x2) # load 0xe543feaf from memory into f22
fmsub.s f9, f10, f7, f22, dyn # perform operation
fmsub.s f9, f10, f7, f22, rdn # perform operation
fmsub.s f9, f10, f7, f22, rmm # perform operation
fmsub.s f9, f10, f7, f22, rne # perform operation
fmsub.s f9, f10, f7, f22, rtz # perform operation
fmsub.s f9, f10, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f7, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x5, 0xd10c42fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x13287c4c # load x3 with value 0x13287c4c
sw x3, 0(x2) # store 0x13287c4c in memory
flw f23, 0(x2) # load 0x13287c4c from memory into f23
fmsub.s f5, f10, f25, f23, dyn # perform operation
fmsub.s f5, f10, f25, f23, rdn # perform operation
fmsub.s f5, f10, f25, f23, rmm # perform operation
fmsub.s f5, f10, f25, f23, rne # perform operation
fmsub.s f5, f10, f25, f23, rtz # perform operation
fmsub.s f5, f10, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f10, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f10, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f10, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f10, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f10, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x4, 0x354be888 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xd6fd130a # load x3 with value 0xd6fd130a
sw x3, 0(x2) # store 0xd6fd130a in memory
flw f15, 0(x2) # load 0xd6fd130a from memory into f15
fmsub.s f4, f20, f13, f15, dyn # perform operation
fmsub.s f4, f20, f13, f15, rdn # perform operation
fmsub.s f4, f20, f13, f15, rmm # perform operation
fmsub.s f4, f20, f13, f15, rne # perform operation
fmsub.s f4, f20, f13, f15, rtz # perform operation
fmsub.s f4, f20, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f20, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f20, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x13, 0xb84e4d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x91dc628c # load x3 with value 0x91dc628c
sw x3, 0(x2) # store 0x91dc628c in memory
flw f22, 0(x2) # load 0x91dc628c from memory into f22
fmsub.s f13, f30, f28, f22, dyn # perform operation
fmsub.s f13, f30, f28, f22, rdn # perform operation
fmsub.s f13, f30, f28, f22, rmm # perform operation
fmsub.s f13, f30, f28, f22, rne # perform operation
fmsub.s f13, f30, f28, f22, rtz # perform operation
fmsub.s f13, f30, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f28, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x18, 0x9bf7e588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0x756d788d # load x3 with value 0x756d788d
sw x3, 0(x2) # store 0x756d788d in memory
flw f5, 0(x2) # load 0x756d788d from memory into f5
fmsub.s f18, f4, f29, f5, dyn # perform operation
fmsub.s f18, f4, f29, f5, rdn # perform operation
fmsub.s f18, f4, f29, f5, rmm # perform operation
fmsub.s f18, f4, f29, f5, rne # perform operation
fmsub.s f18, f4, f29, f5, rtz # perform operation
fmsub.s f18, f4, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f4, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f4, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f4, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f4, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f4, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x4, 0xa38619f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0xb2f55426 # load x3 with value 0xb2f55426
sw x3, 0(x2) # store 0xb2f55426 in memory
flw f22, 0(x2) # load 0xb2f55426 from memory into f22
fmsub.s f4, f17, f25, f22, dyn # perform operation
fmsub.s f4, f17, f25, f22, rdn # perform operation
fmsub.s f4, f17, f25, f22, rmm # perform operation
fmsub.s f4, f17, f25, f22, rne # perform operation
fmsub.s f4, f17, f25, f22, rtz # perform operation
fmsub.s f4, f17, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f17, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f17, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f17, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f17, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f17, f25, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x16, 0x16509f01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x6933b0c7 # load x3 with value 0x6933b0c7
sw x3, 0(x2) # store 0x6933b0c7 in memory
flw f27, 0(x2) # load 0x6933b0c7 from memory into f27
fmsub.s f16, f30, f26, f27, dyn # perform operation
fmsub.s f16, f30, f26, f27, rdn # perform operation
fmsub.s f16, f30, f26, f27, rmm # perform operation
fmsub.s f16, f30, f26, f27, rne # perform operation
fmsub.s f16, f30, f26, f27, rtz # perform operation
fmsub.s f16, f30, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f30, f26, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x30, 0xecc33f16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x1a634c2a # load x3 with value 0x1a634c2a
sw x3, 0(x2) # store 0x1a634c2a in memory
flw f27, 0(x2) # load 0x1a634c2a from memory into f27
fmsub.s f30, f7, f4, f27, dyn # perform operation
fmsub.s f30, f7, f4, f27, rdn # perform operation
fmsub.s f30, f7, f4, f27, rmm # perform operation
fmsub.s f30, f7, f4, f27, rne # perform operation
fmsub.s f30, f7, f4, f27, rtz # perform operation
fmsub.s f30, f7, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x30, 0x4fd35dbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xf7567d9f # load x3 with value 0xf7567d9f
sw x3, 0(x2) # store 0xf7567d9f in memory
flw f29, 0(x2) # load 0xf7567d9f from memory into f29
fmsub.s f30, f10, f8, f29, dyn # perform operation
fmsub.s f30, f10, f8, f29, rdn # perform operation
fmsub.s f30, f10, f8, f29, rmm # perform operation
fmsub.s f30, f10, f8, f29, rne # perform operation
fmsub.s f30, f10, f8, f29, rtz # perform operation
fmsub.s f30, f10, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x17, 0x27306ec4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0xd4adb38b # load x3 with value 0xd4adb38b
sw x3, 0(x2) # store 0xd4adb38b in memory
flw f12, 0(x2) # load 0xd4adb38b from memory into f12
fmsub.s f17, f5, f29, f12, dyn # perform operation
fmsub.s f17, f5, f29, f12, rdn # perform operation
fmsub.s f17, f5, f29, f12, rmm # perform operation
fmsub.s f17, f5, f29, f12, rne # perform operation
fmsub.s f17, f5, f29, f12, rtz # perform operation
fmsub.s f17, f5, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f5, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f5, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f5, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f5, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f5, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x11, 0xfe5fdf28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x86161673 # load x3 with value 0x86161673
sw x3, 0(x2) # store 0x86161673 in memory
flw f2, 0(x2) # load 0x86161673 from memory into f2
fmsub.s f11, f12, f15, f2, dyn # perform operation
fmsub.s f11, f12, f15, f2, rdn # perform operation
fmsub.s f11, f12, f15, f2, rmm # perform operation
fmsub.s f11, f12, f15, f2, rne # perform operation
fmsub.s f11, f12, f15, f2, rtz # perform operation
fmsub.s f11, f12, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f12, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x16, 0x5598f7d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x7ccb437b # load x3 with value 0x7ccb437b
sw x3, 0(x2) # store 0x7ccb437b in memory
flw f27, 0(x2) # load 0x7ccb437b from memory into f27
fmsub.s f16, f3, f14, f27, dyn # perform operation
fmsub.s f16, f3, f14, f27, rdn # perform operation
fmsub.s f16, f3, f14, f27, rmm # perform operation
fmsub.s f16, f3, f14, f27, rne # perform operation
fmsub.s f16, f3, f14, f27, rtz # perform operation
fmsub.s f16, f3, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x13, 0x31dff0ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xc7df7b63 # load x3 with value 0xc7df7b63
sw x3, 0(x2) # store 0xc7df7b63 in memory
flw f11, 0(x2) # load 0xc7df7b63 from memory into f11
fmsub.s f13, f16, f8, f11, dyn # perform operation
fmsub.s f13, f16, f8, f11, rdn # perform operation
fmsub.s f13, f16, f8, f11, rmm # perform operation
fmsub.s f13, f16, f8, f11, rne # perform operation
fmsub.s f13, f16, f8, f11, rtz # perform operation
fmsub.s f13, f16, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x6, 0xa436c42e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x14c45c70 # load x3 with value 0x14c45c70
sw x3, 0(x2) # store 0x14c45c70 in memory
flw f26, 0(x2) # load 0x14c45c70 from memory into f26
fmsub.s f6, f2, f25, f26, dyn # perform operation
fmsub.s f6, f2, f25, f26, rdn # perform operation
fmsub.s f6, f2, f25, f26, rmm # perform operation
fmsub.s f6, f2, f25, f26, rne # perform operation
fmsub.s f6, f2, f25, f26, rtz # perform operation
fmsub.s f6, f2, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f2, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f2, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x1, 0xe2979868 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0x5764bbd0 # load x3 with value 0x5764bbd0
sw x3, 0(x2) # store 0x5764bbd0 in memory
flw f4, 0(x2) # load 0x5764bbd0 from memory into f4
fmsub.s f1, f19, f11, f4, dyn # perform operation
fmsub.s f1, f19, f11, f4, rdn # perform operation
fmsub.s f1, f19, f11, f4, rmm # perform operation
fmsub.s f1, f19, f11, f4, rne # perform operation
fmsub.s f1, f19, f11, f4, rtz # perform operation
fmsub.s f1, f19, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f19, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f19, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x5, 0xf16dc031 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x926fd325 # load x3 with value 0x926fd325
sw x3, 0(x2) # store 0x926fd325 in memory
flw f16, 0(x2) # load 0x926fd325 from memory into f16
fmsub.s f5, f29, f21, f16, dyn # perform operation
fmsub.s f5, f29, f21, f16, rdn # perform operation
fmsub.s f5, f29, f21, f16, rmm # perform operation
fmsub.s f5, f29, f21, f16, rne # perform operation
fmsub.s f5, f29, f21, f16, rtz # perform operation
fmsub.s f5, f29, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x29, 0x092843cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x2db97669 # load x3 with value 0x2db97669
sw x3, 0(x2) # store 0x2db97669 in memory
flw f2, 0(x2) # load 0x2db97669 from memory into f2
fmsub.s f29, f1, f17, f2, dyn # perform operation
fmsub.s f29, f1, f17, f2, rdn # perform operation
fmsub.s f29, f1, f17, f2, rmm # perform operation
fmsub.s f29, f1, f17, f2, rne # perform operation
fmsub.s f29, f1, f17, f2, rtz # perform operation
fmsub.s f29, f1, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x17, 0xb5f67b04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xa74b2725 # load x3 with value 0xa74b2725
sw x3, 0(x2) # store 0xa74b2725 in memory
flw f10, 0(x2) # load 0xa74b2725 from memory into f10
fmsub.s f17, f27, f2, f10, dyn # perform operation
fmsub.s f17, f27, f2, f10, rdn # perform operation
fmsub.s f17, f27, f2, f10, rmm # perform operation
fmsub.s f17, f27, f2, f10, rne # perform operation
fmsub.s f17, f27, f2, f10, rtz # perform operation
fmsub.s f17, f27, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f27, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f27, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f27, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f27, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f27, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x24, 0xd2c19b41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0x2e70d683 # load x3 with value 0x2e70d683
sw x3, 0(x2) # store 0x2e70d683 in memory
flw f3, 0(x2) # load 0x2e70d683 from memory into f3
fmsub.s f24, f9, f4, f3, dyn # perform operation
fmsub.s f24, f9, f4, f3, rdn # perform operation
fmsub.s f24, f9, f4, f3, rmm # perform operation
fmsub.s f24, f9, f4, f3, rne # perform operation
fmsub.s f24, f9, f4, f3, rtz # perform operation
fmsub.s f24, f9, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f9, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f9, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x19, 0x53cd82b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0xf6c55ae0 # load x3 with value 0xf6c55ae0
sw x3, 0(x2) # store 0xf6c55ae0 in memory
flw f8, 0(x2) # load 0xf6c55ae0 from memory into f8
fmsub.s f19, f4, f11, f8, dyn # perform operation
fmsub.s f19, f4, f11, f8, rdn # perform operation
fmsub.s f19, f4, f11, f8, rmm # perform operation
fmsub.s f19, f4, f11, f8, rne # perform operation
fmsub.s f19, f4, f11, f8, rtz # perform operation
fmsub.s f19, f4, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f4, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x28, 0xd4720c99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x00c5994f # load x3 with value 0x00c5994f
sw x3, 0(x2) # store 0x00c5994f in memory
flw f5, 0(x2) # load 0x00c5994f from memory into f5
fmsub.s f28, f6, f25, f5, dyn # perform operation
fmsub.s f28, f6, f25, f5, rdn # perform operation
fmsub.s f28, f6, f25, f5, rmm # perform operation
fmsub.s f28, f6, f25, f5, rne # perform operation
fmsub.s f28, f6, f25, f5, rtz # perform operation
fmsub.s f28, f6, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f6, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f6, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x15, 0x34e198de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x50825894 # load x3 with value 0x50825894
sw x3, 0(x2) # store 0x50825894 in memory
flw f22, 0(x2) # load 0x50825894 from memory into f22
fmsub.s f15, f17, f18, f22, dyn # perform operation
fmsub.s f15, f17, f18, f22, rdn # perform operation
fmsub.s f15, f17, f18, f22, rmm # perform operation
fmsub.s f15, f17, f18, f22, rne # perform operation
fmsub.s f15, f17, f18, f22, rtz # perform operation
fmsub.s f15, f17, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x8, 0x787c151f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0xe1cabb40 # load x3 with value 0xe1cabb40
sw x3, 0(x2) # store 0xe1cabb40 in memory
flw f1, 0(x2) # load 0xe1cabb40 from memory into f1
fmsub.s f8, f13, f18, f1, dyn # perform operation
fmsub.s f8, f13, f18, f1, rdn # perform operation
fmsub.s f8, f13, f18, f1, rmm # perform operation
fmsub.s f8, f13, f18, f1, rne # perform operation
fmsub.s f8, f13, f18, f1, rtz # perform operation
fmsub.s f8, f13, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f13, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f13, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f13, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f13, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f13, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x1, 0xa78d8eca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0xa557dca9 # load x3 with value 0xa557dca9
sw x3, 0(x2) # store 0xa557dca9 in memory
flw f11, 0(x2) # load 0xa557dca9 from memory into f11
fmsub.s f1, f18, f7, f11, dyn # perform operation
fmsub.s f1, f18, f7, f11, rdn # perform operation
fmsub.s f1, f18, f7, f11, rmm # perform operation
fmsub.s f1, f18, f7, f11, rne # perform operation
fmsub.s f1, f18, f7, f11, rtz # perform operation
fmsub.s f1, f18, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f18, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f18, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x19, 0x20257da0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x5172b2a3 # load x3 with value 0x5172b2a3
sw x3, 0(x2) # store 0x5172b2a3 in memory
flw f21, 0(x2) # load 0x5172b2a3 from memory into f21
fmsub.s f19, f29, f27, f21, dyn # perform operation
fmsub.s f19, f29, f27, f21, rdn # perform operation
fmsub.s f19, f29, f27, f21, rmm # perform operation
fmsub.s f19, f29, f27, f21, rne # perform operation
fmsub.s f19, f29, f27, f21, rtz # perform operation
fmsub.s f19, f29, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f29, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f29, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f29, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f29, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f29, f27, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x23, 0xe912c268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xee869f57 # load x3 with value 0xee869f57
sw x3, 0(x2) # store 0xee869f57 in memory
flw f18, 0(x2) # load 0xee869f57 from memory into f18
fmsub.s f23, f9, f24, f18, dyn # perform operation
fmsub.s f23, f9, f24, f18, rdn # perform operation
fmsub.s f23, f9, f24, f18, rmm # perform operation
fmsub.s f23, f9, f24, f18, rne # perform operation
fmsub.s f23, f9, f24, f18, rtz # perform operation
fmsub.s f23, f9, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f9, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f9, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f9, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f9, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f9, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x10, 0xb35e70b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x6a46eb3b # load x3 with value 0x6a46eb3b
sw x3, 0(x2) # store 0x6a46eb3b in memory
flw f2, 0(x2) # load 0x6a46eb3b from memory into f2
fmsub.s f10, f6, f14, f2, dyn # perform operation
fmsub.s f10, f6, f14, f2, rdn # perform operation
fmsub.s f10, f6, f14, f2, rmm # perform operation
fmsub.s f10, f6, f14, f2, rne # perform operation
fmsub.s f10, f6, f14, f2, rtz # perform operation
fmsub.s f10, f6, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f6, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x17, 0x926fb87a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x81f78238 # load x3 with value 0x81f78238
sw x3, 0(x2) # store 0x81f78238 in memory
flw f8, 0(x2) # load 0x81f78238 from memory into f8
fmsub.s f17, f20, f15, f8, dyn # perform operation
fmsub.s f17, f20, f15, f8, rdn # perform operation
fmsub.s f17, f20, f15, f8, rmm # perform operation
fmsub.s f17, f20, f15, f8, rne # perform operation
fmsub.s f17, f20, f15, f8, rtz # perform operation
fmsub.s f17, f20, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f20, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x28, 0xf45c9d3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x8e47fd17 # load x3 with value 0x8e47fd17
sw x3, 0(x2) # store 0x8e47fd17 in memory
flw f1, 0(x2) # load 0x8e47fd17 from memory into f1
fmsub.s f28, f8, f27, f1, dyn # perform operation
fmsub.s f28, f8, f27, f1, rdn # perform operation
fmsub.s f28, f8, f27, f1, rmm # perform operation
fmsub.s f28, f8, f27, f1, rne # perform operation
fmsub.s f28, f8, f27, f1, rtz # perform operation
fmsub.s f28, f8, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f8, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f8, f27, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x8, 0xf8d91e11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x27fa223a # load x3 with value 0x27fa223a
sw x3, 0(x2) # store 0x27fa223a in memory
flw f31, 0(x2) # load 0x27fa223a from memory into f31
fmsub.s f8, f16, f17, f31, dyn # perform operation
fmsub.s f8, f16, f17, f31, rdn # perform operation
fmsub.s f8, f16, f17, f31, rmm # perform operation
fmsub.s f8, f16, f17, f31, rne # perform operation
fmsub.s f8, f16, f17, f31, rtz # perform operation
fmsub.s f8, f16, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x1, 0x5bee3530 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0xe1683f41 # load x3 with value 0xe1683f41
sw x3, 0(x2) # store 0xe1683f41 in memory
flw f6, 0(x2) # load 0xe1683f41 from memory into f6
fmsub.s f1, f28, f5, f6, dyn # perform operation
fmsub.s f1, f28, f5, f6, rdn # perform operation
fmsub.s f1, f28, f5, f6, rmm # perform operation
fmsub.s f1, f28, f5, f6, rne # perform operation
fmsub.s f1, f28, f5, f6, rtz # perform operation
fmsub.s f1, f28, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x17, 0x059fda2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x7e284ad0 # load x3 with value 0x7e284ad0
sw x3, 0(x2) # store 0x7e284ad0 in memory
flw f5, 0(x2) # load 0x7e284ad0 from memory into f5
fmsub.s f17, f2, f15, f5, dyn # perform operation
fmsub.s f17, f2, f15, f5, rdn # perform operation
fmsub.s f17, f2, f15, f5, rmm # perform operation
fmsub.s f17, f2, f15, f5, rne # perform operation
fmsub.s f17, f2, f15, f5, rtz # perform operation
fmsub.s f17, f2, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x21, 0x2fe89a59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x89c39392 # load x3 with value 0x89c39392
sw x3, 0(x2) # store 0x89c39392 in memory
flw f10, 0(x2) # load 0x89c39392 from memory into f10
fmsub.s f21, f29, f2, f10, dyn # perform operation
fmsub.s f21, f29, f2, f10, rdn # perform operation
fmsub.s f21, f29, f2, f10, rmm # perform operation
fmsub.s f21, f29, f2, f10, rne # perform operation
fmsub.s f21, f29, f2, f10, rtz # perform operation
fmsub.s f21, f29, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f29, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f29, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x31, 0xb70dd863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0xb0f19777 # load x3 with value 0xb0f19777
sw x3, 0(x2) # store 0xb0f19777 in memory
flw f7, 0(x2) # load 0xb0f19777 from memory into f7
fmsub.s f31, f29, f13, f7, dyn # perform operation
fmsub.s f31, f29, f13, f7, rdn # perform operation
fmsub.s f31, f29, f13, f7, rmm # perform operation
fmsub.s f31, f29, f13, f7, rne # perform operation
fmsub.s f31, f29, f13, f7, rtz # perform operation
fmsub.s f31, f29, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f29, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f29, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x12, 0xdbf99ee1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x3e203ea6 # load x3 with value 0x3e203ea6
sw x3, 0(x2) # store 0x3e203ea6 in memory
flw f17, 0(x2) # load 0x3e203ea6 from memory into f17
fmsub.s f12, f10, f26, f17, dyn # perform operation
fmsub.s f12, f10, f26, f17, rdn # perform operation
fmsub.s f12, f10, f26, f17, rmm # perform operation
fmsub.s f12, f10, f26, f17, rne # perform operation
fmsub.s f12, f10, f26, f17, rtz # perform operation
fmsub.s f12, f10, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f10, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x7, 0xc27eda3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x452499ee # load x3 with value 0x452499ee
sw x3, 0(x2) # store 0x452499ee in memory
flw f10, 0(x2) # load 0x452499ee from memory into f10
fmsub.s f7, f16, f17, f10, dyn # perform operation
fmsub.s f7, f16, f17, f10, rdn # perform operation
fmsub.s f7, f16, f17, f10, rmm # perform operation
fmsub.s f7, f16, f17, f10, rne # perform operation
fmsub.s f7, f16, f17, f10, rtz # perform operation
fmsub.s f7, f16, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f16, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f16, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x21, 0xad3d7b98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x1609fb19 # load x3 with value 0x1609fb19
sw x3, 0(x2) # store 0x1609fb19 in memory
flw f5, 0(x2) # load 0x1609fb19 from memory into f5
fmsub.s f21, f30, f13, f5, dyn # perform operation
fmsub.s f21, f30, f13, f5, rdn # perform operation
fmsub.s f21, f30, f13, f5, rmm # perform operation
fmsub.s f21, f30, f13, f5, rne # perform operation
fmsub.s f21, f30, f13, f5, rtz # perform operation
fmsub.s f21, f30, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x25, 0x4bb08467 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x1c0628d2 # load x3 with value 0x1c0628d2
sw x3, 0(x2) # store 0x1c0628d2 in memory
flw f17, 0(x2) # load 0x1c0628d2 from memory into f17
fmsub.s f25, f23, f28, f17, dyn # perform operation
fmsub.s f25, f23, f28, f17, rdn # perform operation
fmsub.s f25, f23, f28, f17, rmm # perform operation
fmsub.s f25, f23, f28, f17, rne # perform operation
fmsub.s f25, f23, f28, f17, rtz # perform operation
fmsub.s f25, f23, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f28, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x16, 0x7d93b9c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x071858a8 # load x3 with value 0x071858a8
sw x3, 0(x2) # store 0x071858a8 in memory
flw f24, 0(x2) # load 0x071858a8 from memory into f24
fmsub.s f16, f1, f4, f24, dyn # perform operation
fmsub.s f16, f1, f4, f24, rdn # perform operation
fmsub.s f16, f1, f4, f24, rmm # perform operation
fmsub.s f16, f1, f4, f24, rne # perform operation
fmsub.s f16, f1, f4, f24, rtz # perform operation
fmsub.s f16, f1, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f1, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f1, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f1, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f1, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f1, f4, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x30, 0x21b3c037 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xf887e4b3 # load x3 with value 0xf887e4b3
sw x3, 0(x2) # store 0xf887e4b3 in memory
flw f13, 0(x2) # load 0xf887e4b3 from memory into f13
fmsub.s f30, f29, f28, f13, dyn # perform operation
fmsub.s f30, f29, f28, f13, rdn # perform operation
fmsub.s f30, f29, f28, f13, rmm # perform operation
fmsub.s f30, f29, f28, f13, rne # perform operation
fmsub.s f30, f29, f28, f13, rtz # perform operation
fmsub.s f30, f29, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f29, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f29, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f29, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f29, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f29, f28, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x15, 0xee12d8b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xffe36cd5 # load x3 with value 0xffe36cd5
sw x3, 0(x2) # store 0xffe36cd5 in memory
flw f9, 0(x2) # load 0xffe36cd5 from memory into f9
fmsub.s f15, f23, f25, f9, dyn # perform operation
fmsub.s f15, f23, f25, f9, rdn # perform operation
fmsub.s f15, f23, f25, f9, rmm # perform operation
fmsub.s f15, f23, f25, f9, rne # perform operation
fmsub.s f15, f23, f25, f9, rtz # perform operation
fmsub.s f15, f23, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x20, 0x59fc1e14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x7287298f # load x3 with value 0x7287298f
sw x3, 0(x2) # store 0x7287298f in memory
flw f13, 0(x2) # load 0x7287298f from memory into f13
fmsub.s f20, f29, f1, f13, dyn # perform operation
fmsub.s f20, f29, f1, f13, rdn # perform operation
fmsub.s f20, f29, f1, f13, rmm # perform operation
fmsub.s f20, f29, f1, f13, rne # perform operation
fmsub.s f20, f29, f1, f13, rtz # perform operation
fmsub.s f20, f29, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f1, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x18, 0x8b236ac2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xb295a039 # load x3 with value 0xb295a039
sw x3, 0(x2) # store 0xb295a039 in memory
flw f15, 0(x2) # load 0xb295a039 from memory into f15
fmsub.s f18, f7, f11, f15, dyn # perform operation
fmsub.s f18, f7, f11, f15, rdn # perform operation
fmsub.s f18, f7, f11, f15, rmm # perform operation
fmsub.s f18, f7, f11, f15, rne # perform operation
fmsub.s f18, f7, f11, f15, rtz # perform operation
fmsub.s f18, f7, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f11, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x3, 0xe2612f6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xe54513c2 # load x3 with value 0xe54513c2
sw x3, 0(x2) # store 0xe54513c2 in memory
flw f9, 0(x2) # load 0xe54513c2 from memory into f9
fmsub.s f3, f28, f25, f9, dyn # perform operation
fmsub.s f3, f28, f25, f9, rdn # perform operation
fmsub.s f3, f28, f25, f9, rmm # perform operation
fmsub.s f3, f28, f25, f9, rne # perform operation
fmsub.s f3, f28, f25, f9, rtz # perform operation
fmsub.s f3, f28, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f28, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f28, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f28, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f28, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f28, f25, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x2, 0x827ffd6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xb3ffced2 # load x3 with value 0xb3ffced2
sw x3, 0(x2) # store 0xb3ffced2 in memory
flw f26, 0(x2) # load 0xb3ffced2 from memory into f26
fmsub.s f2, f14, f3, f26, dyn # perform operation
fmsub.s f2, f14, f3, f26, rdn # perform operation
fmsub.s f2, f14, f3, f26, rmm # perform operation
fmsub.s f2, f14, f3, f26, rne # perform operation
fmsub.s f2, f14, f3, f26, rtz # perform operation
fmsub.s f2, f14, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x17, 0x63f4e312 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x9e79d124 # load x3 with value 0x9e79d124
sw x3, 0(x2) # store 0x9e79d124 in memory
flw f11, 0(x2) # load 0x9e79d124 from memory into f11
fmsub.s f17, f22, f20, f11, dyn # perform operation
fmsub.s f17, f22, f20, f11, rdn # perform operation
fmsub.s f17, f22, f20, f11, rmm # perform operation
fmsub.s f17, f22, f20, f11, rne # perform operation
fmsub.s f17, f22, f20, f11, rtz # perform operation
fmsub.s f17, f22, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x10, 0xa04965b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xad3ffdb2 # load x3 with value 0xad3ffdb2
sw x3, 0(x2) # store 0xad3ffdb2 in memory
flw f4, 0(x2) # load 0xad3ffdb2 from memory into f4
fmsub.s f10, f7, f9, f4, dyn # perform operation
fmsub.s f10, f7, f9, f4, rdn # perform operation
fmsub.s f10, f7, f9, f4, rmm # perform operation
fmsub.s f10, f7, f9, f4, rne # perform operation
fmsub.s f10, f7, f9, f4, rtz # perform operation
fmsub.s f10, f7, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f7, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f7, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f7, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f7, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f7, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x28, 0x015ddd64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0xe2a93184 # load x3 with value 0xe2a93184
sw x3, 0(x2) # store 0xe2a93184 in memory
flw f31, 0(x2) # load 0xe2a93184 from memory into f31
fmsub.s f28, f9, f14, f31, dyn # perform operation
fmsub.s f28, f9, f14, f31, rdn # perform operation
fmsub.s f28, f9, f14, f31, rmm # perform operation
fmsub.s f28, f9, f14, f31, rne # perform operation
fmsub.s f28, f9, f14, f31, rtz # perform operation
fmsub.s f28, f9, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f9, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x5, 0xbd8270b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x4d101991 # load x3 with value 0x4d101991
sw x3, 0(x2) # store 0x4d101991 in memory
flw f28, 0(x2) # load 0x4d101991 from memory into f28
fmsub.s f5, f29, f30, f28, dyn # perform operation
fmsub.s f5, f29, f30, f28, rdn # perform operation
fmsub.s f5, f29, f30, f28, rmm # perform operation
fmsub.s f5, f29, f30, f28, rne # perform operation
fmsub.s f5, f29, f30, f28, rtz # perform operation
fmsub.s f5, f29, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f29, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x29, 0xbcff2045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xdb18a9bd # load x3 with value 0xdb18a9bd
sw x3, 0(x2) # store 0xdb18a9bd in memory
flw f25, 0(x2) # load 0xdb18a9bd from memory into f25
fmsub.s f29, f15, f9, f25, dyn # perform operation
fmsub.s f29, f15, f9, f25, rdn # perform operation
fmsub.s f29, f15, f9, f25, rmm # perform operation
fmsub.s f29, f15, f9, f25, rne # perform operation
fmsub.s f29, f15, f9, f25, rtz # perform operation
fmsub.s f29, f15, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f15, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x7, 0xb0c7a7f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x36e0f3c4 # load x3 with value 0x36e0f3c4
sw x3, 0(x2) # store 0x36e0f3c4 in memory
flw f3, 0(x2) # load 0x36e0f3c4 from memory into f3
fmsub.s f7, f26, f29, f3, dyn # perform operation
fmsub.s f7, f26, f29, f3, rdn # perform operation
fmsub.s f7, f26, f29, f3, rmm # perform operation
fmsub.s f7, f26, f29, f3, rne # perform operation
fmsub.s f7, f26, f29, f3, rtz # perform operation
fmsub.s f7, f26, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x24, 0x5729a621 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xff50a392 # load x3 with value 0xff50a392
sw x3, 0(x2) # store 0xff50a392 in memory
flw f10, 0(x2) # load 0xff50a392 from memory into f10
fmsub.s f24, f11, f21, f10, dyn # perform operation
fmsub.s f24, f11, f21, f10, rdn # perform operation
fmsub.s f24, f11, f21, f10, rmm # perform operation
fmsub.s f24, f11, f21, f10, rne # perform operation
fmsub.s f24, f11, f21, f10, rtz # perform operation
fmsub.s f24, f11, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x23, 0x5639edab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x3a6b66db # load x3 with value 0x3a6b66db
sw x3, 0(x2) # store 0x3a6b66db in memory
flw f26, 0(x2) # load 0x3a6b66db from memory into f26
fmsub.s f23, f3, f18, f26, dyn # perform operation
fmsub.s f23, f3, f18, f26, rdn # perform operation
fmsub.s f23, f3, f18, f26, rmm # perform operation
fmsub.s f23, f3, f18, f26, rne # perform operation
fmsub.s f23, f3, f18, f26, rtz # perform operation
fmsub.s f23, f3, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f3, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x25, 0x3efe029f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xbbdbe55c # load x3 with value 0xbbdbe55c
sw x3, 0(x2) # store 0xbbdbe55c in memory
flw f24, 0(x2) # load 0xbbdbe55c from memory into f24
fmsub.s f25, f18, f20, f24, dyn # perform operation
fmsub.s f25, f18, f20, f24, rdn # perform operation
fmsub.s f25, f18, f20, f24, rmm # perform operation
fmsub.s f25, f18, f20, f24, rne # perform operation
fmsub.s f25, f18, f20, f24, rtz # perform operation
fmsub.s f25, f18, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x13, 0xde4cf22e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xe8adb93e # load x3 with value 0xe8adb93e
sw x3, 0(x2) # store 0xe8adb93e in memory
flw f14, 0(x2) # load 0xe8adb93e from memory into f14
fmsub.s f13, f19, f9, f14, dyn # perform operation
fmsub.s f13, f19, f9, f14, rdn # perform operation
fmsub.s f13, f19, f9, f14, rmm # perform operation
fmsub.s f13, f19, f9, f14, rne # perform operation
fmsub.s f13, f19, f9, f14, rtz # perform operation
fmsub.s f13, f19, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f19, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f19, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x21, 0x3f3e4a46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xeca99c51 # load x3 with value 0xeca99c51
sw x3, 0(x2) # store 0xeca99c51 in memory
flw f29, 0(x2) # load 0xeca99c51 from memory into f29
fmsub.s f21, f27, f18, f29, dyn # perform operation
fmsub.s f21, f27, f18, f29, rdn # perform operation
fmsub.s f21, f27, f18, f29, rmm # perform operation
fmsub.s f21, f27, f18, f29, rne # perform operation
fmsub.s f21, f27, f18, f29, rtz # perform operation
fmsub.s f21, f27, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f27, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f27, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x17, 0x497d6e8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x39a290f2 # load x3 with value 0x39a290f2
sw x3, 0(x2) # store 0x39a290f2 in memory
flw f4, 0(x2) # load 0x39a290f2 from memory into f4
fmsub.s f17, f3, f20, f4, dyn # perform operation
fmsub.s f17, f3, f20, f4, rdn # perform operation
fmsub.s f17, f3, f20, f4, rmm # perform operation
fmsub.s f17, f3, f20, f4, rne # perform operation
fmsub.s f17, f3, f20, f4, rtz # perform operation
fmsub.s f17, f3, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x15, 0x4033adc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x478974ed # load x3 with value 0x478974ed
sw x3, 0(x2) # store 0x478974ed in memory
flw f16, 0(x2) # load 0x478974ed from memory into f16
fmsub.s f15, f28, f4, f16, dyn # perform operation
fmsub.s f15, f28, f4, f16, rdn # perform operation
fmsub.s f15, f28, f4, f16, rmm # perform operation
fmsub.s f15, f28, f4, f16, rne # perform operation
fmsub.s f15, f28, f4, f16, rtz # perform operation
fmsub.s f15, f28, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x1, 0x5e6ac991 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x28ce0c6d # load x3 with value 0x28ce0c6d
sw x3, 0(x2) # store 0x28ce0c6d in memory
flw f31, 0(x2) # load 0x28ce0c6d from memory into f31
fmsub.s f1, f27, f3, f31, dyn # perform operation
fmsub.s f1, f27, f3, f31, rdn # perform operation
fmsub.s f1, f27, f3, f31, rmm # perform operation
fmsub.s f1, f27, f3, f31, rne # perform operation
fmsub.s f1, f27, f3, f31, rtz # perform operation
fmsub.s f1, f27, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f27, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f27, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x23, 0xb97e3549 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x2ebbc001 # load x3 with value 0x2ebbc001
sw x3, 0(x2) # store 0x2ebbc001 in memory
flw f3, 0(x2) # load 0x2ebbc001 from memory into f3
fmsub.s f23, f22, f8, f3, dyn # perform operation
fmsub.s f23, f22, f8, f3, rdn # perform operation
fmsub.s f23, f22, f8, f3, rmm # perform operation
fmsub.s f23, f22, f8, f3, rne # perform operation
fmsub.s f23, f22, f8, f3, rtz # perform operation
fmsub.s f23, f22, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f22, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f22, f8, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x29, 0x9e68f9d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xd8793825 # load x3 with value 0xd8793825
sw x3, 0(x2) # store 0xd8793825 in memory
flw f7, 0(x2) # load 0xd8793825 from memory into f7
fmsub.s f29, f8, f17, f7, dyn # perform operation
fmsub.s f29, f8, f17, f7, rdn # perform operation
fmsub.s f29, f8, f17, f7, rmm # perform operation
fmsub.s f29, f8, f17, f7, rne # perform operation
fmsub.s f29, f8, f17, f7, rtz # perform operation
fmsub.s f29, f8, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x11, 0xd45446c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x5e0d1ca9 # load x3 with value 0x5e0d1ca9
sw x3, 0(x2) # store 0x5e0d1ca9 in memory
flw f2, 0(x2) # load 0x5e0d1ca9 from memory into f2
fmsub.s f11, f14, f13, f2, dyn # perform operation
fmsub.s f11, f14, f13, f2, rdn # perform operation
fmsub.s f11, f14, f13, f2, rmm # perform operation
fmsub.s f11, f14, f13, f2, rne # perform operation
fmsub.s f11, f14, f13, f2, rtz # perform operation
fmsub.s f11, f14, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x30, 0xc1499dd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0xd92ca875 # load x3 with value 0xd92ca875
sw x3, 0(x2) # store 0xd92ca875 in memory
flw f10, 0(x2) # load 0xd92ca875 from memory into f10
fmsub.s f30, f27, f17, f10, dyn # perform operation
fmsub.s f30, f27, f17, f10, rdn # perform operation
fmsub.s f30, f27, f17, f10, rmm # perform operation
fmsub.s f30, f27, f17, f10, rne # perform operation
fmsub.s f30, f27, f17, f10, rtz # perform operation
fmsub.s f30, f27, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x8, 0xc4f63a8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xf9e29b0a # load x3 with value 0xf9e29b0a
sw x3, 0(x2) # store 0xf9e29b0a in memory
flw f20, 0(x2) # load 0xf9e29b0a from memory into f20
fmsub.s f8, f16, f3, f20, dyn # perform operation
fmsub.s f8, f16, f3, f20, rdn # perform operation
fmsub.s f8, f16, f3, f20, rmm # perform operation
fmsub.s f8, f16, f3, f20, rne # perform operation
fmsub.s f8, f16, f3, f20, rtz # perform operation
fmsub.s f8, f16, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x15, 0x3c543a8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x06cab44b # load x3 with value 0x06cab44b
sw x3, 0(x2) # store 0x06cab44b in memory
flw f5, 0(x2) # load 0x06cab44b from memory into f5
fmsub.s f15, f2, f25, f5, dyn # perform operation
fmsub.s f15, f2, f25, f5, rdn # perform operation
fmsub.s f15, f2, f25, f5, rmm # perform operation
fmsub.s f15, f2, f25, f5, rne # perform operation
fmsub.s f15, f2, f25, f5, rtz # perform operation
fmsub.s f15, f2, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x16, 0x407d757b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x52327b05 # load x3 with value 0x52327b05
sw x3, 0(x2) # store 0x52327b05 in memory
flw f3, 0(x2) # load 0x52327b05 from memory into f3
fmsub.s f16, f26, f27, f3, dyn # perform operation
fmsub.s f16, f26, f27, f3, rdn # perform operation
fmsub.s f16, f26, f27, f3, rmm # perform operation
fmsub.s f16, f26, f27, f3, rne # perform operation
fmsub.s f16, f26, f27, f3, rtz # perform operation
fmsub.s f16, f26, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f27, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x1, 0x316934a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0xcbe808d2 # load x3 with value 0xcbe808d2
sw x3, 0(x2) # store 0xcbe808d2 in memory
flw f5, 0(x2) # load 0xcbe808d2 from memory into f5
fmsub.s f1, f4, f9, f5, dyn # perform operation
fmsub.s f1, f4, f9, f5, rdn # perform operation
fmsub.s f1, f4, f9, f5, rmm # perform operation
fmsub.s f1, f4, f9, f5, rne # perform operation
fmsub.s f1, f4, f9, f5, rtz # perform operation
fmsub.s f1, f4, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f4, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x5, 0x94f88b91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x69487569 # load x3 with value 0x69487569
sw x3, 0(x2) # store 0x69487569 in memory
flw f19, 0(x2) # load 0x69487569 from memory into f19
fmsub.s f5, f21, f18, f19, dyn # perform operation
fmsub.s f5, f21, f18, f19, rdn # perform operation
fmsub.s f5, f21, f18, f19, rmm # perform operation
fmsub.s f5, f21, f18, f19, rne # perform operation
fmsub.s f5, f21, f18, f19, rtz # perform operation
fmsub.s f5, f21, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x17, 0xecb2a9ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0x9f3871ef # load x3 with value 0x9f3871ef
sw x3, 0(x2) # store 0x9f3871ef in memory
flw f21, 0(x2) # load 0x9f3871ef from memory into f21
fmsub.s f17, f4, f19, f21, dyn # perform operation
fmsub.s f17, f4, f19, f21, rdn # perform operation
fmsub.s f17, f4, f19, f21, rmm # perform operation
fmsub.s f17, f4, f19, f21, rne # perform operation
fmsub.s f17, f4, f19, f21, rtz # perform operation
fmsub.s f17, f4, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f4, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f4, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f4, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f4, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f4, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x30, 0xeb47e893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x7b6cd9f0 # load x3 with value 0x7b6cd9f0
sw x3, 0(x2) # store 0x7b6cd9f0 in memory
flw f16, 0(x2) # load 0x7b6cd9f0 from memory into f16
fmsub.s f30, f21, f13, f16, dyn # perform operation
fmsub.s f30, f21, f13, f16, rdn # perform operation
fmsub.s f30, f21, f13, f16, rmm # perform operation
fmsub.s f30, f21, f13, f16, rne # perform operation
fmsub.s f30, f21, f13, f16, rtz # perform operation
fmsub.s f30, f21, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x2, 0x7b97268c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xb6996cca # load x3 with value 0xb6996cca
sw x3, 0(x2) # store 0xb6996cca in memory
flw f1, 0(x2) # load 0xb6996cca from memory into f1
fmsub.s f2, f7, f3, f1, dyn # perform operation
fmsub.s f2, f7, f3, f1, rdn # perform operation
fmsub.s f2, f7, f3, f1, rmm # perform operation
fmsub.s f2, f7, f3, f1, rne # perform operation
fmsub.s f2, f7, f3, f1, rtz # perform operation
fmsub.s f2, f7, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x18, 0x3677b061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x02f3e5ea # load x3 with value 0x02f3e5ea
sw x3, 0(x2) # store 0x02f3e5ea in memory
flw f3, 0(x2) # load 0x02f3e5ea from memory into f3
fmsub.s f18, f9, f28, f3, dyn # perform operation
fmsub.s f18, f9, f28, f3, rdn # perform operation
fmsub.s f18, f9, f28, f3, rmm # perform operation
fmsub.s f18, f9, f28, f3, rne # perform operation
fmsub.s f18, f9, f28, f3, rtz # perform operation
fmsub.s f18, f9, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x11, 0x8cde9efe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x9b2502a8 # load x3 with value 0x9b2502a8
sw x3, 0(x2) # store 0x9b2502a8 in memory
flw f16, 0(x2) # load 0x9b2502a8 from memory into f16
fmsub.s f11, f9, f21, f16, dyn # perform operation
fmsub.s f11, f9, f21, f16, rdn # perform operation
fmsub.s f11, f9, f21, f16, rmm # perform operation
fmsub.s f11, f9, f21, f16, rne # perform operation
fmsub.s f11, f9, f21, f16, rtz # perform operation
fmsub.s f11, f9, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x25, 0xa7a9ac4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x350abd22 # load x3 with value 0x350abd22
sw x3, 0(x2) # store 0x350abd22 in memory
flw f21, 0(x2) # load 0x350abd22 from memory into f21
fmsub.s f25, f10, f30, f21, dyn # perform operation
fmsub.s f25, f10, f30, f21, rdn # perform operation
fmsub.s f25, f10, f30, f21, rmm # perform operation
fmsub.s f25, f10, f30, f21, rne # perform operation
fmsub.s f25, f10, f30, f21, rtz # perform operation
fmsub.s f25, f10, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x17, 0x7bbf95e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x4598c35e # load x3 with value 0x4598c35e
sw x3, 0(x2) # store 0x4598c35e in memory
flw f27, 0(x2) # load 0x4598c35e from memory into f27
fmsub.s f17, f15, f3, f27, dyn # perform operation
fmsub.s f17, f15, f3, f27, rdn # perform operation
fmsub.s f17, f15, f3, f27, rmm # perform operation
fmsub.s f17, f15, f3, f27, rne # perform operation
fmsub.s f17, f15, f3, f27, rtz # perform operation
fmsub.s f17, f15, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f3, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x3, 0xe4a2ac78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0xf798a37f # load x3 with value 0xf798a37f
sw x3, 0(x2) # store 0xf798a37f in memory
flw f14, 0(x2) # load 0xf798a37f from memory into f14
fmsub.s f3, f20, f15, f14, dyn # perform operation
fmsub.s f3, f20, f15, f14, rdn # perform operation
fmsub.s f3, f20, f15, f14, rmm # perform operation
fmsub.s f3, f20, f15, f14, rne # perform operation
fmsub.s f3, f20, f15, f14, rtz # perform operation
fmsub.s f3, f20, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f20, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f20, f15, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x20, 0x5427fbe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x5d731994 # load x3 with value 0x5d731994
sw x3, 0(x2) # store 0x5d731994 in memory
flw f2, 0(x2) # load 0x5d731994 from memory into f2
fmsub.s f20, f14, f1, f2, dyn # perform operation
fmsub.s f20, f14, f1, f2, rdn # perform operation
fmsub.s f20, f14, f1, f2, rmm # perform operation
fmsub.s f20, f14, f1, f2, rne # perform operation
fmsub.s f20, f14, f1, f2, rtz # perform operation
fmsub.s f20, f14, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f14, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f14, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f14, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f14, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f14, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x15, 0xc2e394ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xc8ad3da2 # load x3 with value 0xc8ad3da2
sw x3, 0(x2) # store 0xc8ad3da2 in memory
flw f3, 0(x2) # load 0xc8ad3da2 from memory into f3
fmsub.s f15, f29, f22, f3, dyn # perform operation
fmsub.s f15, f29, f22, f3, rdn # perform operation
fmsub.s f15, f29, f22, f3, rmm # perform operation
fmsub.s f15, f29, f22, f3, rne # perform operation
fmsub.s f15, f29, f22, f3, rtz # perform operation
fmsub.s f15, f29, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f29, f22, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x16, 0x8db9640a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x1e2ef8dd # load x3 with value 0x1e2ef8dd
sw x3, 0(x2) # store 0x1e2ef8dd in memory
flw f9, 0(x2) # load 0x1e2ef8dd from memory into f9
fmsub.s f16, f28, f22, f9, dyn # perform operation
fmsub.s f16, f28, f22, f9, rdn # perform operation
fmsub.s f16, f28, f22, f9, rmm # perform operation
fmsub.s f16, f28, f22, f9, rne # perform operation
fmsub.s f16, f28, f22, f9, rtz # perform operation
fmsub.s f16, f28, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x5, 0xba10a6d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xa3c8d7bb # load x3 with value 0xa3c8d7bb
sw x3, 0(x2) # store 0xa3c8d7bb in memory
flw f12, 0(x2) # load 0xa3c8d7bb from memory into f12
fmsub.s f5, f15, f2, f12, dyn # perform operation
fmsub.s f5, f15, f2, f12, rdn # perform operation
fmsub.s f5, f15, f2, f12, rmm # perform operation
fmsub.s f5, f15, f2, f12, rne # perform operation
fmsub.s f5, f15, f2, f12, rtz # perform operation
fmsub.s f5, f15, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x8, 0xcf1c14f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x0e6d1dbb # load x3 with value 0x0e6d1dbb
sw x3, 0(x2) # store 0x0e6d1dbb in memory
flw f4, 0(x2) # load 0x0e6d1dbb from memory into f4
fmsub.s f8, f19, f25, f4, dyn # perform operation
fmsub.s f8, f19, f25, f4, rdn # perform operation
fmsub.s f8, f19, f25, f4, rmm # perform operation
fmsub.s f8, f19, f25, f4, rne # perform operation
fmsub.s f8, f19, f25, f4, rtz # perform operation
fmsub.s f8, f19, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x3, 0x1d28311b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xd0aad8fa # load x3 with value 0xd0aad8fa
sw x3, 0(x2) # store 0xd0aad8fa in memory
flw f21, 0(x2) # load 0xd0aad8fa from memory into f21
fmsub.s f3, f29, f6, f21, dyn # perform operation
fmsub.s f3, f29, f6, f21, rdn # perform operation
fmsub.s f3, f29, f6, f21, rmm # perform operation
fmsub.s f3, f29, f6, f21, rne # perform operation
fmsub.s f3, f29, f6, f21, rtz # perform operation
fmsub.s f3, f29, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x15, 0xa45488cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0xfb5c1461 # load x3 with value 0xfb5c1461
sw x3, 0(x2) # store 0xfb5c1461 in memory
flw f11, 0(x2) # load 0xfb5c1461 from memory into f11
fmsub.s f15, f28, f26, f11, dyn # perform operation
fmsub.s f15, f28, f26, f11, rdn # perform operation
fmsub.s f15, f28, f26, f11, rmm # perform operation
fmsub.s f15, f28, f26, f11, rne # perform operation
fmsub.s f15, f28, f26, f11, rtz # perform operation
fmsub.s f15, f28, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x17, 0x4aeea6a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xef1eea55 # load x3 with value 0xef1eea55
sw x3, 0(x2) # store 0xef1eea55 in memory
flw f2, 0(x2) # load 0xef1eea55 from memory into f2
fmsub.s f17, f13, f31, f2, dyn # perform operation
fmsub.s f17, f13, f31, f2, rdn # perform operation
fmsub.s f17, f13, f31, f2, rmm # perform operation
fmsub.s f17, f13, f31, f2, rne # perform operation
fmsub.s f17, f13, f31, f2, rtz # perform operation
fmsub.s f17, f13, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x31, 0x2834b9dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x311347b1 # load x3 with value 0x311347b1
sw x3, 0(x2) # store 0x311347b1 in memory
flw f13, 0(x2) # load 0x311347b1 from memory into f13
fmsub.s f31, f14, f25, f13, dyn # perform operation
fmsub.s f31, f14, f25, f13, rdn # perform operation
fmsub.s f31, f14, f25, f13, rmm # perform operation
fmsub.s f31, f14, f25, f13, rne # perform operation
fmsub.s f31, f14, f25, f13, rtz # perform operation
fmsub.s f31, f14, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x1, 0x81124653 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x1c0e78e3 # load x3 with value 0x1c0e78e3
sw x3, 0(x2) # store 0x1c0e78e3 in memory
flw f12, 0(x2) # load 0x1c0e78e3 from memory into f12
fmsub.s f1, f31, f29, f12, dyn # perform operation
fmsub.s f1, f31, f29, f12, rdn # perform operation
fmsub.s f1, f31, f29, f12, rmm # perform operation
fmsub.s f1, f31, f29, f12, rne # perform operation
fmsub.s f1, f31, f29, f12, rtz # perform operation
fmsub.s f1, f31, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f31, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f31, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x22, 0xee8ac51d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xabc1e080 # load x3 with value 0xabc1e080
sw x3, 0(x2) # store 0xabc1e080 in memory
flw f6, 0(x2) # load 0xabc1e080 from memory into f6
fmsub.s f22, f9, f26, f6, dyn # perform operation
fmsub.s f22, f9, f26, f6, rdn # perform operation
fmsub.s f22, f9, f26, f6, rmm # perform operation
fmsub.s f22, f9, f26, f6, rne # perform operation
fmsub.s f22, f9, f26, f6, rtz # perform operation
fmsub.s f22, f9, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x28, 0xa4da349c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xeb17995a # load x3 with value 0xeb17995a
sw x3, 0(x2) # store 0xeb17995a in memory
flw f11, 0(x2) # load 0xeb17995a from memory into f11
fmsub.s f28, f22, f7, f11, dyn # perform operation
fmsub.s f28, f22, f7, f11, rdn # perform operation
fmsub.s f28, f22, f7, f11, rmm # perform operation
fmsub.s f28, f22, f7, f11, rne # perform operation
fmsub.s f28, f22, f7, f11, rtz # perform operation
fmsub.s f28, f22, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f22, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x19, 0x6d8b80b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x35b9dccc # load x3 with value 0x35b9dccc
sw x3, 0(x2) # store 0x35b9dccc in memory
flw f1, 0(x2) # load 0x35b9dccc from memory into f1
fmsub.s f19, f24, f30, f1, dyn # perform operation
fmsub.s f19, f24, f30, f1, rdn # perform operation
fmsub.s f19, f24, f30, f1, rmm # perform operation
fmsub.s f19, f24, f30, f1, rne # perform operation
fmsub.s f19, f24, f30, f1, rtz # perform operation
fmsub.s f19, f24, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f24, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f24, f30, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x28, 0x7c0f9311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xf3c52873 # load x3 with value 0xf3c52873
sw x3, 0(x2) # store 0xf3c52873 in memory
flw f23, 0(x2) # load 0xf3c52873 from memory into f23
fmsub.s f28, f1, f30, f23, dyn # perform operation
fmsub.s f28, f1, f30, f23, rdn # perform operation
fmsub.s f28, f1, f30, f23, rmm # perform operation
fmsub.s f28, f1, f30, f23, rne # perform operation
fmsub.s f28, f1, f30, f23, rtz # perform operation
fmsub.s f28, f1, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x14, 0x580e28f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x11166f47 # load x3 with value 0x11166f47
sw x3, 0(x2) # store 0x11166f47 in memory
flw f8, 0(x2) # load 0x11166f47 from memory into f8
fmsub.s f14, f18, f21, f8, dyn # perform operation
fmsub.s f14, f18, f21, f8, rdn # perform operation
fmsub.s f14, f18, f21, f8, rmm # perform operation
fmsub.s f14, f18, f21, f8, rne # perform operation
fmsub.s f14, f18, f21, f8, rtz # perform operation
fmsub.s f14, f18, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f18, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x15, 0x78a7be93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x34ba2143 # load x3 with value 0x34ba2143
sw x3, 0(x2) # store 0x34ba2143 in memory
flw f20, 0(x2) # load 0x34ba2143 from memory into f20
fmsub.s f15, f28, f29, f20, dyn # perform operation
fmsub.s f15, f28, f29, f20, rdn # perform operation
fmsub.s f15, f28, f29, f20, rmm # perform operation
fmsub.s f15, f28, f29, f20, rne # perform operation
fmsub.s f15, f28, f29, f20, rtz # perform operation
fmsub.s f15, f28, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f28, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f28, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x5, 0xe9d950d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x4fe01386 # load x3 with value 0x4fe01386
sw x3, 0(x2) # store 0x4fe01386 in memory
flw f22, 0(x2) # load 0x4fe01386 from memory into f22
fmsub.s f5, f1, f14, f22, dyn # perform operation
fmsub.s f5, f1, f14, f22, rdn # perform operation
fmsub.s f5, f1, f14, f22, rmm # perform operation
fmsub.s f5, f1, f14, f22, rne # perform operation
fmsub.s f5, f1, f14, f22, rtz # perform operation
fmsub.s f5, f1, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f1, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f1, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x29, 0x7a978046 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x445ebdc9 # load x3 with value 0x445ebdc9
sw x3, 0(x2) # store 0x445ebdc9 in memory
flw f20, 0(x2) # load 0x445ebdc9 from memory into f20
fmsub.s f29, f2, f16, f20, dyn # perform operation
fmsub.s f29, f2, f16, f20, rdn # perform operation
fmsub.s f29, f2, f16, f20, rmm # perform operation
fmsub.s f29, f2, f16, f20, rne # perform operation
fmsub.s f29, f2, f16, f20, rtz # perform operation
fmsub.s f29, f2, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x1, 0x072d82ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x3a2049bf # load x3 with value 0x3a2049bf
sw x3, 0(x2) # store 0x3a2049bf in memory
flw f20, 0(x2) # load 0x3a2049bf from memory into f20
fmsub.s f1, f25, f14, f20, dyn # perform operation
fmsub.s f1, f25, f14, f20, rdn # perform operation
fmsub.s f1, f25, f14, f20, rmm # perform operation
fmsub.s f1, f25, f14, f20, rne # perform operation
fmsub.s f1, f25, f14, f20, rtz # perform operation
fmsub.s f1, f25, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x9, 0x75d9f35c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
li x3, 0xedd8ce86 # load x3 with value 0xedd8ce86
sw x3, 0(x2) # store 0xedd8ce86 in memory
flw f31, 0(x2) # load 0xedd8ce86 from memory into f31
fmsub.s f9, f7, f24, f31, dyn # perform operation
fmsub.s f9, f7, f24, f31, rdn # perform operation
fmsub.s f9, f7, f24, f31, rmm # perform operation
fmsub.s f9, f7, f24, f31, rne # perform operation
fmsub.s f9, f7, f24, f31, rtz # perform operation
fmsub.s f9, f7, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f7, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f7, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f7, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f7, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f7, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x1, 0x74b2cdee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0xff89825d # load x3 with value 0xff89825d
sw x3, 0(x2) # store 0xff89825d in memory
flw f23, 0(x2) # load 0xff89825d from memory into f23
fmsub.s f1, f9, f4, f23, dyn # perform operation
fmsub.s f1, f9, f4, f23, rdn # perform operation
fmsub.s f1, f9, f4, f23, rmm # perform operation
fmsub.s f1, f9, f4, f23, rne # perform operation
fmsub.s f1, f9, f4, f23, rtz # perform operation
fmsub.s f1, f9, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f9, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f9, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x16, 0x2da0c8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0x3abb5c11 # load x3 with value 0x3abb5c11
sw x3, 0(x2) # store 0x3abb5c11 in memory
flw f18, 0(x2) # load 0x3abb5c11 from memory into f18
fmsub.s f16, f12, f26, f18, dyn # perform operation
fmsub.s f16, f12, f26, f18, rdn # perform operation
fmsub.s f16, f12, f26, f18, rmm # perform operation
fmsub.s f16, f12, f26, f18, rne # perform operation
fmsub.s f16, f12, f26, f18, rtz # perform operation
fmsub.s f16, f12, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f26, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x24, 0xb5548ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0xae6732c5 # load x3 with value 0xae6732c5
sw x3, 0(x2) # store 0xae6732c5 in memory
flw f13, 0(x2) # load 0xae6732c5 from memory into f13
fmsub.s f24, f29, f20, f13, dyn # perform operation
fmsub.s f24, f29, f20, f13, rdn # perform operation
fmsub.s f24, f29, f20, f13, rmm # perform operation
fmsub.s f24, f29, f20, f13, rne # perform operation
fmsub.s f24, f29, f20, f13, rtz # perform operation
fmsub.s f24, f29, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x12, 0x9cfd3a77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x28b6b387 # load x3 with value 0x28b6b387
sw x3, 0(x2) # store 0x28b6b387 in memory
flw f6, 0(x2) # load 0x28b6b387 from memory into f6
fmsub.s f12, f11, f31, f6, dyn # perform operation
fmsub.s f12, f11, f31, f6, rdn # perform operation
fmsub.s f12, f11, f31, f6, rmm # perform operation
fmsub.s f12, f11, f31, f6, rne # perform operation
fmsub.s f12, f11, f31, f6, rtz # perform operation
fmsub.s f12, f11, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x23, 0x4052622d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xb17210ac # load x3 with value 0xb17210ac
sw x3, 0(x2) # store 0xb17210ac in memory
flw f14, 0(x2) # load 0xb17210ac from memory into f14
fmsub.s f23, f21, f27, f14, dyn # perform operation
fmsub.s f23, f21, f27, f14, rdn # perform operation
fmsub.s f23, f21, f27, f14, rmm # perform operation
fmsub.s f23, f21, f27, f14, rne # perform operation
fmsub.s f23, f21, f27, f14, rtz # perform operation
fmsub.s f23, f21, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f27, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x27, 0x370092d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x05ff3971 # load x3 with value 0x05ff3971
sw x3, 0(x2) # store 0x05ff3971 in memory
flw f16, 0(x2) # load 0x05ff3971 from memory into f16
fmsub.s f27, f14, f28, f16, dyn # perform operation
fmsub.s f27, f14, f28, f16, rdn # perform operation
fmsub.s f27, f14, f28, f16, rmm # perform operation
fmsub.s f27, f14, f28, f16, rne # perform operation
fmsub.s f27, f14, f28, f16, rtz # perform operation
fmsub.s f27, f14, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f14, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f14, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x6, 0x128bf08a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x87af3561 # load x3 with value 0x87af3561
sw x3, 0(x2) # store 0x87af3561 in memory
flw f19, 0(x2) # load 0x87af3561 from memory into f19
fmsub.s f6, f5, f24, f19, dyn # perform operation
fmsub.s f6, f5, f24, f19, rdn # perform operation
fmsub.s f6, f5, f24, f19, rmm # perform operation
fmsub.s f6, f5, f24, f19, rne # perform operation
fmsub.s f6, f5, f24, f19, rtz # perform operation
fmsub.s f6, f5, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x2, 0xb512116c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0xf9f3ebd9 # load x3 with value 0xf9f3ebd9
sw x3, 0(x2) # store 0xf9f3ebd9 in memory
flw f26, 0(x2) # load 0xf9f3ebd9 from memory into f26
fmsub.s f2, f5, f25, f26, dyn # perform operation
fmsub.s f2, f5, f25, f26, rdn # perform operation
fmsub.s f2, f5, f25, f26, rmm # perform operation
fmsub.s f2, f5, f25, f26, rne # perform operation
fmsub.s f2, f5, f25, f26, rtz # perform operation
fmsub.s f2, f5, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f5, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x7, 0x4e1b9c08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x99a7cc02 # load x3 with value 0x99a7cc02
sw x3, 0(x2) # store 0x99a7cc02 in memory
flw f4, 0(x2) # load 0x99a7cc02 from memory into f4
fmsub.s f7, f29, f11, f4, dyn # perform operation
fmsub.s f7, f29, f11, f4, rdn # perform operation
fmsub.s f7, f29, f11, f4, rmm # perform operation
fmsub.s f7, f29, f11, f4, rne # perform operation
fmsub.s f7, f29, f11, f4, rtz # perform operation
fmsub.s f7, f29, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x3, 0x284966d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x4aef308c # load x3 with value 0x4aef308c
sw x3, 0(x2) # store 0x4aef308c in memory
flw f6, 0(x2) # load 0x4aef308c from memory into f6
fmsub.s f3, f23, f21, f6, dyn # perform operation
fmsub.s f3, f23, f21, f6, rdn # perform operation
fmsub.s f3, f23, f21, f6, rmm # perform operation
fmsub.s f3, f23, f21, f6, rne # perform operation
fmsub.s f3, f23, f21, f6, rtz # perform operation
fmsub.s f3, f23, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x25, 0x876a7ef6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0x477e1695 # load x3 with value 0x477e1695
sw x3, 0(x2) # store 0x477e1695 in memory
flw f23, 0(x2) # load 0x477e1695 from memory into f23
fmsub.s f25, f13, f30, f23, dyn # perform operation
fmsub.s f25, f13, f30, f23, rdn # perform operation
fmsub.s f25, f13, f30, f23, rmm # perform operation
fmsub.s f25, f13, f30, f23, rne # perform operation
fmsub.s f25, f13, f30, f23, rtz # perform operation
fmsub.s f25, f13, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f13, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x2, 0x41185288 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0xe86db935 # load x3 with value 0xe86db935
sw x3, 0(x2) # store 0xe86db935 in memory
flw f4, 0(x2) # load 0xe86db935 from memory into f4
fmsub.s f2, f11, f30, f4, dyn # perform operation
fmsub.s f2, f11, f30, f4, rdn # perform operation
fmsub.s f2, f11, f30, f4, rmm # perform operation
fmsub.s f2, f11, f30, f4, rne # perform operation
fmsub.s f2, f11, f30, f4, rtz # perform operation
fmsub.s f2, f11, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f11, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f11, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x16, 0x5c4ad3b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xee860538 # load x3 with value 0xee860538
sw x3, 0(x2) # store 0xee860538 in memory
flw f19, 0(x2) # load 0xee860538 from memory into f19
fmsub.s f16, f31, f20, f19, dyn # perform operation
fmsub.s f16, f31, f20, f19, rdn # perform operation
fmsub.s f16, f31, f20, f19, rmm # perform operation
fmsub.s f16, f31, f20, f19, rne # perform operation
fmsub.s f16, f31, f20, f19, rtz # perform operation
fmsub.s f16, f31, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f31, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f31, f20, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x26, 0xbb50f172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xc1184ca7 # load x3 with value 0xc1184ca7
sw x3, 0(x2) # store 0xc1184ca7 in memory
flw f7, 0(x2) # load 0xc1184ca7 from memory into f7
fmsub.s f26, f30, f12, f7, dyn # perform operation
fmsub.s f26, f30, f12, f7, rdn # perform operation
fmsub.s f26, f30, f12, f7, rmm # perform operation
fmsub.s f26, f30, f12, f7, rne # perform operation
fmsub.s f26, f30, f12, f7, rtz # perform operation
fmsub.s f26, f30, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f12, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x9, 0x4a69d025 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x19621d71 # load x3 with value 0x19621d71
sw x3, 0(x2) # store 0x19621d71 in memory
flw f7, 0(x2) # load 0x19621d71 from memory into f7
fmsub.s f9, f14, f15, f7, dyn # perform operation
fmsub.s f9, f14, f15, f7, rdn # perform operation
fmsub.s f9, f14, f15, f7, rmm # perform operation
fmsub.s f9, f14, f15, f7, rne # perform operation
fmsub.s f9, f14, f15, f7, rtz # perform operation
fmsub.s f9, f14, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f14, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f14, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x13, 0xa49ef338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x9b64845d # load x3 with value 0x9b64845d
sw x3, 0(x2) # store 0x9b64845d in memory
flw f12, 0(x2) # load 0x9b64845d from memory into f12
fmsub.s f13, f3, f27, f12, dyn # perform operation
fmsub.s f13, f3, f27, f12, rdn # perform operation
fmsub.s f13, f3, f27, f12, rmm # perform operation
fmsub.s f13, f3, f27, f12, rne # perform operation
fmsub.s f13, f3, f27, f12, rtz # perform operation
fmsub.s f13, f3, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x4, 0xbc383591 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x2da9af82 # load x3 with value 0x2da9af82
sw x3, 0(x2) # store 0x2da9af82 in memory
flw f13, 0(x2) # load 0x2da9af82 from memory into f13
fmsub.s f4, f25, f24, f13, dyn # perform operation
fmsub.s f4, f25, f24, f13, rdn # perform operation
fmsub.s f4, f25, f24, f13, rmm # perform operation
fmsub.s f4, f25, f24, f13, rne # perform operation
fmsub.s f4, f25, f24, f13, rtz # perform operation
fmsub.s f4, f25, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f25, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f25, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f25, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f25, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f25, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x30, 0xb716e9a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x9ef2d5a7 # load x3 with value 0x9ef2d5a7
sw x3, 0(x2) # store 0x9ef2d5a7 in memory
flw f28, 0(x2) # load 0x9ef2d5a7 from memory into f28
fmsub.s f30, f19, f5, f28, dyn # perform operation
fmsub.s f30, f19, f5, f28, rdn # perform operation
fmsub.s f30, f19, f5, f28, rmm # perform operation
fmsub.s f30, f19, f5, f28, rne # perform operation
fmsub.s f30, f19, f5, f28, rtz # perform operation
fmsub.s f30, f19, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x2, 0xf835c1a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x66a2ef4e # load x3 with value 0x66a2ef4e
sw x3, 0(x2) # store 0x66a2ef4e in memory
flw f16, 0(x2) # load 0x66a2ef4e from memory into f16
fmsub.s f2, f19, f21, f16, dyn # perform operation
fmsub.s f2, f19, f21, f16, rdn # perform operation
fmsub.s f2, f19, f21, f16, rmm # perform operation
fmsub.s f2, f19, f21, f16, rne # perform operation
fmsub.s f2, f19, f21, f16, rtz # perform operation
fmsub.s f2, f19, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f19, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f19, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f19, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f19, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f19, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x18, 0x027823ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x8168329a # load x3 with value 0x8168329a
sw x3, 0(x2) # store 0x8168329a in memory
flw f5, 0(x2) # load 0x8168329a from memory into f5
fmsub.s f18, f27, f12, f5, dyn # perform operation
fmsub.s f18, f27, f12, f5, rdn # perform operation
fmsub.s f18, f27, f12, f5, rmm # perform operation
fmsub.s f18, f27, f12, f5, rne # perform operation
fmsub.s f18, f27, f12, f5, rtz # perform operation
fmsub.s f18, f27, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f27, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x31, 0x1af26d53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xc616ae00 # load x3 with value 0xc616ae00
sw x3, 0(x2) # store 0xc616ae00 in memory
flw f2, 0(x2) # load 0xc616ae00 from memory into f2
fmsub.s f31, f9, f24, f2, dyn # perform operation
fmsub.s f31, f9, f24, f2, rdn # perform operation
fmsub.s f31, f9, f24, f2, rmm # perform operation
fmsub.s f31, f9, f24, f2, rne # perform operation
fmsub.s f31, f9, f24, f2, rtz # perform operation
fmsub.s f31, f9, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f9, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f9, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x20, 0x30ae5e5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x7e40109a # load x3 with value 0x7e40109a
sw x3, 0(x2) # store 0x7e40109a in memory
flw f24, 0(x2) # load 0x7e40109a from memory into f24
fmsub.s f20, f4, f17, f24, dyn # perform operation
fmsub.s f20, f4, f17, f24, rdn # perform operation
fmsub.s f20, f4, f17, f24, rmm # perform operation
fmsub.s f20, f4, f17, f24, rne # perform operation
fmsub.s f20, f4, f17, f24, rtz # perform operation
fmsub.s f20, f4, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f4, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f4, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f4, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f4, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f4, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x31, 0x63b81a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0xe6e299aa # load x3 with value 0xe6e299aa
sw x3, 0(x2) # store 0xe6e299aa in memory
flw f9, 0(x2) # load 0xe6e299aa from memory into f9
fmsub.s f31, f16, f20, f9, dyn # perform operation
fmsub.s f31, f16, f20, f9, rdn # perform operation
fmsub.s f31, f16, f20, f9, rmm # perform operation
fmsub.s f31, f16, f20, f9, rne # perform operation
fmsub.s f31, f16, f20, f9, rtz # perform operation
fmsub.s f31, f16, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f16, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x17, 0x6d190eae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x976171e9 # load x3 with value 0x976171e9
sw x3, 0(x2) # store 0x976171e9 in memory
flw f19, 0(x2) # load 0x976171e9 from memory into f19
fmsub.s f17, f26, f4, f19, dyn # perform operation
fmsub.s f17, f26, f4, f19, rdn # perform operation
fmsub.s f17, f26, f4, f19, rmm # perform operation
fmsub.s f17, f26, f4, f19, rne # perform operation
fmsub.s f17, f26, f4, f19, rtz # perform operation
fmsub.s f17, f26, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f4, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x5, 0xc3c360b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xc2c0869f # load x3 with value 0xc2c0869f
sw x3, 0(x2) # store 0xc2c0869f in memory
flw f29, 0(x2) # load 0xc2c0869f from memory into f29
fmsub.s f5, f26, f13, f29, dyn # perform operation
fmsub.s f5, f26, f13, f29, rdn # perform operation
fmsub.s f5, f26, f13, f29, rmm # perform operation
fmsub.s f5, f26, f13, f29, rne # perform operation
fmsub.s f5, f26, f13, f29, rtz # perform operation
fmsub.s f5, f26, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x15, 0x40f4f332 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x68834c67 # load x3 with value 0x68834c67
sw x3, 0(x2) # store 0x68834c67 in memory
flw f23, 0(x2) # load 0x68834c67 from memory into f23
fmsub.s f15, f13, f30, f23, dyn # perform operation
fmsub.s f15, f13, f30, f23, rdn # perform operation
fmsub.s f15, f13, f30, f23, rmm # perform operation
fmsub.s f15, f13, f30, f23, rne # perform operation
fmsub.s f15, f13, f30, f23, rtz # perform operation
fmsub.s f15, f13, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f13, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x14, 0xa4b4f9c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x86d6cdd7 # load x3 with value 0x86d6cdd7
sw x3, 0(x2) # store 0x86d6cdd7 in memory
flw f28, 0(x2) # load 0x86d6cdd7 from memory into f28
fmsub.s f14, f16, f18, f28, dyn # perform operation
fmsub.s f14, f16, f18, f28, rdn # perform operation
fmsub.s f14, f16, f18, f28, rmm # perform operation
fmsub.s f14, f16, f18, f28, rne # perform operation
fmsub.s f14, f16, f18, f28, rtz # perform operation
fmsub.s f14, f16, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x31, 0xba101752 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xb8205dc2 # load x3 with value 0xb8205dc2
sw x3, 0(x2) # store 0xb8205dc2 in memory
flw f13, 0(x2) # load 0xb8205dc2 from memory into f13
fmsub.s f31, f12, f17, f13, dyn # perform operation
fmsub.s f31, f12, f17, f13, rdn # perform operation
fmsub.s f31, f12, f17, f13, rmm # perform operation
fmsub.s f31, f12, f17, f13, rne # perform operation
fmsub.s f31, f12, f17, f13, rtz # perform operation
fmsub.s f31, f12, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f12, f17, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x22, 0x426ab847 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xb68e4652 # load x3 with value 0xb68e4652
sw x3, 0(x2) # store 0xb68e4652 in memory
flw f17, 0(x2) # load 0xb68e4652 from memory into f17
fmsub.s f22, f26, f11, f17, dyn # perform operation
fmsub.s f22, f26, f11, f17, rdn # perform operation
fmsub.s f22, f26, f11, f17, rmm # perform operation
fmsub.s f22, f26, f11, f17, rne # perform operation
fmsub.s f22, f26, f11, f17, rtz # perform operation
fmsub.s f22, f26, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f26, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f26, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x28, 0x425e973d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x95295e78 # load x3 with value 0x95295e78
sw x3, 0(x2) # store 0x95295e78 in memory
flw f9, 0(x2) # load 0x95295e78 from memory into f9
fmsub.s f28, f5, f29, f9, dyn # perform operation
fmsub.s f28, f5, f29, f9, rdn # perform operation
fmsub.s f28, f5, f29, f9, rmm # perform operation
fmsub.s f28, f5, f29, f9, rne # perform operation
fmsub.s f28, f5, f29, f9, rtz # perform operation
fmsub.s f28, f5, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x12, 0xc002b6bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x225a2e34 # load x3 with value 0x225a2e34
sw x3, 0(x2) # store 0x225a2e34 in memory
flw f7, 0(x2) # load 0x225a2e34 from memory into f7
fmsub.s f12, f3, f29, f7, dyn # perform operation
fmsub.s f12, f3, f29, f7, rdn # perform operation
fmsub.s f12, f3, f29, f7, rmm # perform operation
fmsub.s f12, f3, f29, f7, rne # perform operation
fmsub.s f12, f3, f29, f7, rtz # perform operation
fmsub.s f12, f3, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f3, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f3, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x30, 0x28d56d16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xe2a635fd # load x3 with value 0xe2a635fd
sw x3, 0(x2) # store 0xe2a635fd in memory
flw f13, 0(x2) # load 0xe2a635fd from memory into f13
fmsub.s f30, f25, f4, f13, dyn # perform operation
fmsub.s f30, f25, f4, f13, rdn # perform operation
fmsub.s f30, f25, f4, f13, rmm # perform operation
fmsub.s f30, f25, f4, f13, rne # perform operation
fmsub.s f30, f25, f4, f13, rtz # perform operation
fmsub.s f30, f25, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f25, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f25, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x24, 0x662ce579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x8a3f2a6e # load x3 with value 0x8a3f2a6e
sw x3, 0(x2) # store 0x8a3f2a6e in memory
flw f8, 0(x2) # load 0x8a3f2a6e from memory into f8
fmsub.s f24, f27, f19, f8, dyn # perform operation
fmsub.s f24, f27, f19, f8, rdn # perform operation
fmsub.s f24, f27, f19, f8, rmm # perform operation
fmsub.s f24, f27, f19, f8, rne # perform operation
fmsub.s f24, f27, f19, f8, rtz # perform operation
fmsub.s f24, f27, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x7, 0x39600fdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x4336c719 # load x3 with value 0x4336c719
sw x3, 0(x2) # store 0x4336c719 in memory
flw f17, 0(x2) # load 0x4336c719 from memory into f17
fmsub.s f7, f1, f19, f17, dyn # perform operation
fmsub.s f7, f1, f19, f17, rdn # perform operation
fmsub.s f7, f1, f19, f17, rmm # perform operation
fmsub.s f7, f1, f19, f17, rne # perform operation
fmsub.s f7, f1, f19, f17, rtz # perform operation
fmsub.s f7, f1, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f1, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x6, 0x55d708cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x699cc753 # load x3 with value 0x699cc753
sw x3, 0(x2) # store 0x699cc753 in memory
flw f25, 0(x2) # load 0x699cc753 from memory into f25
fmsub.s f6, f17, f3, f25, dyn # perform operation
fmsub.s f6, f17, f3, f25, rdn # perform operation
fmsub.s f6, f17, f3, f25, rmm # perform operation
fmsub.s f6, f17, f3, f25, rne # perform operation
fmsub.s f6, f17, f3, f25, rtz # perform operation
fmsub.s f6, f17, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f17, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f17, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x8, 0x12fcc46b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x62fd43f9 # load x3 with value 0x62fd43f9
sw x3, 0(x2) # store 0x62fd43f9 in memory
flw f17, 0(x2) # load 0x62fd43f9 from memory into f17
fmsub.s f8, f5, f19, f17, dyn # perform operation
fmsub.s f8, f5, f19, f17, rdn # perform operation
fmsub.s f8, f5, f19, f17, rmm # perform operation
fmsub.s f8, f5, f19, f17, rne # perform operation
fmsub.s f8, f5, f19, f17, rtz # perform operation
fmsub.s f8, f5, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x25, 0x74367c71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x1ff0ff9e # load x3 with value 0x1ff0ff9e
sw x3, 0(x2) # store 0x1ff0ff9e in memory
flw f7, 0(x2) # load 0x1ff0ff9e from memory into f7
fmsub.s f25, f16, f27, f7, dyn # perform operation
fmsub.s f25, f16, f27, f7, rdn # perform operation
fmsub.s f25, f16, f27, f7, rmm # perform operation
fmsub.s f25, f16, f27, f7, rne # perform operation
fmsub.s f25, f16, f27, f7, rtz # perform operation
fmsub.s f25, f16, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f16, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f16, f27, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x25, 0x4d9ef7dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x2208eddb # load x3 with value 0x2208eddb
sw x3, 0(x2) # store 0x2208eddb in memory
flw f12, 0(x2) # load 0x2208eddb from memory into f12
fmsub.s f25, f5, f30, f12, dyn # perform operation
fmsub.s f25, f5, f30, f12, rdn # perform operation
fmsub.s f25, f5, f30, f12, rmm # perform operation
fmsub.s f25, f5, f30, f12, rne # perform operation
fmsub.s f25, f5, f30, f12, rtz # perform operation
fmsub.s f25, f5, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f5, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f5, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x12, 0x6eadc405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x7206fca4 # load x3 with value 0x7206fca4
sw x3, 0(x2) # store 0x7206fca4 in memory
flw f11, 0(x2) # load 0x7206fca4 from memory into f11
fmsub.s f12, f1, f15, f11, dyn # perform operation
fmsub.s f12, f1, f15, f11, rdn # perform operation
fmsub.s f12, f1, f15, f11, rmm # perform operation
fmsub.s f12, f1, f15, f11, rne # perform operation
fmsub.s f12, f1, f15, f11, rtz # perform operation
fmsub.s f12, f1, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x14, 0xf48566cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x2f0271ac # load x3 with value 0x2f0271ac
sw x3, 0(x2) # store 0x2f0271ac in memory
flw f12, 0(x2) # load 0x2f0271ac from memory into f12
fmsub.s f14, f3, f6, f12, dyn # perform operation
fmsub.s f14, f3, f6, f12, rdn # perform operation
fmsub.s f14, f3, f6, f12, rmm # perform operation
fmsub.s f14, f3, f6, f12, rne # perform operation
fmsub.s f14, f3, f6, f12, rtz # perform operation
fmsub.s f14, f3, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f3, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f3, f6, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x21, 0x10630eef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x1e58b3ef # load x3 with value 0x1e58b3ef
sw x3, 0(x2) # store 0x1e58b3ef in memory
flw f13, 0(x2) # load 0x1e58b3ef from memory into f13
fmsub.s f21, f26, f24, f13, dyn # perform operation
fmsub.s f21, f26, f24, f13, rdn # perform operation
fmsub.s f21, f26, f24, f13, rmm # perform operation
fmsub.s f21, f26, f24, f13, rne # perform operation
fmsub.s f21, f26, f24, f13, rtz # perform operation
fmsub.s f21, f26, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f24, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x16, 0xb0936716 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xe1626c13 # load x3 with value 0xe1626c13
sw x3, 0(x2) # store 0xe1626c13 in memory
flw f9, 0(x2) # load 0xe1626c13 from memory into f9
fmsub.s f16, f26, f30, f9, dyn # perform operation
fmsub.s f16, f26, f30, f9, rdn # perform operation
fmsub.s f16, f26, f30, f9, rmm # perform operation
fmsub.s f16, f26, f30, f9, rne # perform operation
fmsub.s f16, f26, f30, f9, rtz # perform operation
fmsub.s f16, f26, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f26, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x28, 0xc5cf57f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xafb921c0 # load x3 with value 0xafb921c0
sw x3, 0(x2) # store 0xafb921c0 in memory
flw f1, 0(x2) # load 0xafb921c0 from memory into f1
fmsub.s f28, f3, f20, f1, dyn # perform operation
fmsub.s f28, f3, f20, f1, rdn # perform operation
fmsub.s f28, f3, f20, f1, rmm # perform operation
fmsub.s f28, f3, f20, f1, rne # perform operation
fmsub.s f28, f3, f20, f1, rtz # perform operation
fmsub.s f28, f3, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f3, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f3, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x17, 0x5dd1ee0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xdd442b9d # load x3 with value 0xdd442b9d
sw x3, 0(x2) # store 0xdd442b9d in memory
flw f25, 0(x2) # load 0xdd442b9d from memory into f25
fmsub.s f17, f26, f18, f25, dyn # perform operation
fmsub.s f17, f26, f18, f25, rdn # perform operation
fmsub.s f17, f26, f18, f25, rmm # perform operation
fmsub.s f17, f26, f18, f25, rne # perform operation
fmsub.s f17, f26, f18, f25, rtz # perform operation
fmsub.s f17, f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x6, 0xb51923fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x415f9e82 # load x3 with value 0x415f9e82
sw x3, 0(x2) # store 0x415f9e82 in memory
flw f2, 0(x2) # load 0x415f9e82 from memory into f2
fmsub.s f6, f10, f16, f2, dyn # perform operation
fmsub.s f6, f10, f16, f2, rdn # perform operation
fmsub.s f6, f10, f16, f2, rmm # perform operation
fmsub.s f6, f10, f16, f2, rne # perform operation
fmsub.s f6, f10, f16, f2, rtz # perform operation
fmsub.s f6, f10, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f10, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f10, f16, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x30, 0x7850a2da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x7f8b9b1c # load x3 with value 0x7f8b9b1c
sw x3, 0(x2) # store 0x7f8b9b1c in memory
flw f24, 0(x2) # load 0x7f8b9b1c from memory into f24
fmsub.s f30, f27, f1, f24, dyn # perform operation
fmsub.s f30, f27, f1, f24, rdn # perform operation
fmsub.s f30, f27, f1, f24, rmm # perform operation
fmsub.s f30, f27, f1, f24, rne # perform operation
fmsub.s f30, f27, f1, f24, rtz # perform operation
fmsub.s f30, f27, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f27, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f27, f1, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x5, 0x61475be9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x2bc7b38f # load x3 with value 0x2bc7b38f
sw x3, 0(x2) # store 0x2bc7b38f in memory
flw f14, 0(x2) # load 0x2bc7b38f from memory into f14
fmsub.s f5, f11, f22, f14, dyn # perform operation
fmsub.s f5, f11, f22, f14, rdn # perform operation
fmsub.s f5, f11, f22, f14, rmm # perform operation
fmsub.s f5, f11, f22, f14, rne # perform operation
fmsub.s f5, f11, f22, f14, rtz # perform operation
fmsub.s f5, f11, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f11, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f11, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f11, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f11, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f11, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x8, 0x63c1214b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x3b580104 # load x3 with value 0x3b580104
sw x3, 0(x2) # store 0x3b580104 in memory
flw f23, 0(x2) # load 0x3b580104 from memory into f23
fmsub.s f8, f7, f31, f23, dyn # perform operation
fmsub.s f8, f7, f31, f23, rdn # perform operation
fmsub.s f8, f7, f31, f23, rmm # perform operation
fmsub.s f8, f7, f31, f23, rne # perform operation
fmsub.s f8, f7, f31, f23, rtz # perform operation
fmsub.s f8, f7, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x24, 0x1d3f2a5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x8094677c # load x3 with value 0x8094677c
sw x3, 0(x2) # store 0x8094677c in memory
flw f4, 0(x2) # load 0x8094677c from memory into f4
fmsub.s f24, f12, f31, f4, dyn # perform operation
fmsub.s f24, f12, f31, f4, rdn # perform operation
fmsub.s f24, f12, f31, f4, rmm # perform operation
fmsub.s f24, f12, f31, f4, rne # perform operation
fmsub.s f24, f12, f31, f4, rtz # perform operation
fmsub.s f24, f12, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f12, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x25, 0x8d9a52e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x0e5c93ba # load x3 with value 0x0e5c93ba
sw x3, 0(x2) # store 0x0e5c93ba in memory
flw f9, 0(x2) # load 0x0e5c93ba from memory into f9
fmsub.s f25, f21, f1, f9, dyn # perform operation
fmsub.s f25, f21, f1, f9, rdn # perform operation
fmsub.s f25, f21, f1, f9, rmm # perform operation
fmsub.s f25, f21, f1, f9, rne # perform operation
fmsub.s f25, f21, f1, f9, rtz # perform operation
fmsub.s f25, f21, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f21, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f21, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x3, 0x91f398fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x50ba73c5 # load x3 with value 0x50ba73c5
sw x3, 0(x2) # store 0x50ba73c5 in memory
flw f23, 0(x2) # load 0x50ba73c5 from memory into f23
fmsub.s f3, f11, f21, f23, dyn # perform operation
fmsub.s f3, f11, f21, f23, rdn # perform operation
fmsub.s f3, f11, f21, f23, rmm # perform operation
fmsub.s f3, f11, f21, f23, rne # perform operation
fmsub.s f3, f11, f21, f23, rtz # perform operation
fmsub.s f3, f11, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x11, 0xed930a2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xc3c62ba4 # load x3 with value 0xc3c62ba4
sw x3, 0(x2) # store 0xc3c62ba4 in memory
flw f7, 0(x2) # load 0xc3c62ba4 from memory into f7
fmsub.s f11, f8, f18, f7, dyn # perform operation
fmsub.s f11, f8, f18, f7, rdn # perform operation
fmsub.s f11, f8, f18, f7, rmm # perform operation
fmsub.s f11, f8, f18, f7, rne # perform operation
fmsub.s f11, f8, f18, f7, rtz # perform operation
fmsub.s f11, f8, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x9, 0xe5929da9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0xa8429265 # load x3 with value 0xa8429265
sw x3, 0(x2) # store 0xa8429265 in memory
flw f5, 0(x2) # load 0xa8429265 from memory into f5
fmsub.s f9, f18, f29, f5, dyn # perform operation
fmsub.s f9, f18, f29, f5, rdn # perform operation
fmsub.s f9, f18, f29, f5, rmm # perform operation
fmsub.s f9, f18, f29, f5, rne # perform operation
fmsub.s f9, f18, f29, f5, rtz # perform operation
fmsub.s f9, f18, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f18, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x29, 0x98da00ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x945fde1b # load x3 with value 0x945fde1b
sw x3, 0(x2) # store 0x945fde1b in memory
flw f15, 0(x2) # load 0x945fde1b from memory into f15
fmsub.s f29, f3, f17, f15, dyn # perform operation
fmsub.s f29, f3, f17, f15, rdn # perform operation
fmsub.s f29, f3, f17, f15, rmm # perform operation
fmsub.s f29, f3, f17, f15, rne # perform operation
fmsub.s f29, f3, f17, f15, rtz # perform operation
fmsub.s f29, f3, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f3, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f3, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f3, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f3, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f3, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x30, 0x1a26de8d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x9467bf21 # load x3 with value 0x9467bf21
sw x3, 0(x2) # store 0x9467bf21 in memory
flw f17, 0(x2) # load 0x9467bf21 from memory into f17
fmsub.s f30, f5, f15, f17, dyn # perform operation
fmsub.s f30, f5, f15, f17, rdn # perform operation
fmsub.s f30, f5, f15, f17, rmm # perform operation
fmsub.s f30, f5, f15, f17, rne # perform operation
fmsub.s f30, f5, f15, f17, rtz # perform operation
fmsub.s f30, f5, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f5, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f5, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f5, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f5, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f5, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x26, 0xadf5535b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xbdd80b02 # load x3 with value 0xbdd80b02
sw x3, 0(x2) # store 0xbdd80b02 in memory
flw f14, 0(x2) # load 0xbdd80b02 from memory into f14
fmsub.s f26, f23, f12, f14, dyn # perform operation
fmsub.s f26, f23, f12, f14, rdn # perform operation
fmsub.s f26, f23, f12, f14, rmm # perform operation
fmsub.s f26, f23, f12, f14, rne # perform operation
fmsub.s f26, f23, f12, f14, rtz # perform operation
fmsub.s f26, f23, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x25, 0x2537fb68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xb7f8d1a3 # load x3 with value 0xb7f8d1a3
sw x3, 0(x2) # store 0xb7f8d1a3 in memory
flw f17, 0(x2) # load 0xb7f8d1a3 from memory into f17
fmsub.s f25, f29, f24, f17, dyn # perform operation
fmsub.s f25, f29, f24, f17, rdn # perform operation
fmsub.s f25, f29, f24, f17, rmm # perform operation
fmsub.s f25, f29, f24, f17, rne # perform operation
fmsub.s f25, f29, f24, f17, rtz # perform operation
fmsub.s f25, f29, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x28, 0xb4e152b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x03c0921e # load x3 with value 0x03c0921e
sw x3, 0(x2) # store 0x03c0921e in memory
flw f5, 0(x2) # load 0x03c0921e from memory into f5
fmsub.s f28, f13, f6, f5, dyn # perform operation
fmsub.s f28, f13, f6, f5, rdn # perform operation
fmsub.s f28, f13, f6, f5, rmm # perform operation
fmsub.s f28, f13, f6, f5, rne # perform operation
fmsub.s f28, f13, f6, f5, rtz # perform operation
fmsub.s f28, f13, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f13, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f13, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f13, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f13, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f13, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x29, 0xc43128cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x7039dfed # load x3 with value 0x7039dfed
sw x3, 0(x2) # store 0x7039dfed in memory
flw f31, 0(x2) # load 0x7039dfed from memory into f31
fmsub.s f29, f18, f28, f31, dyn # perform operation
fmsub.s f29, f18, f28, f31, rdn # perform operation
fmsub.s f29, f18, f28, f31, rmm # perform operation
fmsub.s f29, f18, f28, f31, rne # perform operation
fmsub.s f29, f18, f28, f31, rtz # perform operation
fmsub.s f29, f18, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f18, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x3, 0x73e988e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0xfb6c1470 # load x3 with value 0xfb6c1470
sw x3, 0(x2) # store 0xfb6c1470 in memory
flw f27, 0(x2) # load 0xfb6c1470 from memory into f27
fmsub.s f3, f13, f4, f27, dyn # perform operation
fmsub.s f3, f13, f4, f27, rdn # perform operation
fmsub.s f3, f13, f4, f27, rmm # perform operation
fmsub.s f3, f13, f4, f27, rne # perform operation
fmsub.s f3, f13, f4, f27, rtz # perform operation
fmsub.s f3, f13, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f13, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f13, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f13, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f13, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f13, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x7, 0xc7585153 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xc5995d7f # load x3 with value 0xc5995d7f
sw x3, 0(x2) # store 0xc5995d7f in memory
flw f24, 0(x2) # load 0xc5995d7f from memory into f24
fmsub.s f7, f26, f12, f24, dyn # perform operation
fmsub.s f7, f26, f12, f24, rdn # perform operation
fmsub.s f7, f26, f12, f24, rmm # perform operation
fmsub.s f7, f26, f12, f24, rne # perform operation
fmsub.s f7, f26, f12, f24, rtz # perform operation
fmsub.s f7, f26, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x21, 0x78936328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xd2021aef # load x3 with value 0xd2021aef
sw x3, 0(x2) # store 0xd2021aef in memory
flw f6, 0(x2) # load 0xd2021aef from memory into f6
fmsub.s f21, f30, f23, f6, dyn # perform operation
fmsub.s f21, f30, f23, f6, rdn # perform operation
fmsub.s f21, f30, f23, f6, rmm # perform operation
fmsub.s f21, f30, f23, f6, rne # perform operation
fmsub.s f21, f30, f23, f6, rtz # perform operation
fmsub.s f21, f30, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f30, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x19, 0x11eaa1a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0xa27c8bfe # load x3 with value 0xa27c8bfe
sw x3, 0(x2) # store 0xa27c8bfe in memory
flw f11, 0(x2) # load 0xa27c8bfe from memory into f11
fmsub.s f19, f8, f6, f11, dyn # perform operation
fmsub.s f19, f8, f6, f11, rdn # perform operation
fmsub.s f19, f8, f6, f11, rmm # perform operation
fmsub.s f19, f8, f6, f11, rne # perform operation
fmsub.s f19, f8, f6, f11, rtz # perform operation
fmsub.s f19, f8, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f8, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f8, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x27, 0x2f707d78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x87456448 # load x3 with value 0x87456448
sw x3, 0(x2) # store 0x87456448 in memory
flw f24, 0(x2) # load 0x87456448 from memory into f24
fmsub.s f27, f11, f31, f24, dyn # perform operation
fmsub.s f27, f11, f31, f24, rdn # perform operation
fmsub.s f27, f11, f31, f24, rmm # perform operation
fmsub.s f27, f11, f31, f24, rne # perform operation
fmsub.s f27, f11, f31, f24, rtz # perform operation
fmsub.s f27, f11, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f11, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f11, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f11, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f11, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f11, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x6, 0xb3358a81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x30aa2de1 # load x3 with value 0x30aa2de1
sw x3, 0(x2) # store 0x30aa2de1 in memory
flw f20, 0(x2) # load 0x30aa2de1 from memory into f20
fmsub.s f6, f13, f3, f20, dyn # perform operation
fmsub.s f6, f13, f3, f20, rdn # perform operation
fmsub.s f6, f13, f3, f20, rmm # perform operation
fmsub.s f6, f13, f3, f20, rne # perform operation
fmsub.s f6, f13, f3, f20, rtz # perform operation
fmsub.s f6, f13, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f13, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f13, f3, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x16, 0x73dcd7e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x4d11b7cb # load x3 with value 0x4d11b7cb
sw x3, 0(x2) # store 0x4d11b7cb in memory
flw f8, 0(x2) # load 0x4d11b7cb from memory into f8
fmsub.s f16, f3, f29, f8, dyn # perform operation
fmsub.s f16, f3, f29, f8, rdn # perform operation
fmsub.s f16, f3, f29, f8, rmm # perform operation
fmsub.s f16, f3, f29, f8, rne # perform operation
fmsub.s f16, f3, f29, f8, rtz # perform operation
fmsub.s f16, f3, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x2, 0x38156260 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x970c91ca # load x3 with value 0x970c91ca
sw x3, 0(x2) # store 0x970c91ca in memory
flw f29, 0(x2) # load 0x970c91ca from memory into f29
fmsub.s f2, f30, f15, f29, dyn # perform operation
fmsub.s f2, f30, f15, f29, rdn # perform operation
fmsub.s f2, f30, f15, f29, rmm # perform operation
fmsub.s f2, f30, f15, f29, rne # perform operation
fmsub.s f2, f30, f15, f29, rtz # perform operation
fmsub.s f2, f30, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f30, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f30, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x14, 0xe79fa157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x4973eda3 # load x3 with value 0x4973eda3
sw x3, 0(x2) # store 0x4973eda3 in memory
flw f4, 0(x2) # load 0x4973eda3 from memory into f4
fmsub.s f14, f22, f11, f4, dyn # perform operation
fmsub.s f14, f22, f11, f4, rdn # perform operation
fmsub.s f14, f22, f11, f4, rmm # perform operation
fmsub.s f14, f22, f11, f4, rne # perform operation
fmsub.s f14, f22, f11, f4, rtz # perform operation
fmsub.s f14, f22, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f22, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f22, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f22, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f22, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f22, f11, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x25, 0x3bd82dd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x318caa62 # load x3 with value 0x318caa62
sw x3, 0(x2) # store 0x318caa62 in memory
flw f5, 0(x2) # load 0x318caa62 from memory into f5
fmsub.s f25, f28, f6, f5, dyn # perform operation
fmsub.s f25, f28, f6, f5, rdn # perform operation
fmsub.s f25, f28, f6, f5, rmm # perform operation
fmsub.s f25, f28, f6, f5, rne # perform operation
fmsub.s f25, f28, f6, f5, rtz # perform operation
fmsub.s f25, f28, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f28, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x12, 0xde3d1ec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xeb03f181 # load x3 with value 0xeb03f181
sw x3, 0(x2) # store 0xeb03f181 in memory
flw f2, 0(x2) # load 0xeb03f181 from memory into f2
fmsub.s f12, f20, f3, f2, dyn # perform operation
fmsub.s f12, f20, f3, f2, rdn # perform operation
fmsub.s f12, f20, f3, f2, rmm # perform operation
fmsub.s f12, f20, f3, f2, rne # perform operation
fmsub.s f12, f20, f3, f2, rtz # perform operation
fmsub.s f12, f20, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x26, 0x6319bbc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0xc9743ff9 # load x3 with value 0xc9743ff9
sw x3, 0(x2) # store 0xc9743ff9 in memory
flw f24, 0(x2) # load 0xc9743ff9 from memory into f24
fmsub.s f26, f18, f19, f24, dyn # perform operation
fmsub.s f26, f18, f19, f24, rdn # perform operation
fmsub.s f26, f18, f19, f24, rmm # perform operation
fmsub.s f26, f18, f19, f24, rne # perform operation
fmsub.s f26, f18, f19, f24, rtz # perform operation
fmsub.s f26, f18, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f18, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x15, 0xbd3b0acf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0xa2d95bfb # load x3 with value 0xa2d95bfb
sw x3, 0(x2) # store 0xa2d95bfb in memory
flw f3, 0(x2) # load 0xa2d95bfb from memory into f3
fmsub.s f15, f6, f26, f3, dyn # perform operation
fmsub.s f15, f6, f26, f3, rdn # perform operation
fmsub.s f15, f6, f26, f3, rmm # perform operation
fmsub.s f15, f6, f26, f3, rne # perform operation
fmsub.s f15, f6, f26, f3, rtz # perform operation
fmsub.s f15, f6, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f6, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f6, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x27, 0xdac61a20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x3e75198d # load x3 with value 0x3e75198d
sw x3, 0(x2) # store 0x3e75198d in memory
flw f20, 0(x2) # load 0x3e75198d from memory into f20
fmsub.s f27, f17, f16, f20, dyn # perform operation
fmsub.s f27, f17, f16, f20, rdn # perform operation
fmsub.s f27, f17, f16, f20, rmm # perform operation
fmsub.s f27, f17, f16, f20, rne # perform operation
fmsub.s f27, f17, f16, f20, rtz # perform operation
fmsub.s f27, f17, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f17, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x7, 0x53daeee2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xdbe252e1 # load x3 with value 0xdbe252e1
sw x3, 0(x2) # store 0xdbe252e1 in memory
flw f23, 0(x2) # load 0xdbe252e1 from memory into f23
fmsub.s f7, f10, f19, f23, dyn # perform operation
fmsub.s f7, f10, f19, f23, rdn # perform operation
fmsub.s f7, f10, f19, f23, rmm # perform operation
fmsub.s f7, f10, f19, f23, rne # perform operation
fmsub.s f7, f10, f19, f23, rtz # perform operation
fmsub.s f7, f10, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x18, 0xd7081dd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xf36f2300 # load x3 with value 0xf36f2300
sw x3, 0(x2) # store 0xf36f2300 in memory
flw f10, 0(x2) # load 0xf36f2300 from memory into f10
fmsub.s f18, f8, f1, f10, dyn # perform operation
fmsub.s f18, f8, f1, f10, rdn # perform operation
fmsub.s f18, f8, f1, f10, rmm # perform operation
fmsub.s f18, f8, f1, f10, rne # perform operation
fmsub.s f18, f8, f1, f10, rtz # perform operation
fmsub.s f18, f8, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f8, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f8, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f8, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f8, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f8, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x7, 0x6004e787 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x0ad7f2f5 # load x3 with value 0x0ad7f2f5
sw x3, 0(x2) # store 0x0ad7f2f5 in memory
flw f5, 0(x2) # load 0x0ad7f2f5 from memory into f5
fmsub.s f7, f8, f3, f5, dyn # perform operation
fmsub.s f7, f8, f3, f5, rdn # perform operation
fmsub.s f7, f8, f3, f5, rmm # perform operation
fmsub.s f7, f8, f3, f5, rne # perform operation
fmsub.s f7, f8, f3, f5, rtz # perform operation
fmsub.s f7, f8, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f8, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f8, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x1, 0x5a421d1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x0377b792 # load x3 with value 0x0377b792
sw x3, 0(x2) # store 0x0377b792 in memory
flw f28, 0(x2) # load 0x0377b792 from memory into f28
fmsub.s f1, f5, f14, f28, dyn # perform operation
fmsub.s f1, f5, f14, f28, rdn # perform operation
fmsub.s f1, f5, f14, f28, rmm # perform operation
fmsub.s f1, f5, f14, f28, rne # perform operation
fmsub.s f1, f5, f14, f28, rtz # perform operation
fmsub.s f1, f5, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f5, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x10, 0x2fe8b08a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xc4422923 # load x3 with value 0xc4422923
sw x3, 0(x2) # store 0xc4422923 in memory
flw f3, 0(x2) # load 0xc4422923 from memory into f3
fmsub.s f10, f17, f2, f3, dyn # perform operation
fmsub.s f10, f17, f2, f3, rdn # perform operation
fmsub.s f10, f17, f2, f3, rmm # perform operation
fmsub.s f10, f17, f2, f3, rne # perform operation
fmsub.s f10, f17, f2, f3, rtz # perform operation
fmsub.s f10, f17, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x23, 0x9ebc2131 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0xf5815d80 # load x3 with value 0xf5815d80
sw x3, 0(x2) # store 0xf5815d80 in memory
flw f17, 0(x2) # load 0xf5815d80 from memory into f17
fmsub.s f23, f29, f21, f17, dyn # perform operation
fmsub.s f23, f29, f21, f17, rdn # perform operation
fmsub.s f23, f29, f21, f17, rmm # perform operation
fmsub.s f23, f29, f21, f17, rne # perform operation
fmsub.s f23, f29, f21, f17, rtz # perform operation
fmsub.s f23, f29, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x6, 0x1ff8a5f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0xfcaef640 # load x3 with value 0xfcaef640
sw x3, 0(x2) # store 0xfcaef640 in memory
flw f16, 0(x2) # load 0xfcaef640 from memory into f16
fmsub.s f6, f5, f30, f16, dyn # perform operation
fmsub.s f6, f5, f30, f16, rdn # perform operation
fmsub.s f6, f5, f30, f16, rmm # perform operation
fmsub.s f6, f5, f30, f16, rne # perform operation
fmsub.s f6, f5, f30, f16, rtz # perform operation
fmsub.s f6, f5, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x10, 0x5ad24bac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x1799181b # load x3 with value 0x1799181b
sw x3, 0(x2) # store 0x1799181b in memory
flw f26, 0(x2) # load 0x1799181b from memory into f26
fmsub.s f10, f4, f6, f26, dyn # perform operation
fmsub.s f10, f4, f6, f26, rdn # perform operation
fmsub.s f10, f4, f6, f26, rmm # perform operation
fmsub.s f10, f4, f6, f26, rne # perform operation
fmsub.s f10, f4, f6, f26, rtz # perform operation
fmsub.s f10, f4, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f4, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x24, 0x9400cabf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xd111212f # load x3 with value 0xd111212f
sw x3, 0(x2) # store 0xd111212f in memory
flw f18, 0(x2) # load 0xd111212f from memory into f18
fmsub.s f24, f12, f28, f18, dyn # perform operation
fmsub.s f24, f12, f28, f18, rdn # perform operation
fmsub.s f24, f12, f28, f18, rmm # perform operation
fmsub.s f24, f12, f28, f18, rne # perform operation
fmsub.s f24, f12, f28, f18, rtz # perform operation
fmsub.s f24, f12, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f12, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f12, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f12, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f12, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f12, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x16, 0xb1323c76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
li x3, 0x6e8d588b # load x3 with value 0x6e8d588b
sw x3, 0(x2) # store 0x6e8d588b in memory
flw f8, 0(x2) # load 0x6e8d588b from memory into f8
fmsub.s f16, f5, f28, f8, dyn # perform operation
fmsub.s f16, f5, f28, f8, rdn # perform operation
fmsub.s f16, f5, f28, f8, rmm # perform operation
fmsub.s f16, f5, f28, f8, rne # perform operation
fmsub.s f16, f5, f28, f8, rtz # perform operation
fmsub.s f16, f5, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f5, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f5, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x29, 0x330adbd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xdf9dc6f8 # load x3 with value 0xdf9dc6f8
sw x3, 0(x2) # store 0xdf9dc6f8 in memory
flw f23, 0(x2) # load 0xdf9dc6f8 from memory into f23
fmsub.s f29, f27, f10, f23, dyn # perform operation
fmsub.s f29, f27, f10, f23, rdn # perform operation
fmsub.s f29, f27, f10, f23, rmm # perform operation
fmsub.s f29, f27, f10, f23, rne # perform operation
fmsub.s f29, f27, f10, f23, rtz # perform operation
fmsub.s f29, f27, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f27, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f27, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x3, 0x76cfa6d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x66c8709b # load x3 with value 0x66c8709b
sw x3, 0(x2) # store 0x66c8709b in memory
flw f1, 0(x2) # load 0x66c8709b from memory into f1
fmsub.s f3, f17, f8, f1, dyn # perform operation
fmsub.s f3, f17, f8, f1, rdn # perform operation
fmsub.s f3, f17, f8, f1, rmm # perform operation
fmsub.s f3, f17, f8, f1, rne # perform operation
fmsub.s f3, f17, f8, f1, rtz # perform operation
fmsub.s f3, f17, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f17, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f17, f8, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x1, 0x4833461f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x5dc80807 # load x3 with value 0x5dc80807
sw x3, 0(x2) # store 0x5dc80807 in memory
flw f9, 0(x2) # load 0x5dc80807 from memory into f9
fmsub.s f1, f18, f30, f9, dyn # perform operation
fmsub.s f1, f18, f30, f9, rdn # perform operation
fmsub.s f1, f18, f30, f9, rmm # perform operation
fmsub.s f1, f18, f30, f9, rne # perform operation
fmsub.s f1, f18, f30, f9, rtz # perform operation
fmsub.s f1, f18, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f18, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f18, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x2, 0x67130259 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xe3255e0c # load x3 with value 0xe3255e0c
sw x3, 0(x2) # store 0xe3255e0c in memory
flw f20, 0(x2) # load 0xe3255e0c from memory into f20
fmsub.s f2, f9, f17, f20, dyn # perform operation
fmsub.s f2, f9, f17, f20, rdn # perform operation
fmsub.s f2, f9, f17, f20, rmm # perform operation
fmsub.s f2, f9, f17, f20, rne # perform operation
fmsub.s f2, f9, f17, f20, rtz # perform operation
fmsub.s f2, f9, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f9, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x26, 0x6414543d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x70785604 # load x3 with value 0x70785604
sw x3, 0(x2) # store 0x70785604 in memory
flw f28, 0(x2) # load 0x70785604 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmsub.s f26, f29, f28, f10, dyn # perform operation
fmsub.s f26, f29, f28, f10, rdn # perform operation
fmsub.s f26, f29, f28, f10, rmm # perform operation
fmsub.s f26, f29, f28, f10, rne # perform operation
fmsub.s f26, f29, f28, f10, rtz # perform operation
fmsub.s f26, f29, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f29, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f29, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x28, 0xc7458f1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xbd25c250 # load x3 with value 0xbd25c250
sw x3, 0(x2) # store 0xbd25c250 in memory
flw f26, 0(x2) # load 0xbd25c250 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fmsub.s f28, f19, f26, f20, dyn # perform operation
fmsub.s f28, f19, f26, f20, rdn # perform operation
fmsub.s f28, f19, f26, f20, rmm # perform operation
fmsub.s f28, f19, f26, f20, rne # perform operation
fmsub.s f28, f19, f26, f20, rtz # perform operation
fmsub.s f28, f19, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f19, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f19, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x7, 0x1d4717bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0xdb44ee45 # load x3 with value 0xdb44ee45
sw x3, 0(x2) # store 0xdb44ee45 in memory
flw f30, 0(x2) # load 0xdb44ee45 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmsub.s f7, f16, f30, f8, dyn # perform operation
fmsub.s f7, f16, f30, f8, rdn # perform operation
fmsub.s f7, f16, f30, f8, rmm # perform operation
fmsub.s f7, f16, f30, f8, rne # perform operation
fmsub.s f7, f16, f30, f8, rtz # perform operation
fmsub.s f7, f16, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f16, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x8, 0xdb9bb3ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x6c3ff817 # load x3 with value 0x6c3ff817
sw x3, 0(x2) # store 0x6c3ff817 in memory
flw f3, 0(x2) # load 0x6c3ff817 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmsub.s f8, f16, f3, f12, dyn # perform operation
fmsub.s f8, f16, f3, f12, rdn # perform operation
fmsub.s f8, f16, f3, f12, rmm # perform operation
fmsub.s f8, f16, f3, f12, rne # perform operation
fmsub.s f8, f16, f3, f12, rtz # perform operation
fmsub.s f8, f16, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f16, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f16, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x23, 0xe1b04825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xa00be2e3 # load x3 with value 0xa00be2e3
sw x3, 0(x2) # store 0xa00be2e3 in memory
flw f9, 0(x2) # load 0xa00be2e3 from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fmsub.s f23, f21, f9, f18, dyn # perform operation
fmsub.s f23, f21, f9, f18, rdn # perform operation
fmsub.s f23, f21, f9, f18, rmm # perform operation
fmsub.s f23, f21, f9, f18, rne # perform operation
fmsub.s f23, f21, f9, f18, rtz # perform operation
fmsub.s f23, f21, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x25, 0xceed51d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x2f723a39 # load x3 with value 0x2f723a39
sw x3, 0(x2) # store 0x2f723a39 in memory
flw f20, 0(x2) # load 0x2f723a39 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmsub.s f25, f1, f20, f28, dyn # perform operation
fmsub.s f25, f1, f20, f28, rdn # perform operation
fmsub.s f25, f1, f20, f28, rmm # perform operation
fmsub.s f25, f1, f20, f28, rne # perform operation
fmsub.s f25, f1, f20, f28, rtz # perform operation
fmsub.s f25, f1, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f1, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f1, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f1, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f1, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f1, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x2, 0x3052018a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x717a5a99 # load x3 with value 0x717a5a99
sw x3, 0(x2) # store 0x717a5a99 in memory
flw f26, 0(x2) # load 0x717a5a99 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmsub.s f2, f20, f26, f18, dyn # perform operation
fmsub.s f2, f20, f26, f18, rdn # perform operation
fmsub.s f2, f20, f26, f18, rmm # perform operation
fmsub.s f2, f20, f26, f18, rne # perform operation
fmsub.s f2, f20, f26, f18, rtz # perform operation
fmsub.s f2, f20, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f20, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f20, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x30, 0x89525db3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xfdff1cbb # load x3 with value 0xfdff1cbb
sw x3, 0(x2) # store 0xfdff1cbb in memory
flw f8, 0(x2) # load 0xfdff1cbb from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmsub.s f30, f2, f8, f3, dyn # perform operation
fmsub.s f30, f2, f8, f3, rdn # perform operation
fmsub.s f30, f2, f8, f3, rmm # perform operation
fmsub.s f30, f2, f8, f3, rne # perform operation
fmsub.s f30, f2, f8, f3, rtz # perform operation
fmsub.s f30, f2, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x16, 0x3121220c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xc3a549cd # load x3 with value 0xc3a549cd
sw x3, 0(x2) # store 0xc3a549cd in memory
flw f31, 0(x2) # load 0xc3a549cd from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fmsub.s f16, f29, f31, f2, dyn # perform operation
fmsub.s f16, f29, f31, f2, rdn # perform operation
fmsub.s f16, f29, f31, f2, rmm # perform operation
fmsub.s f16, f29, f31, f2, rne # perform operation
fmsub.s f16, f29, f31, f2, rtz # perform operation
fmsub.s f16, f29, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f29, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f29, f31, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x10, 0x0960211c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x95fa1300 # load x3 with value 0x95fa1300
sw x3, 0(x2) # store 0x95fa1300 in memory
flw f4, 0(x2) # load 0x95fa1300 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmsub.s f10, f17, f4, f28, dyn # perform operation
fmsub.s f10, f17, f4, f28, rdn # perform operation
fmsub.s f10, f17, f4, f28, rmm # perform operation
fmsub.s f10, f17, f4, f28, rne # perform operation
fmsub.s f10, f17, f4, f28, rtz # perform operation
fmsub.s f10, f17, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f17, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f17, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f17, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f17, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f17, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x25, 0x23f8b7b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x77040b23 # load x3 with value 0x77040b23
sw x3, 0(x2) # store 0x77040b23 in memory
flw f24, 0(x2) # load 0x77040b23 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmsub.s f25, f29, f24, f7, dyn # perform operation
fmsub.s f25, f29, f24, f7, rdn # perform operation
fmsub.s f25, f29, f24, f7, rmm # perform operation
fmsub.s f25, f29, f24, f7, rne # perform operation
fmsub.s f25, f29, f24, f7, rtz # perform operation
fmsub.s f25, f29, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x22, 0x3542fa42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0xa0fdf2c2 # load x3 with value 0xa0fdf2c2
sw x3, 0(x2) # store 0xa0fdf2c2 in memory
flw f26, 0(x2) # load 0xa0fdf2c2 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmsub.s f22, f28, f26, f15, dyn # perform operation
fmsub.s f22, f28, f26, f15, rdn # perform operation
fmsub.s f22, f28, f26, f15, rmm # perform operation
fmsub.s f22, f28, f26, f15, rne # perform operation
fmsub.s f22, f28, f26, f15, rtz # perform operation
fmsub.s f22, f28, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f28, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f28, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f28, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f28, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f28, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x4, 0xf7a54290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0xac5494e3 # load x3 with value 0xac5494e3
sw x3, 0(x2) # store 0xac5494e3 in memory
flw f21, 0(x2) # load 0xac5494e3 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmsub.s f4, f23, f21, f28, dyn # perform operation
fmsub.s f4, f23, f21, f28, rdn # perform operation
fmsub.s f4, f23, f21, f28, rmm # perform operation
fmsub.s f4, f23, f21, f28, rne # perform operation
fmsub.s f4, f23, f21, f28, rtz # perform operation
fmsub.s f4, f23, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f23, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f23, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x21, 0x7f5aded0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x79c67cbf # load x3 with value 0x79c67cbf
sw x3, 0(x2) # store 0x79c67cbf in memory
flw f31, 0(x2) # load 0x79c67cbf from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f21, f26, f31, f29, dyn # perform operation
fmsub.s f21, f26, f31, f29, rdn # perform operation
fmsub.s f21, f26, f31, f29, rmm # perform operation
fmsub.s f21, f26, f31, f29, rne # perform operation
fmsub.s f21, f26, f31, f29, rtz # perform operation
fmsub.s f21, f26, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f26, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f26, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x14, 0x8152a11a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x6873312f # load x3 with value 0x6873312f
sw x3, 0(x2) # store 0x6873312f in memory
flw f1, 0(x2) # load 0x6873312f from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fmsub.s f14, f29, f1, f6, dyn # perform operation
fmsub.s f14, f29, f1, f6, rdn # perform operation
fmsub.s f14, f29, f1, f6, rmm # perform operation
fmsub.s f14, f29, f1, f6, rne # perform operation
fmsub.s f14, f29, f1, f6, rtz # perform operation
fmsub.s f14, f29, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f29, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x19, 0x53c99627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x5c582206 # load x3 with value 0x5c582206
sw x3, 0(x2) # store 0x5c582206 in memory
flw f25, 0(x2) # load 0x5c582206 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmsub.s f19, f3, f25, f14, dyn # perform operation
fmsub.s f19, f3, f25, f14, rdn # perform operation
fmsub.s f19, f3, f25, f14, rmm # perform operation
fmsub.s f19, f3, f25, f14, rne # perform operation
fmsub.s f19, f3, f25, f14, rtz # perform operation
fmsub.s f19, f3, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x25, 0xdcae67f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xa4933a9c # load x3 with value 0xa4933a9c
sw x3, 0(x2) # store 0xa4933a9c in memory
flw f9, 0(x2) # load 0xa4933a9c from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fmsub.s f25, f18, f9, f12, dyn # perform operation
fmsub.s f25, f18, f9, f12, rdn # perform operation
fmsub.s f25, f18, f9, f12, rmm # perform operation
fmsub.s f25, f18, f9, f12, rne # perform operation
fmsub.s f25, f18, f9, f12, rtz # perform operation
fmsub.s f25, f18, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x20, 0xaa49d62f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x35434f0c # load x3 with value 0x35434f0c
sw x3, 0(x2) # store 0x35434f0c in memory
flw f8, 0(x2) # load 0x35434f0c from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmsub.s f20, f23, f8, f7, dyn # perform operation
fmsub.s f20, f23, f8, f7, rdn # perform operation
fmsub.s f20, f23, f8, f7, rmm # perform operation
fmsub.s f20, f23, f8, f7, rne # perform operation
fmsub.s f20, f23, f8, f7, rtz # perform operation
fmsub.s f20, f23, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f23, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f23, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f23, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f23, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f23, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x25, 0x80aecdaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xbacdab53 # load x3 with value 0xbacdab53
sw x3, 0(x2) # store 0xbacdab53 in memory
flw f8, 0(x2) # load 0xbacdab53 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fmsub.s f25, f19, f8, f9, dyn # perform operation
fmsub.s f25, f19, f8, f9, rdn # perform operation
fmsub.s f25, f19, f8, f9, rmm # perform operation
fmsub.s f25, f19, f8, f9, rne # perform operation
fmsub.s f25, f19, f8, f9, rtz # perform operation
fmsub.s f25, f19, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f19, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f19, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x14, 0xa94ed7bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0xfc2e37ce # load x3 with value 0xfc2e37ce
sw x3, 0(x2) # store 0xfc2e37ce in memory
flw f25, 0(x2) # load 0xfc2e37ce from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmsub.s f14, f24, f25, f10, dyn # perform operation
fmsub.s f14, f24, f25, f10, rdn # perform operation
fmsub.s f14, f24, f25, f10, rmm # perform operation
fmsub.s f14, f24, f25, f10, rne # perform operation
fmsub.s f14, f24, f25, f10, rtz # perform operation
fmsub.s f14, f24, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x30, 0xc21b129f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x81af68b8 # load x3 with value 0x81af68b8
sw x3, 0(x2) # store 0x81af68b8 in memory
flw f7, 0(x2) # load 0x81af68b8 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmsub.s f30, f14, f7, f8, dyn # perform operation
fmsub.s f30, f14, f7, f8, rdn # perform operation
fmsub.s f30, f14, f7, f8, rmm # perform operation
fmsub.s f30, f14, f7, f8, rne # perform operation
fmsub.s f30, f14, f7, f8, rtz # perform operation
fmsub.s f30, f14, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f14, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f14, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f14, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f14, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f14, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x3, 0x8be6ed90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x4e47b021 # load x3 with value 0x4e47b021
sw x3, 0(x2) # store 0x4e47b021 in memory
flw f30, 0(x2) # load 0x4e47b021 from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmsub.s f3, f20, f30, f7, dyn # perform operation
fmsub.s f3, f20, f30, f7, rdn # perform operation
fmsub.s f3, f20, f30, f7, rmm # perform operation
fmsub.s f3, f20, f30, f7, rne # perform operation
fmsub.s f3, f20, f30, f7, rtz # perform operation
fmsub.s f3, f20, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f20, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f20, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x15, 0x501e8107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0xcd07f7a9 # load x3 with value 0xcd07f7a9
sw x3, 0(x2) # store 0xcd07f7a9 in memory
flw f21, 0(x2) # load 0xcd07f7a9 from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmsub.s f15, f7, f21, f31, dyn # perform operation
fmsub.s f15, f7, f21, f31, rdn # perform operation
fmsub.s f15, f7, f21, f31, rmm # perform operation
fmsub.s f15, f7, f21, f31, rne # perform operation
fmsub.s f15, f7, f21, f31, rtz # perform operation
fmsub.s f15, f7, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f7, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f7, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x16, 0x50bc4c09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x5491987a # load x3 with value 0x5491987a
sw x3, 0(x2) # store 0x5491987a in memory
flw f7, 0(x2) # load 0x5491987a from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmsub.s f16, f4, f7, f1, dyn # perform operation
fmsub.s f16, f4, f7, f1, rdn # perform operation
fmsub.s f16, f4, f7, f1, rmm # perform operation
fmsub.s f16, f4, f7, f1, rne # perform operation
fmsub.s f16, f4, f7, f1, rtz # perform operation
fmsub.s f16, f4, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f4, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f4, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x30, 0x976d43b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x6df4e64a # load x3 with value 0x6df4e64a
sw x3, 0(x2) # store 0x6df4e64a in memory
flw f9, 0(x2) # load 0x6df4e64a from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmsub.s f30, f19, f9, f22, dyn # perform operation
fmsub.s f30, f19, f9, f22, rdn # perform operation
fmsub.s f30, f19, f9, f22, rmm # perform operation
fmsub.s f30, f19, f9, f22, rne # perform operation
fmsub.s f30, f19, f9, f22, rtz # perform operation
fmsub.s f30, f19, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f19, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x18, 0x6ad8bbcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x5d0a7d3e # load x3 with value 0x5d0a7d3e
sw x3, 0(x2) # store 0x5d0a7d3e in memory
flw f22, 0(x2) # load 0x5d0a7d3e from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmsub.s f18, f7, f22, f5, dyn # perform operation
fmsub.s f18, f7, f22, f5, rdn # perform operation
fmsub.s f18, f7, f22, f5, rmm # perform operation
fmsub.s f18, f7, f22, f5, rne # perform operation
fmsub.s f18, f7, f22, f5, rtz # perform operation
fmsub.s f18, f7, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x25, 0x4e5835f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0xa19a6ded # load x3 with value 0xa19a6ded
sw x3, 0(x2) # store 0xa19a6ded in memory
flw f6, 0(x2) # load 0xa19a6ded from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fmsub.s f25, f2, f6, f31, dyn # perform operation
fmsub.s f25, f2, f6, f31, rdn # perform operation
fmsub.s f25, f2, f6, f31, rmm # perform operation
fmsub.s f25, f2, f6, f31, rne # perform operation
fmsub.s f25, f2, f6, f31, rtz # perform operation
fmsub.s f25, f2, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f2, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f2, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x22, 0x131d36fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xa031dcf8 # load x3 with value 0xa031dcf8
sw x3, 0(x2) # store 0xa031dcf8 in memory
flw f2, 0(x2) # load 0xa031dcf8 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fmsub.s f22, f9, f2, f13, dyn # perform operation
fmsub.s f22, f9, f2, f13, rdn # perform operation
fmsub.s f22, f9, f2, f13, rmm # perform operation
fmsub.s f22, f9, f2, f13, rne # perform operation
fmsub.s f22, f9, f2, f13, rtz # perform operation
fmsub.s f22, f9, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x15, 0x8aafe842 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x59b67a64 # load x3 with value 0x59b67a64
sw x3, 0(x2) # store 0x59b67a64 in memory
flw f31, 0(x2) # load 0x59b67a64 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fmsub.s f15, f24, f31, f7, dyn # perform operation
fmsub.s f15, f24, f31, f7, rdn # perform operation
fmsub.s f15, f24, f31, f7, rmm # perform operation
fmsub.s f15, f24, f31, f7, rne # perform operation
fmsub.s f15, f24, f31, f7, rtz # perform operation
fmsub.s f15, f24, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x3, 0x90dae631 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x36f3e4ad # load x3 with value 0x36f3e4ad
sw x3, 0(x2) # store 0x36f3e4ad in memory
flw f21, 0(x2) # load 0x36f3e4ad from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmsub.s f3, f2, f21, f22, dyn # perform operation
fmsub.s f3, f2, f21, f22, rdn # perform operation
fmsub.s f3, f2, f21, f22, rmm # perform operation
fmsub.s f3, f2, f21, f22, rne # perform operation
fmsub.s f3, f2, f21, f22, rtz # perform operation
fmsub.s f3, f2, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f2, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f2, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x13, 0x9dd66268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xb1d9a464 # load x3 with value 0xb1d9a464
sw x3, 0(x2) # store 0xb1d9a464 in memory
flw f10, 0(x2) # load 0xb1d9a464 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmsub.s f13, f16, f10, f30, dyn # perform operation
fmsub.s f13, f16, f10, f30, rdn # perform operation
fmsub.s f13, f16, f10, f30, rmm # perform operation
fmsub.s f13, f16, f10, f30, rne # perform operation
fmsub.s f13, f16, f10, f30, rtz # perform operation
fmsub.s f13, f16, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f16, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f16, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x13, 0xcb8cf6de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xa0df2f6b # load x3 with value 0xa0df2f6b
sw x3, 0(x2) # store 0xa0df2f6b in memory
flw f22, 0(x2) # load 0xa0df2f6b from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmsub.s f13, f25, f22, f5, dyn # perform operation
fmsub.s f13, f25, f22, f5, rdn # perform operation
fmsub.s f13, f25, f22, f5, rmm # perform operation
fmsub.s f13, f25, f22, f5, rne # perform operation
fmsub.s f13, f25, f22, f5, rtz # perform operation
fmsub.s f13, f25, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f25, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x22, 0x33173c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xe8f64956 # load x3 with value 0xe8f64956
sw x3, 0(x2) # store 0xe8f64956 in memory
flw f23, 0(x2) # load 0xe8f64956 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmsub.s f22, f7, f23, f11, dyn # perform operation
fmsub.s f22, f7, f23, f11, rdn # perform operation
fmsub.s f22, f7, f23, f11, rmm # perform operation
fmsub.s f22, f7, f23, f11, rne # perform operation
fmsub.s f22, f7, f23, f11, rtz # perform operation
fmsub.s f22, f7, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f7, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f7, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f7, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f7, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f7, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x24, 0x072f1153 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x32c05a97 # load x3 with value 0x32c05a97
sw x3, 0(x2) # store 0x32c05a97 in memory
flw f16, 0(x2) # load 0x32c05a97 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmsub.s f24, f25, f16, f18, dyn # perform operation
fmsub.s f24, f25, f16, f18, rdn # perform operation
fmsub.s f24, f25, f16, f18, rmm # perform operation
fmsub.s f24, f25, f16, f18, rne # perform operation
fmsub.s f24, f25, f16, f18, rtz # perform operation
fmsub.s f24, f25, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f25, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x27, 0xfb58dfdc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x85237d2c # load x3 with value 0x85237d2c
sw x3, 0(x2) # store 0x85237d2c in memory
flw f20, 0(x2) # load 0x85237d2c from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fmsub.s f27, f31, f20, f28, dyn # perform operation
fmsub.s f27, f31, f20, f28, rdn # perform operation
fmsub.s f27, f31, f20, f28, rmm # perform operation
fmsub.s f27, f31, f20, f28, rne # perform operation
fmsub.s f27, f31, f20, f28, rtz # perform operation
fmsub.s f27, f31, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f31, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f31, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f31, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f31, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f31, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x29, 0x4130de4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x7d80c32b # load x3 with value 0x7d80c32b
sw x3, 0(x2) # store 0x7d80c32b in memory
flw f31, 0(x2) # load 0x7d80c32b from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmsub.s f29, f10, f31, f1, dyn # perform operation
fmsub.s f29, f10, f31, f1, rdn # perform operation
fmsub.s f29, f10, f31, f1, rmm # perform operation
fmsub.s f29, f10, f31, f1, rne # perform operation
fmsub.s f29, f10, f31, f1, rtz # perform operation
fmsub.s f29, f10, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x12, 0x74b748c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x78556948 # load x3 with value 0x78556948
sw x3, 0(x2) # store 0x78556948 in memory
flw f27, 0(x2) # load 0x78556948 from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmsub.s f12, f9, f27, f2, dyn # perform operation
fmsub.s f12, f9, f27, f2, rdn # perform operation
fmsub.s f12, f9, f27, f2, rmm # perform operation
fmsub.s f12, f9, f27, f2, rne # perform operation
fmsub.s f12, f9, f27, f2, rtz # perform operation
fmsub.s f12, f9, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f9, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f9, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f9, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f9, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f9, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x28, 0x607caa61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0xa49a957b # load x3 with value 0xa49a957b
sw x3, 0(x2) # store 0xa49a957b in memory
flw f18, 0(x2) # load 0xa49a957b from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fmsub.s f28, f21, f18, f16, dyn # perform operation
fmsub.s f28, f21, f18, f16, rdn # perform operation
fmsub.s f28, f21, f18, f16, rmm # perform operation
fmsub.s f28, f21, f18, f16, rne # perform operation
fmsub.s f28, f21, f18, f16, rtz # perform operation
fmsub.s f28, f21, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f21, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f21, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f21, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f21, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f21, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x30, 0xf27838cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x288bb791 # load x3 with value 0x288bb791
sw x3, 0(x2) # store 0x288bb791 in memory
flw f8, 0(x2) # load 0x288bb791 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmsub.s f30, f23, f8, f13, dyn # perform operation
fmsub.s f30, f23, f8, f13, rdn # perform operation
fmsub.s f30, f23, f8, f13, rmm # perform operation
fmsub.s f30, f23, f8, f13, rne # perform operation
fmsub.s f30, f23, f8, f13, rtz # perform operation
fmsub.s f30, f23, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f23, f8, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x6, 0xe331bb7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0xcfd5ab6b # load x3 with value 0xcfd5ab6b
sw x3, 0(x2) # store 0xcfd5ab6b in memory
flw f16, 0(x2) # load 0xcfd5ab6b from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f6, f14, f16, f5, dyn # perform operation
fmsub.s f6, f14, f16, f5, rdn # perform operation
fmsub.s f6, f14, f16, f5, rmm # perform operation
fmsub.s f6, f14, f16, f5, rne # perform operation
fmsub.s f6, f14, f16, f5, rtz # perform operation
fmsub.s f6, f14, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f14, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f14, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x28, 0x36583781 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x14b747c1 # load x3 with value 0x14b747c1
sw x3, 0(x2) # store 0x14b747c1 in memory
flw f16, 0(x2) # load 0x14b747c1 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fmsub.s f28, f29, f16, f11, dyn # perform operation
fmsub.s f28, f29, f16, f11, rdn # perform operation
fmsub.s f28, f29, f16, f11, rmm # perform operation
fmsub.s f28, f29, f16, f11, rne # perform operation
fmsub.s f28, f29, f16, f11, rtz # perform operation
fmsub.s f28, f29, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f29, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x30, 0x7e994232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x00747589 # load x3 with value 0x00747589
sw x3, 0(x2) # store 0x00747589 in memory
flw f7, 0(x2) # load 0x00747589 from memory into f7
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmsub.s f30, f17, f7, f5, dyn # perform operation
fmsub.s f30, f17, f7, f5, rdn # perform operation
fmsub.s f30, f17, f7, f5, rmm # perform operation
fmsub.s f30, f17, f7, f5, rne # perform operation
fmsub.s f30, f17, f7, f5, rtz # perform operation
fmsub.s f30, f17, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f17, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f17, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x12, 0xfae16d1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x76c414e4 # load x3 with value 0x76c414e4
sw x3, 0(x2) # store 0x76c414e4 in memory
flw f13, 0(x2) # load 0x76c414e4 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f12, f16, f13, f26, dyn # perform operation
fmsub.s f12, f16, f13, f26, rdn # perform operation
fmsub.s f12, f16, f13, f26, rmm # perform operation
fmsub.s f12, f16, f13, f26, rne # perform operation
fmsub.s f12, f16, f13, f26, rtz # perform operation
fmsub.s f12, f16, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f16, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f16, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f16, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f16, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f16, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x16, 0xefb98dfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x27b454ed # load x3 with value 0x27b454ed
sw x3, 0(x2) # store 0x27b454ed in memory
flw f9, 0(x2) # load 0x27b454ed from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmsub.s f16, f28, f9, f5, dyn # perform operation
fmsub.s f16, f28, f9, f5, rdn # perform operation
fmsub.s f16, f28, f9, f5, rmm # perform operation
fmsub.s f16, f28, f9, f5, rne # perform operation
fmsub.s f16, f28, f9, f5, rtz # perform operation
fmsub.s f16, f28, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x17, 0xe642fa9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0xd67c1045 # load x3 with value 0xd67c1045
sw x3, 0(x2) # store 0xd67c1045 in memory
flw f25, 0(x2) # load 0xd67c1045 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmsub.s f17, f12, f25, f24, dyn # perform operation
fmsub.s f17, f12, f25, f24, rdn # perform operation
fmsub.s f17, f12, f25, f24, rmm # perform operation
fmsub.s f17, f12, f25, f24, rne # perform operation
fmsub.s f17, f12, f25, f24, rtz # perform operation
fmsub.s f17, f12, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f12, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f12, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x27, 0xfdc670aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x3da1fe59 # load x3 with value 0x3da1fe59
sw x3, 0(x2) # store 0x3da1fe59 in memory
flw f7, 0(x2) # load 0x3da1fe59 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmsub.s f27, f9, f7, f10, dyn # perform operation
fmsub.s f27, f9, f7, f10, rdn # perform operation
fmsub.s f27, f9, f7, f10, rmm # perform operation
fmsub.s f27, f9, f7, f10, rne # perform operation
fmsub.s f27, f9, f7, f10, rtz # perform operation
fmsub.s f27, f9, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f9, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f9, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f9, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f9, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f9, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x9, 0xba48041d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x840f46dd # load x3 with value 0x840f46dd
sw x3, 0(x2) # store 0x840f46dd in memory
flw f27, 0(x2) # load 0x840f46dd from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmsub.s f9, f10, f27, f13, dyn # perform operation
fmsub.s f9, f10, f27, f13, rdn # perform operation
fmsub.s f9, f10, f27, f13, rmm # perform operation
fmsub.s f9, f10, f27, f13, rne # perform operation
fmsub.s f9, f10, f27, f13, rtz # perform operation
fmsub.s f9, f10, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f10, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f10, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x3, 0xef2e90da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x187b8ffd # load x3 with value 0x187b8ffd
sw x3, 0(x2) # store 0x187b8ffd in memory
flw f28, 0(x2) # load 0x187b8ffd from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmsub.s f3, f25, f28, f6, dyn # perform operation
fmsub.s f3, f25, f28, f6, rdn # perform operation
fmsub.s f3, f25, f28, f6, rmm # perform operation
fmsub.s f3, f25, f28, f6, rne # perform operation
fmsub.s f3, f25, f28, f6, rtz # perform operation
fmsub.s f3, f25, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f25, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f25, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f25, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f25, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f25, f28, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x27, 0xf995ce68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0xa1453ba9 # load x3 with value 0xa1453ba9
sw x3, 0(x2) # store 0xa1453ba9 in memory
flw f23, 0(x2) # load 0xa1453ba9 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fmsub.s f27, f30, f23, f19, dyn # perform operation
fmsub.s f27, f30, f23, f19, rdn # perform operation
fmsub.s f27, f30, f23, f19, rmm # perform operation
fmsub.s f27, f30, f23, f19, rne # perform operation
fmsub.s f27, f30, f23, f19, rtz # perform operation
fmsub.s f27, f30, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f30, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f30, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x17, 0x437f91be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xa5d503a1 # load x3 with value 0xa5d503a1
sw x3, 0(x2) # store 0xa5d503a1 in memory
flw f19, 0(x2) # load 0xa5d503a1 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmsub.s f17, f15, f19, f9, dyn # perform operation
fmsub.s f17, f15, f19, f9, rdn # perform operation
fmsub.s f17, f15, f19, f9, rmm # perform operation
fmsub.s f17, f15, f19, f9, rne # perform operation
fmsub.s f17, f15, f19, f9, rtz # perform operation
fmsub.s f17, f15, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f15, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f15, f19, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x31, 0xdc04e662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x2d6a1e6a # load x3 with value 0x2d6a1e6a
sw x3, 0(x2) # store 0x2d6a1e6a in memory
flw f6, 0(x2) # load 0x2d6a1e6a from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
fmsub.s f31, f7, f6, f8, dyn # perform operation
fmsub.s f31, f7, f6, f8, rdn # perform operation
fmsub.s f31, f7, f6, f8, rmm # perform operation
fmsub.s f31, f7, f6, f8, rne # perform operation
fmsub.s f31, f7, f6, f8, rtz # perform operation
fmsub.s f31, f7, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f7, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f7, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x13, 0x9fa1c6a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x2d866d35 # load x3 with value 0x2d866d35
sw x3, 0(x2) # store 0x2d866d35 in memory
flw f4, 0(x2) # load 0x2d866d35 from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmsub.s f13, f3, f4, f23, dyn # perform operation
fmsub.s f13, f3, f4, f23, rdn # perform operation
fmsub.s f13, f3, f4, f23, rmm # perform operation
fmsub.s f13, f3, f4, f23, rne # perform operation
fmsub.s f13, f3, f4, f23, rtz # perform operation
fmsub.s f13, f3, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x9, 0x69c92ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xf8090de9 # load x3 with value 0xf8090de9
sw x3, 0(x2) # store 0xf8090de9 in memory
flw f16, 0(x2) # load 0xf8090de9 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmsub.s f9, f6, f16, f17, dyn # perform operation
fmsub.s f9, f6, f16, f17, rdn # perform operation
fmsub.s f9, f6, f16, f17, rmm # perform operation
fmsub.s f9, f6, f16, f17, rne # perform operation
fmsub.s f9, f6, f16, f17, rtz # perform operation
fmsub.s f9, f6, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x26, 0xb6dd4b51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0xa6aa02df # load x3 with value 0xa6aa02df
sw x3, 0(x2) # store 0xa6aa02df in memory
flw f18, 0(x2) # load 0xa6aa02df from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmsub.s f26, f23, f18, f22, dyn # perform operation
fmsub.s f26, f23, f18, f22, rdn # perform operation
fmsub.s f26, f23, f18, f22, rmm # perform operation
fmsub.s f26, f23, f18, f22, rne # perform operation
fmsub.s f26, f23, f18, f22, rtz # perform operation
fmsub.s f26, f23, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x10, 0x4af6f0d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x51b8f11a # load x3 with value 0x51b8f11a
sw x3, 0(x2) # store 0x51b8f11a in memory
flw f18, 0(x2) # load 0x51b8f11a from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f10, f1, f18, f9, dyn # perform operation
fmsub.s f10, f1, f18, f9, rdn # perform operation
fmsub.s f10, f1, f18, f9, rmm # perform operation
fmsub.s f10, f1, f18, f9, rne # perform operation
fmsub.s f10, f1, f18, f9, rtz # perform operation
fmsub.s f10, f1, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f1, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f1, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x5, 0x456e221d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x2574408b # load x3 with value 0x2574408b
sw x3, 0(x2) # store 0x2574408b in memory
flw f6, 0(x2) # load 0x2574408b from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fmsub.s f5, f15, f6, f29, dyn # perform operation
fmsub.s f5, f15, f6, f29, rdn # perform operation
fmsub.s f5, f15, f6, f29, rmm # perform operation
fmsub.s f5, f15, f6, f29, rne # perform operation
fmsub.s f5, f15, f6, f29, rtz # perform operation
fmsub.s f5, f15, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f15, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f15, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f15, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f15, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f15, f6, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x12, 0x31591bcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x58a9eb5c # load x3 with value 0x58a9eb5c
sw x3, 0(x2) # store 0x58a9eb5c in memory
flw f27, 0(x2) # load 0x58a9eb5c from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fmsub.s f12, f18, f27, f21, dyn # perform operation
fmsub.s f12, f18, f27, f21, rdn # perform operation
fmsub.s f12, f18, f27, f21, rmm # perform operation
fmsub.s f12, f18, f27, f21, rne # perform operation
fmsub.s f12, f18, f27, f21, rtz # perform operation
fmsub.s f12, f18, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f18, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f18, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x4, 0x8bdcf453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x1527a669 # load x3 with value 0x1527a669
sw x3, 0(x2) # store 0x1527a669 in memory
flw f20, 0(x2) # load 0x1527a669 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmsub.s f4, f23, f20, f5, dyn # perform operation
fmsub.s f4, f23, f20, f5, rdn # perform operation
fmsub.s f4, f23, f20, f5, rmm # perform operation
fmsub.s f4, f23, f20, f5, rne # perform operation
fmsub.s f4, f23, f20, f5, rtz # perform operation
fmsub.s f4, f23, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f23, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x23, 0xc0edc976 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xfa99e79a # load x3 with value 0xfa99e79a
sw x3, 0(x2) # store 0xfa99e79a in memory
flw f8, 0(x2) # load 0xfa99e79a from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmsub.s f23, f7, f8, f28, dyn # perform operation
fmsub.s f23, f7, f8, f28, rdn # perform operation
fmsub.s f23, f7, f8, f28, rmm # perform operation
fmsub.s f23, f7, f8, f28, rne # perform operation
fmsub.s f23, f7, f8, f28, rtz # perform operation
fmsub.s f23, f7, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f7, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f7, f8, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x18, 0xcd8729b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0xec085ee1 # load x3 with value 0xec085ee1
sw x3, 0(x2) # store 0xec085ee1 in memory
flw f4, 0(x2) # load 0xec085ee1 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmsub.s f18, f31, f4, f15, dyn # perform operation
fmsub.s f18, f31, f4, f15, rdn # perform operation
fmsub.s f18, f31, f4, f15, rmm # perform operation
fmsub.s f18, f31, f4, f15, rne # perform operation
fmsub.s f18, f31, f4, f15, rtz # perform operation
fmsub.s f18, f31, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f4, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x14, 0x2adf1757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0xd4393fb0 # load x3 with value 0xd4393fb0
sw x3, 0(x2) # store 0xd4393fb0 in memory
flw f22, 0(x2) # load 0xd4393fb0 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmsub.s f14, f13, f22, f1, dyn # perform operation
fmsub.s f14, f13, f22, f1, rdn # perform operation
fmsub.s f14, f13, f22, f1, rmm # perform operation
fmsub.s f14, f13, f22, f1, rne # perform operation
fmsub.s f14, f13, f22, f1, rtz # perform operation
fmsub.s f14, f13, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f13, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f13, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x4, 0xa52b7379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x3938eaf6 # load x3 with value 0x3938eaf6
sw x3, 0(x2) # store 0x3938eaf6 in memory
flw f27, 0(x2) # load 0x3938eaf6 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f4, f1, f27, f18, dyn # perform operation
fmsub.s f4, f1, f27, f18, rdn # perform operation
fmsub.s f4, f1, f27, f18, rmm # perform operation
fmsub.s f4, f1, f27, f18, rne # perform operation
fmsub.s f4, f1, f27, f18, rtz # perform operation
fmsub.s f4, f1, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f1, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x14, 0xd5e0077d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xcdbacc4e # load x3 with value 0xcdbacc4e
sw x3, 0(x2) # store 0xcdbacc4e in memory
flw f30, 0(x2) # load 0xcdbacc4e from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fmsub.s f14, f8, f30, f10, dyn # perform operation
fmsub.s f14, f8, f30, f10, rdn # perform operation
fmsub.s f14, f8, f30, f10, rmm # perform operation
fmsub.s f14, f8, f30, f10, rne # perform operation
fmsub.s f14, f8, f30, f10, rtz # perform operation
fmsub.s f14, f8, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f8, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x5, 0x07822ebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0xbdb4afaa # load x3 with value 0xbdb4afaa
sw x3, 0(x2) # store 0xbdb4afaa in memory
flw f12, 0(x2) # load 0xbdb4afaa from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmsub.s f5, f19, f12, f8, dyn # perform operation
fmsub.s f5, f19, f12, f8, rdn # perform operation
fmsub.s f5, f19, f12, f8, rmm # perform operation
fmsub.s f5, f19, f12, f8, rne # perform operation
fmsub.s f5, f19, f12, f8, rtz # perform operation
fmsub.s f5, f19, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f12, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x27, 0xbba1296b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x00717b5b # load x3 with value 0x00717b5b
sw x3, 0(x2) # store 0x00717b5b in memory
flw f4, 0(x2) # load 0x00717b5b from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmsub.s f27, f7, f4, f21, dyn # perform operation
fmsub.s f27, f7, f4, f21, rdn # perform operation
fmsub.s f27, f7, f4, f21, rmm # perform operation
fmsub.s f27, f7, f4, f21, rne # perform operation
fmsub.s f27, f7, f4, f21, rtz # perform operation
fmsub.s f27, f7, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f7, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f7, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f7, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f7, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f7, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x17, 0x77a6b7ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xde0d9758 # load x3 with value 0xde0d9758
sw x3, 0(x2) # store 0xde0d9758 in memory
flw f6, 0(x2) # load 0xde0d9758 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f17, f2, f6, f29, dyn # perform operation
fmsub.s f17, f2, f6, f29, rdn # perform operation
fmsub.s f17, f2, f6, f29, rmm # perform operation
fmsub.s f17, f2, f6, f29, rne # perform operation
fmsub.s f17, f2, f6, f29, rtz # perform operation
fmsub.s f17, f2, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f2, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f2, f6, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x21, 0xeb67296c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0xf8dc2bb2 # load x3 with value 0xf8dc2bb2
sw x3, 0(x2) # store 0xf8dc2bb2 in memory
flw f31, 0(x2) # load 0xf8dc2bb2 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
fmsub.s f21, f15, f31, f1, dyn # perform operation
fmsub.s f21, f15, f31, f1, rdn # perform operation
fmsub.s f21, f15, f31, f1, rmm # perform operation
fmsub.s f21, f15, f31, f1, rne # perform operation
fmsub.s f21, f15, f31, f1, rtz # perform operation
fmsub.s f21, f15, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f15, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f15, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x22, 0xd2f219cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x695e6256 # load x3 with value 0x695e6256
sw x3, 0(x2) # store 0x695e6256 in memory
flw f23, 0(x2) # load 0x695e6256 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f22, f18, f23, f19, dyn # perform operation
fmsub.s f22, f18, f23, f19, rdn # perform operation
fmsub.s f22, f18, f23, f19, rmm # perform operation
fmsub.s f22, f18, f23, f19, rne # perform operation
fmsub.s f22, f18, f23, f19, rtz # perform operation
fmsub.s f22, f18, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x28, 0x8ba957ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xd7d61fd3 # load x3 with value 0xd7d61fd3
sw x3, 0(x2) # store 0xd7d61fd3 in memory
flw f29, 0(x2) # load 0xd7d61fd3 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f28, f27, f29, f26, dyn # perform operation
fmsub.s f28, f27, f29, f26, rdn # perform operation
fmsub.s f28, f27, f29, f26, rmm # perform operation
fmsub.s f28, f27, f29, f26, rne # perform operation
fmsub.s f28, f27, f29, f26, rtz # perform operation
fmsub.s f28, f27, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f27, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f27, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f27, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f27, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f27, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x31, 0xc36f690b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0xf858140d # load x3 with value 0xf858140d
sw x3, 0(x2) # store 0xf858140d in memory
flw f10, 0(x2) # load 0xf858140d from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmsub.s f31, f15, f10, f24, dyn # perform operation
fmsub.s f31, f15, f10, f24, rdn # perform operation
fmsub.s f31, f15, f10, f24, rmm # perform operation
fmsub.s f31, f15, f10, f24, rne # perform operation
fmsub.s f31, f15, f10, f24, rtz # perform operation
fmsub.s f31, f15, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f15, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x7, 0x69fb71b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0xb48e4542 # load x3 with value 0xb48e4542
sw x3, 0(x2) # store 0xb48e4542 in memory
flw f14, 0(x2) # load 0xb48e4542 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmsub.s f7, f23, f14, f21, dyn # perform operation
fmsub.s f7, f23, f14, f21, rdn # perform operation
fmsub.s f7, f23, f14, f21, rmm # perform operation
fmsub.s f7, f23, f14, f21, rne # perform operation
fmsub.s f7, f23, f14, f21, rtz # perform operation
fmsub.s f7, f23, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f23, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f23, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x18, 0xd202ed5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x5246c8e7 # load x3 with value 0x5246c8e7
sw x3, 0(x2) # store 0x5246c8e7 in memory
flw f25, 0(x2) # load 0x5246c8e7 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmsub.s f18, f19, f25, f24, dyn # perform operation
fmsub.s f18, f19, f25, f24, rdn # perform operation
fmsub.s f18, f19, f25, f24, rmm # perform operation
fmsub.s f18, f19, f25, f24, rne # perform operation
fmsub.s f18, f19, f25, f24, rtz # perform operation
fmsub.s f18, f19, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x12, 0x614fe1e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x4c6d96ab # load x3 with value 0x4c6d96ab
sw x3, 0(x2) # store 0x4c6d96ab in memory
flw f20, 0(x2) # load 0x4c6d96ab from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fmsub.s f12, f2, f20, f31, dyn # perform operation
fmsub.s f12, f2, f20, f31, rdn # perform operation
fmsub.s f12, f2, f20, f31, rmm # perform operation
fmsub.s f12, f2, f20, f31, rne # perform operation
fmsub.s f12, f2, f20, f31, rtz # perform operation
fmsub.s f12, f2, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f20, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x16, 0x3ae8bdba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x4e272cf4 # load x3 with value 0x4e272cf4
sw x3, 0(x2) # store 0x4e272cf4 in memory
flw f4, 0(x2) # load 0x4e272cf4 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fmsub.s f16, f28, f4, f31, dyn # perform operation
fmsub.s f16, f28, f4, f31, rdn # perform operation
fmsub.s f16, f28, f4, f31, rmm # perform operation
fmsub.s f16, f28, f4, f31, rne # perform operation
fmsub.s f16, f28, f4, f31, rtz # perform operation
fmsub.s f16, f28, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x29, 0x49491b52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xab829505 # load x3 with value 0xab829505
sw x3, 0(x2) # store 0xab829505 in memory
flw f14, 0(x2) # load 0xab829505 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmsub.s f29, f6, f14, f5, dyn # perform operation
fmsub.s f29, f6, f14, f5, rdn # perform operation
fmsub.s f29, f6, f14, f5, rmm # perform operation
fmsub.s f29, f6, f14, f5, rne # perform operation
fmsub.s f29, f6, f14, f5, rtz # perform operation
fmsub.s f29, f6, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f6, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x12, 0x1fad7ad2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x347fa9bb # load x3 with value 0x347fa9bb
sw x3, 0(x2) # store 0x347fa9bb in memory
flw f10, 0(x2) # load 0x347fa9bb from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmsub.s f12, f5, f10, f19, dyn # perform operation
fmsub.s f12, f5, f10, f19, rdn # perform operation
fmsub.s f12, f5, f10, f19, rmm # perform operation
fmsub.s f12, f5, f10, f19, rne # perform operation
fmsub.s f12, f5, f10, f19, rtz # perform operation
fmsub.s f12, f5, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f5, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f5, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x29, 0xc918beec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x255849df # load x3 with value 0x255849df
sw x3, 0(x2) # store 0x255849df in memory
flw f9, 0(x2) # load 0x255849df from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmsub.s f29, f23, f9, f28, dyn # perform operation
fmsub.s f29, f23, f9, f28, rdn # perform operation
fmsub.s f29, f23, f9, f28, rmm # perform operation
fmsub.s f29, f23, f9, f28, rne # perform operation
fmsub.s f29, f23, f9, f28, rtz # perform operation
fmsub.s f29, f23, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f23, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f23, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x29, 0xcabe0ece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0xe9174c22 # load x3 with value 0xe9174c22
sw x3, 0(x2) # store 0xe9174c22 in memory
flw f27, 0(x2) # load 0xe9174c22 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmsub.s f29, f13, f27, f30, dyn # perform operation
fmsub.s f29, f13, f27, f30, rdn # perform operation
fmsub.s f29, f13, f27, f30, rmm # perform operation
fmsub.s f29, f13, f27, f30, rne # perform operation
fmsub.s f29, f13, f27, f30, rtz # perform operation
fmsub.s f29, f13, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f13, f27, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x25, 0x0878b719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0xe1559325 # load x3 with value 0xe1559325
sw x3, 0(x2) # store 0xe1559325 in memory
flw f29, 0(x2) # load 0xe1559325 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fmsub.s f25, f17, f29, f4, dyn # perform operation
fmsub.s f25, f17, f29, f4, rdn # perform operation
fmsub.s f25, f17, f29, f4, rmm # perform operation
fmsub.s f25, f17, f29, f4, rne # perform operation
fmsub.s f25, f17, f29, f4, rtz # perform operation
fmsub.s f25, f17, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x24, 0x3b8f69d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x02b8718e # load x3 with value 0x02b8718e
sw x3, 0(x2) # store 0x02b8718e in memory
flw f29, 0(x2) # load 0x02b8718e from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmsub.s f24, f27, f29, f2, dyn # perform operation
fmsub.s f24, f27, f29, f2, rdn # perform operation
fmsub.s f24, f27, f29, f2, rmm # perform operation
fmsub.s f24, f27, f29, f2, rne # perform operation
fmsub.s f24, f27, f29, f2, rtz # perform operation
fmsub.s f24, f27, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x28, 0x4b5739a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x7eb4a0f0 # load x3 with value 0x7eb4a0f0
sw x3, 0(x2) # store 0x7eb4a0f0 in memory
flw f16, 0(x2) # load 0x7eb4a0f0 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmsub.s f28, f25, f16, f27, dyn # perform operation
fmsub.s f28, f25, f16, f27, rdn # perform operation
fmsub.s f28, f25, f16, f27, rmm # perform operation
fmsub.s f28, f25, f16, f27, rne # perform operation
fmsub.s f28, f25, f16, f27, rtz # perform operation
fmsub.s f28, f25, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f25, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f25, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f25, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f25, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f25, f16, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x13, 0x33999e22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0xc093f57b # load x3 with value 0xc093f57b
sw x3, 0(x2) # store 0xc093f57b in memory
flw f21, 0(x2) # load 0xc093f57b from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmsub.s f13, f4, f21, f20, dyn # perform operation
fmsub.s f13, f4, f21, f20, rdn # perform operation
fmsub.s f13, f4, f21, f20, rmm # perform operation
fmsub.s f13, f4, f21, f20, rne # perform operation
fmsub.s f13, f4, f21, f20, rtz # perform operation
fmsub.s f13, f4, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f4, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f4, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x31, 0x421fb626 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xd88d9360 # load x3 with value 0xd88d9360
sw x3, 0(x2) # store 0xd88d9360 in memory
flw f7, 0(x2) # load 0xd88d9360 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmsub.s f31, f20, f7, f10, dyn # perform operation
fmsub.s f31, f20, f7, f10, rdn # perform operation
fmsub.s f31, f20, f7, f10, rmm # perform operation
fmsub.s f31, f20, f7, f10, rne # perform operation
fmsub.s f31, f20, f7, f10, rtz # perform operation
fmsub.s f31, f20, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x29, 0x1519bb44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x117e6f3e # load x3 with value 0x117e6f3e
sw x3, 0(x2) # store 0x117e6f3e in memory
flw f14, 0(x2) # load 0x117e6f3e from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmsub.s f29, f21, f14, f11, dyn # perform operation
fmsub.s f29, f21, f14, f11, rdn # perform operation
fmsub.s f29, f21, f14, f11, rmm # perform operation
fmsub.s f29, f21, f14, f11, rne # perform operation
fmsub.s f29, f21, f14, f11, rtz # perform operation
fmsub.s f29, f21, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x5, 0xa5254c73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x741a5b13 # load x3 with value 0x741a5b13
sw x3, 0(x2) # store 0x741a5b13 in memory
flw f25, 0(x2) # load 0x741a5b13 from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmsub.s f5, f13, f25, f14, dyn # perform operation
fmsub.s f5, f13, f25, f14, rdn # perform operation
fmsub.s f5, f13, f25, f14, rmm # perform operation
fmsub.s f5, f13, f25, f14, rne # perform operation
fmsub.s f5, f13, f25, f14, rtz # perform operation
fmsub.s f5, f13, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f13, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f13, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x13, 0x5e226e2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x36addf37 # load x3 with value 0x36addf37
sw x3, 0(x2) # store 0x36addf37 in memory
flw f20, 0(x2) # load 0x36addf37 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fmsub.s f13, f25, f20, f30, dyn # perform operation
fmsub.s f13, f25, f20, f30, rdn # perform operation
fmsub.s f13, f25, f20, f30, rmm # perform operation
fmsub.s f13, f25, f20, f30, rne # perform operation
fmsub.s f13, f25, f20, f30, rtz # perform operation
fmsub.s f13, f25, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f25, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f25, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f25, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f25, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f25, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x27, 0xe8f00f8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x33c7c057 # load x3 with value 0x33c7c057
sw x3, 0(x2) # store 0x33c7c057 in memory
flw f6, 0(x2) # load 0x33c7c057 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fmsub.s f27, f4, f6, f26, dyn # perform operation
fmsub.s f27, f4, f6, f26, rdn # perform operation
fmsub.s f27, f4, f6, f26, rmm # perform operation
fmsub.s f27, f4, f6, f26, rne # perform operation
fmsub.s f27, f4, f6, f26, rtz # perform operation
fmsub.s f27, f4, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f4, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f4, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x15, 0x76aad4f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x8a979748 # load x3 with value 0x8a979748
sw x3, 0(x2) # store 0x8a979748 in memory
flw f14, 0(x2) # load 0x8a979748 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fmsub.s f15, f18, f14, f10, dyn # perform operation
fmsub.s f15, f18, f14, f10, rdn # perform operation
fmsub.s f15, f18, f14, f10, rmm # perform operation
fmsub.s f15, f18, f14, f10, rne # perform operation
fmsub.s f15, f18, f14, f10, rtz # perform operation
fmsub.s f15, f18, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f18, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f18, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x13, 0xcbc7c1a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x11e813bd # load x3 with value 0x11e813bd
sw x3, 0(x2) # store 0x11e813bd in memory
flw f5, 0(x2) # load 0x11e813bd from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f13, f8, f5, f6, dyn # perform operation
fmsub.s f13, f8, f5, f6, rdn # perform operation
fmsub.s f13, f8, f5, f6, rmm # perform operation
fmsub.s f13, f8, f5, f6, rne # perform operation
fmsub.s f13, f8, f5, f6, rtz # perform operation
fmsub.s f13, f8, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f8, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f8, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x16, 0x0f79c86f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xb3f3b395 # load x3 with value 0xb3f3b395
sw x3, 0(x2) # store 0xb3f3b395 in memory
flw f2, 0(x2) # load 0xb3f3b395 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmsub.s f16, f14, f2, f15, dyn # perform operation
fmsub.s f16, f14, f2, f15, rdn # perform operation
fmsub.s f16, f14, f2, f15, rmm # perform operation
fmsub.s f16, f14, f2, f15, rne # perform operation
fmsub.s f16, f14, f2, f15, rtz # perform operation
fmsub.s f16, f14, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f14, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f14, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x25, 0x6bf8c03e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0xd72707b4 # load x3 with value 0xd72707b4
sw x3, 0(x2) # store 0xd72707b4 in memory
flw f16, 0(x2) # load 0xd72707b4 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmsub.s f25, f27, f16, f22, dyn # perform operation
fmsub.s f25, f27, f16, f22, rdn # perform operation
fmsub.s f25, f27, f16, f22, rmm # perform operation
fmsub.s f25, f27, f16, f22, rne # perform operation
fmsub.s f25, f27, f16, f22, rtz # perform operation
fmsub.s f25, f27, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f27, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x28, 0x64f130d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7b03e391 # load x3 with value 0x7b03e391
sw x3, 0(x2) # store 0x7b03e391 in memory
flw f25, 0(x2) # load 0x7b03e391 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmsub.s f28, f1, f25, f14, dyn # perform operation
fmsub.s f28, f1, f25, f14, rdn # perform operation
fmsub.s f28, f1, f25, f14, rmm # perform operation
fmsub.s f28, f1, f25, f14, rne # perform operation
fmsub.s f28, f1, f25, f14, rtz # perform operation
fmsub.s f28, f1, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f1, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f1, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x11, 0x48a70ce6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0xb03d9253 # load x3 with value 0xb03d9253
sw x3, 0(x2) # store 0xb03d9253 in memory
flw f7, 0(x2) # load 0xb03d9253 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmsub.s f11, f26, f7, f17, dyn # perform operation
fmsub.s f11, f26, f7, f17, rdn # perform operation
fmsub.s f11, f26, f7, f17, rmm # perform operation
fmsub.s f11, f26, f7, f17, rne # perform operation
fmsub.s f11, f26, f7, f17, rtz # perform operation
fmsub.s f11, f26, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f26, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f26, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f26, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f26, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f26, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x3, 0x180fbe3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x16bb66f7 # load x3 with value 0x16bb66f7
sw x3, 0(x2) # store 0x16bb66f7 in memory
flw f2, 0(x2) # load 0x16bb66f7 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fmsub.s f3, f4, f2, f30, dyn # perform operation
fmsub.s f3, f4, f2, f30, rdn # perform operation
fmsub.s f3, f4, f2, f30, rmm # perform operation
fmsub.s f3, f4, f2, f30, rne # perform operation
fmsub.s f3, f4, f2, f30, rtz # perform operation
fmsub.s f3, f4, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f4, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f4, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f4, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f4, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f4, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x17, 0x4f7815b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x3e844e55 # load x3 with value 0x3e844e55
sw x3, 0(x2) # store 0x3e844e55 in memory
flw f10, 0(x2) # load 0x3e844e55 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fmsub.s f17, f8, f10, f23, dyn # perform operation
fmsub.s f17, f8, f10, f23, rdn # perform operation
fmsub.s f17, f8, f10, f23, rmm # perform operation
fmsub.s f17, f8, f10, f23, rne # perform operation
fmsub.s f17, f8, f10, f23, rtz # perform operation
fmsub.s f17, f8, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x23, 0xbf9b85ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xd9071b14 # load x3 with value 0xd9071b14
sw x3, 0(x2) # store 0xd9071b14 in memory
flw f30, 0(x2) # load 0xd9071b14 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmsub.s f23, f10, f30, f29, dyn # perform operation
fmsub.s f23, f10, f30, f29, rdn # perform operation
fmsub.s f23, f10, f30, f29, rmm # perform operation
fmsub.s f23, f10, f30, f29, rne # perform operation
fmsub.s f23, f10, f30, f29, rtz # perform operation
fmsub.s f23, f10, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f10, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f10, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f10, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f10, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f10, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x28, 0x8b73b411 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x3af56668 # load x3 with value 0x3af56668
sw x3, 0(x2) # store 0x3af56668 in memory
flw f25, 0(x2) # load 0x3af56668 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmsub.s f28, f10, f25, f15, dyn # perform operation
fmsub.s f28, f10, f25, f15, rdn # perform operation
fmsub.s f28, f10, f25, f15, rmm # perform operation
fmsub.s f28, f10, f25, f15, rne # perform operation
fmsub.s f28, f10, f25, f15, rtz # perform operation
fmsub.s f28, f10, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x24, 0xc756f8cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xd7ce1ad7 # load x3 with value 0xd7ce1ad7
sw x3, 0(x2) # store 0xd7ce1ad7 in memory
flw f10, 0(x2) # load 0xd7ce1ad7 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmsub.s f24, f11, f10, f1, dyn # perform operation
fmsub.s f24, f11, f10, f1, rdn # perform operation
fmsub.s f24, f11, f10, f1, rmm # perform operation
fmsub.s f24, f11, f10, f1, rne # perform operation
fmsub.s f24, f11, f10, f1, rtz # perform operation
fmsub.s f24, f11, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x22, 0xdaff086f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x347ad572 # load x3 with value 0x347ad572
sw x3, 0(x2) # store 0x347ad572 in memory
flw f27, 0(x2) # load 0x347ad572 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f22, f1, f27, f23, dyn # perform operation
fmsub.s f22, f1, f27, f23, rdn # perform operation
fmsub.s f22, f1, f27, f23, rmm # perform operation
fmsub.s f22, f1, f27, f23, rne # perform operation
fmsub.s f22, f1, f27, f23, rtz # perform operation
fmsub.s f22, f1, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f1, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f1, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x24, 0x84ad66ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x68075daf # load x3 with value 0x68075daf
sw x3, 0(x2) # store 0x68075daf in memory
flw f20, 0(x2) # load 0x68075daf from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fmsub.s f24, f11, f20, f3, dyn # perform operation
fmsub.s f24, f11, f20, f3, rdn # perform operation
fmsub.s f24, f11, f20, f3, rmm # perform operation
fmsub.s f24, f11, f20, f3, rne # perform operation
fmsub.s f24, f11, f20, f3, rtz # perform operation
fmsub.s f24, f11, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f11, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f11, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f11, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f11, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f11, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x3, 0x7fc41bbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0xce079c9c # load x3 with value 0xce079c9c
sw x3, 0(x2) # store 0xce079c9c in memory
flw f27, 0(x2) # load 0xce079c9c from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmsub.s f3, f29, f27, f5, dyn # perform operation
fmsub.s f3, f29, f27, f5, rdn # perform operation
fmsub.s f3, f29, f27, f5, rmm # perform operation
fmsub.s f3, f29, f27, f5, rne # perform operation
fmsub.s f3, f29, f27, f5, rtz # perform operation
fmsub.s f3, f29, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x25, 0x6b0a4285 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x53be543c # load x3 with value 0x53be543c
sw x3, 0(x2) # store 0x53be543c in memory
flw f17, 0(x2) # load 0x53be543c from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fmsub.s f25, f15, f17, f16, dyn # perform operation
fmsub.s f25, f15, f17, f16, rdn # perform operation
fmsub.s f25, f15, f17, f16, rmm # perform operation
fmsub.s f25, f15, f17, f16, rne # perform operation
fmsub.s f25, f15, f17, f16, rtz # perform operation
fmsub.s f25, f15, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f15, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f15, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x2, 0xf8505017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x69747be7 # load x3 with value 0x69747be7
sw x3, 0(x2) # store 0x69747be7 in memory
flw f17, 0(x2) # load 0x69747be7 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f2, f3, f17, f5, dyn # perform operation
fmsub.s f2, f3, f17, f5, rdn # perform operation
fmsub.s f2, f3, f17, f5, rmm # perform operation
fmsub.s f2, f3, f17, f5, rne # perform operation
fmsub.s f2, f3, f17, f5, rtz # perform operation
fmsub.s f2, f3, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x31, 0x8ac0de31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x1f732319 # load x3 with value 0x1f732319
sw x3, 0(x2) # store 0x1f732319 in memory
flw f26, 0(x2) # load 0x1f732319 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmsub.s f31, f16, f26, f9, dyn # perform operation
fmsub.s f31, f16, f26, f9, rdn # perform operation
fmsub.s f31, f16, f26, f9, rmm # perform operation
fmsub.s f31, f16, f26, f9, rne # perform operation
fmsub.s f31, f16, f26, f9, rtz # perform operation
fmsub.s f31, f16, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f16, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x21, 0xcebc85cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0xc53b54ab # load x3 with value 0xc53b54ab
sw x3, 0(x2) # store 0xc53b54ab in memory
flw f8, 0(x2) # load 0xc53b54ab from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmsub.s f21, f9, f8, f7, dyn # perform operation
fmsub.s f21, f9, f8, f7, rdn # perform operation
fmsub.s f21, f9, f8, f7, rmm # perform operation
fmsub.s f21, f9, f8, f7, rne # perform operation
fmsub.s f21, f9, f8, f7, rtz # perform operation
fmsub.s f21, f9, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f9, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f9, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x16, 0xc88ddf2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x1b60fed0 # load x3 with value 0x1b60fed0
sw x3, 0(x2) # store 0x1b60fed0 in memory
flw f28, 0(x2) # load 0x1b60fed0 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fmsub.s f16, f15, f28, f11, dyn # perform operation
fmsub.s f16, f15, f28, f11, rdn # perform operation
fmsub.s f16, f15, f28, f11, rmm # perform operation
fmsub.s f16, f15, f28, f11, rne # perform operation
fmsub.s f16, f15, f28, f11, rtz # perform operation
fmsub.s f16, f15, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f15, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f15, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f15, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f15, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f15, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x13, 0xa6bce5b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x1d7d3f5f # load x3 with value 0x1d7d3f5f
sw x3, 0(x2) # store 0x1d7d3f5f in memory
flw f3, 0(x2) # load 0x1d7d3f5f from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f13, f9, f3, f25, dyn # perform operation
fmsub.s f13, f9, f3, f25, rdn # perform operation
fmsub.s f13, f9, f3, f25, rmm # perform operation
fmsub.s f13, f9, f3, f25, rne # perform operation
fmsub.s f13, f9, f3, f25, rtz # perform operation
fmsub.s f13, f9, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f9, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f9, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x31, 0xe0b08cb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xc1c01e6f # load x3 with value 0xc1c01e6f
sw x3, 0(x2) # store 0xc1c01e6f in memory
flw f4, 0(x2) # load 0xc1c01e6f from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fmsub.s f31, f3, f4, f2, dyn # perform operation
fmsub.s f31, f3, f4, f2, rdn # perform operation
fmsub.s f31, f3, f4, f2, rmm # perform operation
fmsub.s f31, f3, f4, f2, rne # perform operation
fmsub.s f31, f3, f4, f2, rtz # perform operation
fmsub.s f31, f3, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x20, 0x4331b455 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x99a78407 # load x3 with value 0x99a78407
sw x3, 0(x2) # store 0x99a78407 in memory
flw f14, 0(x2) # load 0x99a78407 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmsub.s f20, f15, f14, f11, dyn # perform operation
fmsub.s f20, f15, f14, f11, rdn # perform operation
fmsub.s f20, f15, f14, f11, rmm # perform operation
fmsub.s f20, f15, f14, f11, rne # perform operation
fmsub.s f20, f15, f14, f11, rtz # perform operation
fmsub.s f20, f15, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x5, 0x3b051ae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xe66cf9dd # load x3 with value 0xe66cf9dd
sw x3, 0(x2) # store 0xe66cf9dd in memory
flw f13, 0(x2) # load 0xe66cf9dd from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmsub.s f5, f10, f13, f21, dyn # perform operation
fmsub.s f5, f10, f13, f21, rdn # perform operation
fmsub.s f5, f10, f13, f21, rmm # perform operation
fmsub.s f5, f10, f13, f21, rne # perform operation
fmsub.s f5, f10, f13, f21, rtz # perform operation
fmsub.s f5, f10, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f10, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x7, 0xc9855985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x808c00f2 # load x3 with value 0x808c00f2
sw x3, 0(x2) # store 0x808c00f2 in memory
flw f9, 0(x2) # load 0x808c00f2 from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fmsub.s f7, f4, f9, f5, dyn # perform operation
fmsub.s f7, f4, f9, f5, rdn # perform operation
fmsub.s f7, f4, f9, f5, rmm # perform operation
fmsub.s f7, f4, f9, f5, rne # perform operation
fmsub.s f7, f4, f9, f5, rtz # perform operation
fmsub.s f7, f4, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f4, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f4, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x2, 0x741bc720 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x3b203d51 # load x3 with value 0x3b203d51
sw x3, 0(x2) # store 0x3b203d51 in memory
flw f13, 0(x2) # load 0x3b203d51 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fmsub.s f2, f6, f13, f7, dyn # perform operation
fmsub.s f2, f6, f13, f7, rdn # perform operation
fmsub.s f2, f6, f13, f7, rmm # perform operation
fmsub.s f2, f6, f13, f7, rne # perform operation
fmsub.s f2, f6, f13, f7, rtz # perform operation
fmsub.s f2, f6, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f6, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f6, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x9, 0x312a2cbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x12817510 # load x3 with value 0x12817510
sw x3, 0(x2) # store 0x12817510 in memory
flw f30, 0(x2) # load 0x12817510 from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fmsub.s f9, f5, f30, f13, dyn # perform operation
fmsub.s f9, f5, f30, f13, rdn # perform operation
fmsub.s f9, f5, f30, f13, rmm # perform operation
fmsub.s f9, f5, f30, f13, rne # perform operation
fmsub.s f9, f5, f30, f13, rtz # perform operation
fmsub.s f9, f5, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f5, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f5, f30, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x29, 0xbc61a838 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x6c849d0f # load x3 with value 0x6c849d0f
sw x3, 0(x2) # store 0x6c849d0f in memory
flw f30, 0(x2) # load 0x6c849d0f from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmsub.s f29, f16, f30, f12, dyn # perform operation
fmsub.s f29, f16, f30, f12, rdn # perform operation
fmsub.s f29, f16, f30, f12, rmm # perform operation
fmsub.s f29, f16, f30, f12, rne # perform operation
fmsub.s f29, f16, f30, f12, rtz # perform operation
fmsub.s f29, f16, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x24, 0x3c60039e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xabdbea6b # load x3 with value 0xabdbea6b
sw x3, 0(x2) # store 0xabdbea6b in memory
flw f29, 0(x2) # load 0xabdbea6b from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fmsub.s f24, f30, f29, f23, dyn # perform operation
fmsub.s f24, f30, f29, f23, rdn # perform operation
fmsub.s f24, f30, f29, f23, rmm # perform operation
fmsub.s f24, f30, f29, f23, rne # perform operation
fmsub.s f24, f30, f29, f23, rtz # perform operation
fmsub.s f24, f30, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f30, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f30, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x23, 0x8932cc36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x34925981 # load x3 with value 0x34925981
sw x3, 0(x2) # store 0x34925981 in memory
flw f11, 0(x2) # load 0x34925981 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmsub.s f23, f31, f11, f5, dyn # perform operation
fmsub.s f23, f31, f11, f5, rdn # perform operation
fmsub.s f23, f31, f11, f5, rmm # perform operation
fmsub.s f23, f31, f11, f5, rne # perform operation
fmsub.s f23, f31, f11, f5, rtz # perform operation
fmsub.s f23, f31, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f11, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x17, 0x317fa2d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x77678de1 # load x3 with value 0x77678de1
sw x3, 0(x2) # store 0x77678de1 in memory
flw f28, 0(x2) # load 0x77678de1 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmsub.s f17, f26, f28, f14, dyn # perform operation
fmsub.s f17, f26, f28, f14, rdn # perform operation
fmsub.s f17, f26, f28, f14, rmm # perform operation
fmsub.s f17, f26, f28, f14, rne # perform operation
fmsub.s f17, f26, f28, f14, rtz # perform operation
fmsub.s f17, f26, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f26, f28, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x8, 0x4e7aafaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x62d95043 # load x3 with value 0x62d95043
sw x3, 0(x2) # store 0x62d95043 in memory
flw f12, 0(x2) # load 0x62d95043 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmsub.s f8, f30, f12, f29, dyn # perform operation
fmsub.s f8, f30, f12, f29, rdn # perform operation
fmsub.s f8, f30, f12, f29, rmm # perform operation
fmsub.s f8, f30, f12, f29, rne # perform operation
fmsub.s f8, f30, f12, f29, rtz # perform operation
fmsub.s f8, f30, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x27, 0x568ac54f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0xc85fbd8a # load x3 with value 0xc85fbd8a
sw x3, 0(x2) # store 0xc85fbd8a in memory
flw f23, 0(x2) # load 0xc85fbd8a from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fmsub.s f27, f24, f23, f7, dyn # perform operation
fmsub.s f27, f24, f23, f7, rdn # perform operation
fmsub.s f27, f24, f23, f7, rmm # perform operation
fmsub.s f27, f24, f23, f7, rne # perform operation
fmsub.s f27, f24, f23, f7, rtz # perform operation
fmsub.s f27, f24, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f24, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f24, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x20, 0x0f6be922 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x2cb5826b # load x3 with value 0x2cb5826b
sw x3, 0(x2) # store 0x2cb5826b in memory
flw f30, 0(x2) # load 0x2cb5826b from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmsub.s f20, f29, f30, f31, dyn # perform operation
fmsub.s f20, f29, f30, f31, rdn # perform operation
fmsub.s f20, f29, f30, f31, rmm # perform operation
fmsub.s f20, f29, f30, f31, rne # perform operation
fmsub.s f20, f29, f30, f31, rtz # perform operation
fmsub.s f20, f29, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x26, 0x71b2ee58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x124ed015 # load x3 with value 0x124ed015
sw x3, 0(x2) # store 0x124ed015 in memory
flw f5, 0(x2) # load 0x124ed015 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fmsub.s f26, f28, f5, f27, dyn # perform operation
fmsub.s f26, f28, f5, f27, rdn # perform operation
fmsub.s f26, f28, f5, f27, rmm # perform operation
fmsub.s f26, f28, f5, f27, rne # perform operation
fmsub.s f26, f28, f5, f27, rtz # perform operation
fmsub.s f26, f28, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f28, f5, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x19, 0x14eb5c63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x1218fd2d # load x3 with value 0x1218fd2d
sw x3, 0(x2) # store 0x1218fd2d in memory
flw f26, 0(x2) # load 0x1218fd2d from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmsub.s f19, f21, f26, f6, dyn # perform operation
fmsub.s f19, f21, f26, f6, rdn # perform operation
fmsub.s f19, f21, f26, f6, rmm # perform operation
fmsub.s f19, f21, f26, f6, rne # perform operation
fmsub.s f19, f21, f26, f6, rtz # perform operation
fmsub.s f19, f21, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f26, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x11, 0xd04dd06a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x22e8c7e3 # load x3 with value 0x22e8c7e3
sw x3, 0(x2) # store 0x22e8c7e3 in memory
flw f20, 0(x2) # load 0x22e8c7e3 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmsub.s f11, f14, f20, f13, dyn # perform operation
fmsub.s f11, f14, f20, f13, rdn # perform operation
fmsub.s f11, f14, f20, f13, rmm # perform operation
fmsub.s f11, f14, f20, f13, rne # perform operation
fmsub.s f11, f14, f20, f13, rtz # perform operation
fmsub.s f11, f14, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f14, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f14, f20, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x14, 0x727c5d05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x71f05512 # load x3 with value 0x71f05512
sw x3, 0(x2) # store 0x71f05512 in memory
flw f3, 0(x2) # load 0x71f05512 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmsub.s f14, f15, f3, f21, dyn # perform operation
fmsub.s f14, f15, f3, f21, rdn # perform operation
fmsub.s f14, f15, f3, f21, rmm # perform operation
fmsub.s f14, f15, f3, f21, rne # perform operation
fmsub.s f14, f15, f3, f21, rtz # perform operation
fmsub.s f14, f15, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x2, 0x6febb041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x17bd60bd # load x3 with value 0x17bd60bd
sw x3, 0(x2) # store 0x17bd60bd in memory
flw f30, 0(x2) # load 0x17bd60bd from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmsub.s f2, f28, f30, f5, dyn # perform operation
fmsub.s f2, f28, f30, f5, rdn # perform operation
fmsub.s f2, f28, f30, f5, rmm # perform operation
fmsub.s f2, f28, f30, f5, rne # perform operation
fmsub.s f2, f28, f30, f5, rtz # perform operation
fmsub.s f2, f28, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f28, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f28, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f28, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f28, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f28, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x7, 0xbc4236e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0xe008e73e # load x3 with value 0xe008e73e
sw x3, 0(x2) # store 0xe008e73e in memory
flw f8, 0(x2) # load 0xe008e73e from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmsub.s f7, f25, f8, f16, dyn # perform operation
fmsub.s f7, f25, f8, f16, rdn # perform operation
fmsub.s f7, f25, f8, f16, rmm # perform operation
fmsub.s f7, f25, f8, f16, rne # perform operation
fmsub.s f7, f25, f8, f16, rtz # perform operation
fmsub.s f7, f25, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f25, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f25, f8, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x11, 0xe732615e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x74f38c79 # load x3 with value 0x74f38c79
sw x3, 0(x2) # store 0x74f38c79 in memory
flw f27, 0(x2) # load 0x74f38c79 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f11, f13, f27, f29, dyn # perform operation
fmsub.s f11, f13, f27, f29, rdn # perform operation
fmsub.s f11, f13, f27, f29, rmm # perform operation
fmsub.s f11, f13, f27, f29, rne # perform operation
fmsub.s f11, f13, f27, f29, rtz # perform operation
fmsub.s f11, f13, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f13, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x11, 0xae82e8cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x57f80ea8 # load x3 with value 0x57f80ea8
sw x3, 0(x2) # store 0x57f80ea8 in memory
flw f23, 0(x2) # load 0x57f80ea8 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmsub.s f11, f27, f23, f20, dyn # perform operation
fmsub.s f11, f27, f23, f20, rdn # perform operation
fmsub.s f11, f27, f23, f20, rmm # perform operation
fmsub.s f11, f27, f23, f20, rne # perform operation
fmsub.s f11, f27, f23, f20, rtz # perform operation
fmsub.s f11, f27, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f27, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f27, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x24, 0x3a9dae79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0x193efae5 # load x3 with value 0x193efae5
sw x3, 0(x2) # store 0x193efae5 in memory
flw f19, 0(x2) # load 0x193efae5 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmsub.s f24, f27, f19, f10, dyn # perform operation
fmsub.s f24, f27, f19, f10, rdn # perform operation
fmsub.s f24, f27, f19, f10, rmm # perform operation
fmsub.s f24, f27, f19, f10, rne # perform operation
fmsub.s f24, f27, f19, f10, rtz # perform operation
fmsub.s f24, f27, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x30, 0xb1bd07f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x5dcfde6c # load x3 with value 0x5dcfde6c
sw x3, 0(x2) # store 0x5dcfde6c in memory
flw f5, 0(x2) # load 0x5dcfde6c from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmsub.s f30, f6, f5, f1, dyn # perform operation
fmsub.s f30, f6, f5, f1, rdn # perform operation
fmsub.s f30, f6, f5, f1, rmm # perform operation
fmsub.s f30, f6, f5, f1, rne # perform operation
fmsub.s f30, f6, f5, f1, rtz # perform operation
fmsub.s f30, f6, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f6, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f6, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x13, 0x38b09ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x6e51b840 # load x3 with value 0x6e51b840
sw x3, 0(x2) # store 0x6e51b840 in memory
flw f8, 0(x2) # load 0x6e51b840 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmsub.s f13, f15, f8, f19, dyn # perform operation
fmsub.s f13, f15, f8, f19, rdn # perform operation
fmsub.s f13, f15, f8, f19, rmm # perform operation
fmsub.s f13, f15, f8, f19, rne # perform operation
fmsub.s f13, f15, f8, f19, rtz # perform operation
fmsub.s f13, f15, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x14, 0x06f6e8b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x01bd9fa9 # load x3 with value 0x01bd9fa9
sw x3, 0(x2) # store 0x01bd9fa9 in memory
flw f29, 0(x2) # load 0x01bd9fa9 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmsub.s f14, f30, f29, f18, dyn # perform operation
fmsub.s f14, f30, f29, f18, rdn # perform operation
fmsub.s f14, f30, f29, f18, rmm # perform operation
fmsub.s f14, f30, f29, f18, rne # perform operation
fmsub.s f14, f30, f29, f18, rtz # perform operation
fmsub.s f14, f30, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f30, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f30, f29, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x24, 0xfb8a51e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x2754e9f8 # load x3 with value 0x2754e9f8
sw x3, 0(x2) # store 0x2754e9f8 in memory
flw f5, 0(x2) # load 0x2754e9f8 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmsub.s f24, f28, f5, f23, dyn # perform operation
fmsub.s f24, f28, f5, f23, rdn # perform operation
fmsub.s f24, f28, f5, f23, rmm # perform operation
fmsub.s f24, f28, f5, f23, rne # perform operation
fmsub.s f24, f28, f5, f23, rtz # perform operation
fmsub.s f24, f28, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f28, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f28, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f28, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f28, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f28, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x21, 0x51a62a9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xd5490abb # load x3 with value 0xd5490abb
sw x3, 0(x2) # store 0xd5490abb in memory
flw f1, 0(x2) # load 0xd5490abb from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmsub.s f21, f2, f1, f31, dyn # perform operation
fmsub.s f21, f2, f1, f31, rdn # perform operation
fmsub.s f21, f2, f1, f31, rmm # perform operation
fmsub.s f21, f2, f1, f31, rne # perform operation
fmsub.s f21, f2, f1, f31, rtz # perform operation
fmsub.s f21, f2, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f1, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x26, 0xbbcbd3b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x3d820500 # load x3 with value 0x3d820500
sw x3, 0(x2) # store 0x3d820500 in memory
flw f6, 0(x2) # load 0x3d820500 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmsub.s f26, f31, f6, f17, dyn # perform operation
fmsub.s f26, f31, f6, f17, rdn # perform operation
fmsub.s f26, f31, f6, f17, rmm # perform operation
fmsub.s f26, f31, f6, f17, rne # perform operation
fmsub.s f26, f31, f6, f17, rtz # perform operation
fmsub.s f26, f31, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f31, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f31, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f31, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f31, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f31, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x15, 0x3e8374b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0xf9d9cbe1 # load x3 with value 0xf9d9cbe1
sw x3, 0(x2) # store 0xf9d9cbe1 in memory
flw f24, 0(x2) # load 0xf9d9cbe1 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fmsub.s f15, f13, f24, f8, dyn # perform operation
fmsub.s f15, f13, f24, f8, rdn # perform operation
fmsub.s f15, f13, f24, f8, rmm # perform operation
fmsub.s f15, f13, f24, f8, rne # perform operation
fmsub.s f15, f13, f24, f8, rtz # perform operation
fmsub.s f15, f13, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f13, f24, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x21, 0x4e1d51dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x07d85b53 # load x3 with value 0x07d85b53
sw x3, 0(x2) # store 0x07d85b53 in memory
flw f18, 0(x2) # load 0x07d85b53 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmsub.s f21, f17, f18, f25, dyn # perform operation
fmsub.s f21, f17, f18, f25, rdn # perform operation
fmsub.s f21, f17, f18, f25, rmm # perform operation
fmsub.s f21, f17, f18, f25, rne # perform operation
fmsub.s f21, f17, f18, f25, rtz # perform operation
fmsub.s f21, f17, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f17, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f17, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f17, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f17, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f17, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x5, 0x6cac2647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x91c29e59 # load x3 with value 0x91c29e59
sw x3, 0(x2) # store 0x91c29e59 in memory
flw f1, 0(x2) # load 0x91c29e59 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmsub.s f5, f19, f1, f14, dyn # perform operation
fmsub.s f5, f19, f1, f14, rdn # perform operation
fmsub.s f5, f19, f1, f14, rmm # perform operation
fmsub.s f5, f19, f1, f14, rne # perform operation
fmsub.s f5, f19, f1, f14, rtz # perform operation
fmsub.s f5, f19, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f1, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x17, 0x894ae4da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x958cda07 # load x3 with value 0x958cda07
sw x3, 0(x2) # store 0x958cda07 in memory
flw f5, 0(x2) # load 0x958cda07 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fmsub.s f17, f3, f5, f30, dyn # perform operation
fmsub.s f17, f3, f5, f30, rdn # perform operation
fmsub.s f17, f3, f5, f30, rmm # perform operation
fmsub.s f17, f3, f5, f30, rne # perform operation
fmsub.s f17, f3, f5, f30, rtz # perform operation
fmsub.s f17, f3, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x8, 0x6e13d319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x48eaac18 # load x3 with value 0x48eaac18
sw x3, 0(x2) # store 0x48eaac18 in memory
flw f13, 0(x2) # load 0x48eaac18 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fmsub.s f8, f15, f13, f2, dyn # perform operation
fmsub.s f8, f15, f13, f2, rdn # perform operation
fmsub.s f8, f15, f13, f2, rmm # perform operation
fmsub.s f8, f15, f13, f2, rne # perform operation
fmsub.s f8, f15, f13, f2, rtz # perform operation
fmsub.s f8, f15, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x13, 0x0c4b19cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x630a3e59 # load x3 with value 0x630a3e59
sw x3, 0(x2) # store 0x630a3e59 in memory
flw f3, 0(x2) # load 0x630a3e59 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fmsub.s f13, f20, f3, f25, dyn # perform operation
fmsub.s f13, f20, f3, f25, rdn # perform operation
fmsub.s f13, f20, f3, f25, rmm # perform operation
fmsub.s f13, f20, f3, f25, rne # perform operation
fmsub.s f13, f20, f3, f25, rtz # perform operation
fmsub.s f13, f20, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f3, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x14, 0x02d0102d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x4a7c4aaa # load x3 with value 0x4a7c4aaa
sw x3, 0(x2) # store 0x4a7c4aaa in memory
flw f9, 0(x2) # load 0x4a7c4aaa from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fmsub.s f14, f15, f9, f12, dyn # perform operation
fmsub.s f14, f15, f9, f12, rdn # perform operation
fmsub.s f14, f15, f9, f12, rmm # perform operation
fmsub.s f14, f15, f9, f12, rne # perform operation
fmsub.s f14, f15, f9, f12, rtz # perform operation
fmsub.s f14, f15, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f15, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f15, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x31, 0x251cbc55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x45470085 # load x3 with value 0x45470085
sw x3, 0(x2) # store 0x45470085 in memory
flw f4, 0(x2) # load 0x45470085 from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fmsub.s f31, f14, f4, f16, dyn # perform operation
fmsub.s f31, f14, f4, f16, rdn # perform operation
fmsub.s f31, f14, f4, f16, rmm # perform operation
fmsub.s f31, f14, f4, f16, rne # perform operation
fmsub.s f31, f14, f4, f16, rtz # perform operation
fmsub.s f31, f14, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f4, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x6, 0x202e8ceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xdef240fc # load x3 with value 0xdef240fc
sw x3, 0(x2) # store 0xdef240fc in memory
flw f30, 0(x2) # load 0xdef240fc from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fmsub.s f6, f23, f30, f9, dyn # perform operation
fmsub.s f6, f23, f30, f9, rdn # perform operation
fmsub.s f6, f23, f30, f9, rmm # perform operation
fmsub.s f6, f23, f30, f9, rne # perform operation
fmsub.s f6, f23, f30, f9, rtz # perform operation
fmsub.s f6, f23, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f23, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f23, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f23, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f23, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f23, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x8, 0xb9375306 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0xb5fdfdd3 # load x3 with value 0xb5fdfdd3
sw x3, 0(x2) # store 0xb5fdfdd3 in memory
flw f4, 0(x2) # load 0xb5fdfdd3 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmsub.s f8, f19, f4, f2, dyn # perform operation
fmsub.s f8, f19, f4, f2, rdn # perform operation
fmsub.s f8, f19, f4, f2, rmm # perform operation
fmsub.s f8, f19, f4, f2, rne # perform operation
fmsub.s f8, f19, f4, f2, rtz # perform operation
fmsub.s f8, f19, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x27, 0x69613128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xc88d6b62 # load x3 with value 0xc88d6b62
sw x3, 0(x2) # store 0xc88d6b62 in memory
flw f20, 0(x2) # load 0xc88d6b62 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmsub.s f27, f16, f20, f7, dyn # perform operation
fmsub.s f27, f16, f20, f7, rdn # perform operation
fmsub.s f27, f16, f20, f7, rmm # perform operation
fmsub.s f27, f16, f20, f7, rne # perform operation
fmsub.s f27, f16, f20, f7, rtz # perform operation
fmsub.s f27, f16, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f16, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f16, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x16, 0x2f9188fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x913c8386 # load x3 with value 0x913c8386
sw x3, 0(x2) # store 0x913c8386 in memory
flw f24, 0(x2) # load 0x913c8386 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmsub.s f16, f3, f24, f20, dyn # perform operation
fmsub.s f16, f3, f24, f20, rdn # perform operation
fmsub.s f16, f3, f24, f20, rmm # perform operation
fmsub.s f16, f3, f24, f20, rne # perform operation
fmsub.s f16, f3, f24, f20, rtz # perform operation
fmsub.s f16, f3, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x14, 0xe53111e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x4fea6cd3 # load x3 with value 0x4fea6cd3
sw x3, 0(x2) # store 0x4fea6cd3 in memory
flw f1, 0(x2) # load 0x4fea6cd3 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmsub.s f14, f24, f1, f25, dyn # perform operation
fmsub.s f14, f24, f1, f25, rdn # perform operation
fmsub.s f14, f24, f1, f25, rmm # perform operation
fmsub.s f14, f24, f1, f25, rne # perform operation
fmsub.s f14, f24, f1, f25, rtz # perform operation
fmsub.s f14, f24, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f24, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f24, f1, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x22, 0x54c7ba04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0x7688082a # load x3 with value 0x7688082a
sw x3, 0(x2) # store 0x7688082a in memory
flw f17, 0(x2) # load 0x7688082a from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fmsub.s f22, f30, f17, f12, dyn # perform operation
fmsub.s f22, f30, f17, f12, rdn # perform operation
fmsub.s f22, f30, f17, f12, rmm # perform operation
fmsub.s f22, f30, f17, f12, rne # perform operation
fmsub.s f22, f30, f17, f12, rtz # perform operation
fmsub.s f22, f30, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f30, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f30, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x21, 0x95c315e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x5df41508 # load x3 with value 0x5df41508
sw x3, 0(x2) # store 0x5df41508 in memory
flw f14, 0(x2) # load 0x5df41508 from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmsub.s f21, f3, f14, f28, dyn # perform operation
fmsub.s f21, f3, f14, f28, rdn # perform operation
fmsub.s f21, f3, f14, f28, rmm # perform operation
fmsub.s f21, f3, f14, f28, rne # perform operation
fmsub.s f21, f3, f14, f28, rtz # perform operation
fmsub.s f21, f3, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f3, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f3, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x1, 0x57c5798b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xf4730cde # load x3 with value 0xf4730cde
sw x3, 0(x2) # store 0xf4730cde in memory
flw f25, 0(x2) # load 0xf4730cde from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fmsub.s f1, f20, f25, f16, dyn # perform operation
fmsub.s f1, f20, f25, f16, rdn # perform operation
fmsub.s f1, f20, f25, f16, rmm # perform operation
fmsub.s f1, f20, f25, f16, rne # perform operation
fmsub.s f1, f20, f25, f16, rtz # perform operation
fmsub.s f1, f20, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f20, f25, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x26, 0xfb4ccf84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xd66ffbb1 # load x3 with value 0xd66ffbb1
sw x3, 0(x2) # store 0xd66ffbb1 in memory
flw f12, 0(x2) # load 0xd66ffbb1 from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fmsub.s f26, f3, f12, f19, dyn # perform operation
fmsub.s f26, f3, f12, f19, rdn # perform operation
fmsub.s f26, f3, f12, f19, rmm # perform operation
fmsub.s f26, f3, f12, f19, rne # perform operation
fmsub.s f26, f3, f12, f19, rtz # perform operation
fmsub.s f26, f3, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f3, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f3, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f3, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f3, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f3, f12, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x16, 0x84699101 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x2ee55cfb # load x3 with value 0x2ee55cfb
sw x3, 0(x2) # store 0x2ee55cfb in memory
flw f21, 0(x2) # load 0x2ee55cfb from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmsub.s f16, f25, f21, f30, dyn # perform operation
fmsub.s f16, f25, f21, f30, rdn # perform operation
fmsub.s f16, f25, f21, f30, rmm # perform operation
fmsub.s f16, f25, f21, f30, rne # perform operation
fmsub.s f16, f25, f21, f30, rtz # perform operation
fmsub.s f16, f25, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f25, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f25, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x22, 0x0c5d016e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x43a214ba # load x3 with value 0x43a214ba
sw x3, 0(x2) # store 0x43a214ba in memory
flw f3, 0(x2) # load 0x43a214ba from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmsub.s f22, f23, f3, f8, dyn # perform operation
fmsub.s f22, f23, f3, f8, rdn # perform operation
fmsub.s f22, f23, f3, f8, rmm # perform operation
fmsub.s f22, f23, f3, f8, rne # perform operation
fmsub.s f22, f23, f3, f8, rtz # perform operation
fmsub.s f22, f23, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f3, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x10, 0x9d6c9720 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x824cd04e # load x3 with value 0x824cd04e
sw x3, 0(x2) # store 0x824cd04e in memory
flw f19, 0(x2) # load 0x824cd04e from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fmsub.s f10, f14, f19, f22, dyn # perform operation
fmsub.s f10, f14, f19, f22, rdn # perform operation
fmsub.s f10, f14, f19, f22, rmm # perform operation
fmsub.s f10, f14, f19, f22, rne # perform operation
fmsub.s f10, f14, f19, f22, rtz # perform operation
fmsub.s f10, f14, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x22, 0xb07565ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x51ca1f90 # load x3 with value 0x51ca1f90
sw x3, 0(x2) # store 0x51ca1f90 in memory
flw f20, 0(x2) # load 0x51ca1f90 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmsub.s f22, f4, f20, f11, dyn # perform operation
fmsub.s f22, f4, f20, f11, rdn # perform operation
fmsub.s f22, f4, f20, f11, rmm # perform operation
fmsub.s f22, f4, f20, f11, rne # perform operation
fmsub.s f22, f4, f20, f11, rtz # perform operation
fmsub.s f22, f4, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f4, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f4, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f4, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f4, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f4, f20, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x18, 0x8c3e00d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0xc8211095 # load x3 with value 0xc8211095
sw x3, 0(x2) # store 0xc8211095 in memory
flw f8, 0(x2) # load 0xc8211095 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmsub.s f18, f9, f8, f17, dyn # perform operation
fmsub.s f18, f9, f8, f17, rdn # perform operation
fmsub.s f18, f9, f8, f17, rmm # perform operation
fmsub.s f18, f9, f8, f17, rne # perform operation
fmsub.s f18, f9, f8, f17, rtz # perform operation
fmsub.s f18, f9, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f8, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x4, 0x03106746 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xb241834a # load x3 with value 0xb241834a
sw x3, 0(x2) # store 0xb241834a in memory
flw f16, 0(x2) # load 0xb241834a from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f4, f26, f16, f17, dyn # perform operation
fmsub.s f4, f26, f16, f17, rdn # perform operation
fmsub.s f4, f26, f16, f17, rmm # perform operation
fmsub.s f4, f26, f16, f17, rne # perform operation
fmsub.s f4, f26, f16, f17, rtz # perform operation
fmsub.s f4, f26, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f26, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f26, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x12, 0x7e395005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xfaf5c309 # load x3 with value 0xfaf5c309
sw x3, 0(x2) # store 0xfaf5c309 in memory
flw f24, 0(x2) # load 0xfaf5c309 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f12, f20, f24, f25, dyn # perform operation
fmsub.s f12, f20, f24, f25, rdn # perform operation
fmsub.s f12, f20, f24, f25, rmm # perform operation
fmsub.s f12, f20, f24, f25, rne # perform operation
fmsub.s f12, f20, f24, f25, rtz # perform operation
fmsub.s f12, f20, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f20, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f20, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x25, 0x581490dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x24b32f0a # load x3 with value 0x24b32f0a
sw x3, 0(x2) # store 0x24b32f0a in memory
flw f9, 0(x2) # load 0x24b32f0a from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fmsub.s f25, f4, f9, f29, dyn # perform operation
fmsub.s f25, f4, f9, f29, rdn # perform operation
fmsub.s f25, f4, f9, f29, rmm # perform operation
fmsub.s f25, f4, f9, f29, rne # perform operation
fmsub.s f25, f4, f9, f29, rtz # perform operation
fmsub.s f25, f4, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f4, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f4, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f4, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f4, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f4, f9, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x31, 0x4b78fc05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0xeb44555b # load x3 with value 0xeb44555b
sw x3, 0(x2) # store 0xeb44555b in memory
flw f28, 0(x2) # load 0xeb44555b from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmsub.s f31, f20, f28, f30, dyn # perform operation
fmsub.s f31, f20, f28, f30, rdn # perform operation
fmsub.s f31, f20, f28, f30, rmm # perform operation
fmsub.s f31, f20, f28, f30, rne # perform operation
fmsub.s f31, f20, f28, f30, rtz # perform operation
fmsub.s f31, f20, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x12, 0x6c61f97a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x369e27a4 # load x3 with value 0x369e27a4
sw x3, 0(x2) # store 0x369e27a4 in memory
flw f24, 0(x2) # load 0x369e27a4 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmsub.s f12, f11, f24, f2, dyn # perform operation
fmsub.s f12, f11, f24, f2, rdn # perform operation
fmsub.s f12, f11, f24, f2, rmm # perform operation
fmsub.s f12, f11, f24, f2, rne # perform operation
fmsub.s f12, f11, f24, f2, rtz # perform operation
fmsub.s f12, f11, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x15, 0xdca04b89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x55543c45 # load x3 with value 0x55543c45
sw x3, 0(x2) # store 0x55543c45 in memory
flw f7, 0(x2) # load 0x55543c45 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmsub.s f15, f30, f7, f11, dyn # perform operation
fmsub.s f15, f30, f7, f11, rdn # perform operation
fmsub.s f15, f30, f7, f11, rmm # perform operation
fmsub.s f15, f30, f7, f11, rne # perform operation
fmsub.s f15, f30, f7, f11, rtz # perform operation
fmsub.s f15, f30, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f30, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f30, f7, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x16, 0x4d37f360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x0aa2a187 # load x3 with value 0x0aa2a187
sw x3, 0(x2) # store 0x0aa2a187 in memory
flw f28, 0(x2) # load 0x0aa2a187 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fmsub.s f16, f7, f28, f5, dyn # perform operation
fmsub.s f16, f7, f28, f5, rdn # perform operation
fmsub.s f16, f7, f28, f5, rmm # perform operation
fmsub.s f16, f7, f28, f5, rne # perform operation
fmsub.s f16, f7, f28, f5, rtz # perform operation
fmsub.s f16, f7, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f7, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f7, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f7, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f7, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f7, f28, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x15, 0x10420c3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x6cdea6d1 # load x3 with value 0x6cdea6d1
sw x3, 0(x2) # store 0x6cdea6d1 in memory
flw f3, 0(x2) # load 0x6cdea6d1 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmsub.s f15, f2, f3, f6, dyn # perform operation
fmsub.s f15, f2, f3, f6, rdn # perform operation
fmsub.s f15, f2, f3, f6, rmm # perform operation
fmsub.s f15, f2, f3, f6, rne # perform operation
fmsub.s f15, f2, f3, f6, rtz # perform operation
fmsub.s f15, f2, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f2, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x11, 0x6ec05e07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x66e534e8 # load x3 with value 0x66e534e8
sw x3, 0(x2) # store 0x66e534e8 in memory
flw f5, 0(x2) # load 0x66e534e8 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fmsub.s f11, f30, f5, f10, dyn # perform operation
fmsub.s f11, f30, f5, f10, rdn # perform operation
fmsub.s f11, f30, f5, f10, rmm # perform operation
fmsub.s f11, f30, f5, f10, rne # perform operation
fmsub.s f11, f30, f5, f10, rtz # perform operation
fmsub.s f11, f30, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x2, 0xe3fed2c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0x54656bc0 # load x3 with value 0x54656bc0
sw x3, 0(x2) # store 0x54656bc0 in memory
flw f14, 0(x2) # load 0x54656bc0 from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmsub.s f2, f27, f14, f11, dyn # perform operation
fmsub.s f2, f27, f14, f11, rdn # perform operation
fmsub.s f2, f27, f14, f11, rmm # perform operation
fmsub.s f2, f27, f14, f11, rne # perform operation
fmsub.s f2, f27, f14, f11, rtz # perform operation
fmsub.s f2, f27, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f27, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x31, 0xc3cdfb5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x668170d0 # load x3 with value 0x668170d0
sw x3, 0(x2) # store 0x668170d0 in memory
flw f4, 0(x2) # load 0x668170d0 from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmsub.s f31, f3, f4, f18, dyn # perform operation
fmsub.s f31, f3, f4, f18, rdn # perform operation
fmsub.s f31, f3, f4, f18, rmm # perform operation
fmsub.s f31, f3, f4, f18, rne # perform operation
fmsub.s f31, f3, f4, f18, rtz # perform operation
fmsub.s f31, f3, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f3, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f3, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x19, 0x2870c32e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x1fbfa01d # load x3 with value 0x1fbfa01d
sw x3, 0(x2) # store 0x1fbfa01d in memory
flw f23, 0(x2) # load 0x1fbfa01d from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmsub.s f19, f3, f23, f10, dyn # perform operation
fmsub.s f19, f3, f23, f10, rdn # perform operation
fmsub.s f19, f3, f23, f10, rmm # perform operation
fmsub.s f19, f3, f23, f10, rne # perform operation
fmsub.s f19, f3, f23, f10, rtz # perform operation
fmsub.s f19, f3, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x11, 0x90c53a5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x1fcce234 # load x3 with value 0x1fcce234
sw x3, 0(x2) # store 0x1fcce234 in memory
flw f20, 0(x2) # load 0x1fcce234 from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f11, f8, f20, f5, dyn # perform operation
fmsub.s f11, f8, f20, f5, rdn # perform operation
fmsub.s f11, f8, f20, f5, rmm # perform operation
fmsub.s f11, f8, f20, f5, rne # perform operation
fmsub.s f11, f8, f20, f5, rtz # perform operation
fmsub.s f11, f8, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x6, 0x3a6d8d54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x14ed8384 # load x3 with value 0x14ed8384
sw x3, 0(x2) # store 0x14ed8384 in memory
flw f4, 0(x2) # load 0x14ed8384 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fmsub.s f6, f8, f4, f22, dyn # perform operation
fmsub.s f6, f8, f4, f22, rdn # perform operation
fmsub.s f6, f8, f4, f22, rmm # perform operation
fmsub.s f6, f8, f4, f22, rne # perform operation
fmsub.s f6, f8, f4, f22, rtz # perform operation
fmsub.s f6, f8, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f4, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x30, 0x173acb37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0xe1035fb3 # load x3 with value 0xe1035fb3
sw x3, 0(x2) # store 0xe1035fb3 in memory
flw f13, 0(x2) # load 0xe1035fb3 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmsub.s f30, f26, f13, f3, dyn # perform operation
fmsub.s f30, f26, f13, f3, rdn # perform operation
fmsub.s f30, f26, f13, f3, rmm # perform operation
fmsub.s f30, f26, f13, f3, rne # perform operation
fmsub.s f30, f26, f13, f3, rtz # perform operation
fmsub.s f30, f26, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f26, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f26, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x18, 0x6dc2f057 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0xf509ba89 # load x3 with value 0xf509ba89
sw x3, 0(x2) # store 0xf509ba89 in memory
flw f26, 0(x2) # load 0xf509ba89 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f18, f24, f26, f10, dyn # perform operation
fmsub.s f18, f24, f26, f10, rdn # perform operation
fmsub.s f18, f24, f26, f10, rmm # perform operation
fmsub.s f18, f24, f26, f10, rne # perform operation
fmsub.s f18, f24, f26, f10, rtz # perform operation
fmsub.s f18, f24, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f24, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x12, 0xa7e0bf17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x5eb639fb # load x3 with value 0x5eb639fb
sw x3, 0(x2) # store 0x5eb639fb in memory
flw f7, 0(x2) # load 0x5eb639fb from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fmsub.s f12, f24, f7, f30, dyn # perform operation
fmsub.s f12, f24, f7, f30, rdn # perform operation
fmsub.s f12, f24, f7, f30, rmm # perform operation
fmsub.s f12, f24, f7, f30, rne # perform operation
fmsub.s f12, f24, f7, f30, rtz # perform operation
fmsub.s f12, f24, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f24, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x28, 0x13d84939 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xd0813bce # load x3 with value 0xd0813bce
sw x3, 0(x2) # store 0xd0813bce in memory
flw f22, 0(x2) # load 0xd0813bce from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmsub.s f28, f30, f22, f29, dyn # perform operation
fmsub.s f28, f30, f22, f29, rdn # perform operation
fmsub.s f28, f30, f22, f29, rmm # perform operation
fmsub.s f28, f30, f22, f29, rne # perform operation
fmsub.s f28, f30, f22, f29, rtz # perform operation
fmsub.s f28, f30, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f30, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f30, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f30, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f30, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f30, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x30, 0xaefa2441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x8f9f1310 # load x3 with value 0x8f9f1310
sw x3, 0(x2) # store 0x8f9f1310 in memory
flw f3, 0(x2) # load 0x8f9f1310 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmsub.s f30, f13, f3, f7, dyn # perform operation
fmsub.s f30, f13, f3, f7, rdn # perform operation
fmsub.s f30, f13, f3, f7, rmm # perform operation
fmsub.s f30, f13, f3, f7, rne # perform operation
fmsub.s f30, f13, f3, f7, rtz # perform operation
fmsub.s f30, f13, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f13, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f13, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x2, 0x00a0b8c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xcdf5ccae # load x3 with value 0xcdf5ccae
sw x3, 0(x2) # store 0xcdf5ccae in memory
flw f1, 0(x2) # load 0xcdf5ccae from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmsub.s f2, f11, f1, f9, dyn # perform operation
fmsub.s f2, f11, f1, f9, rdn # perform operation
fmsub.s f2, f11, f1, f9, rmm # perform operation
fmsub.s f2, f11, f1, f9, rne # perform operation
fmsub.s f2, f11, f1, f9, rtz # perform operation
fmsub.s f2, f11, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f11, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x3, 0x2945a0fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x636143d9 # load x3 with value 0x636143d9
sw x3, 0(x2) # store 0x636143d9 in memory
flw f26, 0(x2) # load 0x636143d9 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmsub.s f3, f14, f26, f23, dyn # perform operation
fmsub.s f3, f14, f26, f23, rdn # perform operation
fmsub.s f3, f14, f26, f23, rmm # perform operation
fmsub.s f3, f14, f26, f23, rne # perform operation
fmsub.s f3, f14, f26, f23, rtz # perform operation
fmsub.s f3, f14, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f26, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x31, 0x50fff0b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x155d74ea # load x3 with value 0x155d74ea
sw x3, 0(x2) # store 0x155d74ea in memory
flw f24, 0(x2) # load 0x155d74ea from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmsub.s f31, f5, f24, f9, dyn # perform operation
fmsub.s f31, f5, f24, f9, rdn # perform operation
fmsub.s f31, f5, f24, f9, rmm # perform operation
fmsub.s f31, f5, f24, f9, rne # perform operation
fmsub.s f31, f5, f24, f9, rtz # perform operation
fmsub.s f31, f5, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f5, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x20, 0x5e96c4b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x93004161 # load x3 with value 0x93004161
sw x3, 0(x2) # store 0x93004161 in memory
flw f10, 0(x2) # load 0x93004161 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmsub.s f20, f22, f10, f4, dyn # perform operation
fmsub.s f20, f22, f10, f4, rdn # perform operation
fmsub.s f20, f22, f10, f4, rmm # perform operation
fmsub.s f20, f22, f10, f4, rne # perform operation
fmsub.s f20, f22, f10, f4, rtz # perform operation
fmsub.s f20, f22, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f22, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f22, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f22, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f22, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f22, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x17, 0x1987bd15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x97d34133 # load x3 with value 0x97d34133
sw x3, 0(x2) # store 0x97d34133 in memory
flw f16, 0(x2) # load 0x97d34133 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmsub.s f17, f22, f16, f25, dyn # perform operation
fmsub.s f17, f22, f16, f25, rdn # perform operation
fmsub.s f17, f22, f16, f25, rmm # perform operation
fmsub.s f17, f22, f16, f25, rne # perform operation
fmsub.s f17, f22, f16, f25, rtz # perform operation
fmsub.s f17, f22, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x25, 0xe7abe7b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x4f4e2764 # load x3 with value 0x4f4e2764
sw x3, 0(x2) # store 0x4f4e2764 in memory
flw f8, 0(x2) # load 0x4f4e2764 from memory into f8
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fmsub.s f25, f23, f8, f14, dyn # perform operation
fmsub.s f25, f23, f8, f14, rdn # perform operation
fmsub.s f25, f23, f8, f14, rmm # perform operation
fmsub.s f25, f23, f8, f14, rne # perform operation
fmsub.s f25, f23, f8, f14, rtz # perform operation
fmsub.s f25, f23, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f8, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x25, 0x3023649b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xea22a7a9 # load x3 with value 0xea22a7a9
sw x3, 0(x2) # store 0xea22a7a9 in memory
flw f23, 0(x2) # load 0xea22a7a9 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmsub.s f25, f8, f23, f13, dyn # perform operation
fmsub.s f25, f8, f23, f13, rdn # perform operation
fmsub.s f25, f8, f23, f13, rmm # perform operation
fmsub.s f25, f8, f23, f13, rne # perform operation
fmsub.s f25, f8, f23, f13, rtz # perform operation
fmsub.s f25, f8, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f8, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f8, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x3, 0xdaa25735 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xcb34b765 # load x3 with value 0xcb34b765
sw x3, 0(x2) # store 0xcb34b765 in memory
flw f16, 0(x2) # load 0xcb34b765 from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmsub.s f3, f20, f16, f5, dyn # perform operation
fmsub.s f3, f20, f16, f5, rdn # perform operation
fmsub.s f3, f20, f16, f5, rmm # perform operation
fmsub.s f3, f20, f16, f5, rne # perform operation
fmsub.s f3, f20, f16, f5, rtz # perform operation
fmsub.s f3, f20, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f20, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x5, 0x24d2a3ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xffcc9ce8 # load x3 with value 0xffcc9ce8
sw x3, 0(x2) # store 0xffcc9ce8 in memory
flw f14, 0(x2) # load 0xffcc9ce8 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fmsub.s f5, f9, f14, f13, dyn # perform operation
fmsub.s f5, f9, f14, f13, rdn # perform operation
fmsub.s f5, f9, f14, f13, rmm # perform operation
fmsub.s f5, f9, f14, f13, rne # perform operation
fmsub.s f5, f9, f14, f13, rtz # perform operation
fmsub.s f5, f9, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f9, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f9, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x24, 0x724d5ed7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xe1895a93 # load x3 with value 0xe1895a93
sw x3, 0(x2) # store 0xe1895a93 in memory
flw f17, 0(x2) # load 0xe1895a93 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fmsub.s f24, f27, f17, f5, dyn # perform operation
fmsub.s f24, f27, f17, f5, rdn # perform operation
fmsub.s f24, f27, f17, f5, rmm # perform operation
fmsub.s f24, f27, f17, f5, rne # perform operation
fmsub.s f24, f27, f17, f5, rtz # perform operation
fmsub.s f24, f27, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f27, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f27, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x23, 0xbc9c4f6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x68f63e02 # load x3 with value 0x68f63e02
sw x3, 0(x2) # store 0x68f63e02 in memory
flw f19, 0(x2) # load 0x68f63e02 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmsub.s f23, f16, f19, f5, dyn # perform operation
fmsub.s f23, f16, f19, f5, rdn # perform operation
fmsub.s f23, f16, f19, f5, rmm # perform operation
fmsub.s f23, f16, f19, f5, rne # perform operation
fmsub.s f23, f16, f19, f5, rtz # perform operation
fmsub.s f23, f16, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f16, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x29, 0x8518ae2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xa178a692 # load x3 with value 0xa178a692
sw x3, 0(x2) # store 0xa178a692 in memory
flw f8, 0(x2) # load 0xa178a692 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fmsub.s f29, f10, f8, f18, dyn # perform operation
fmsub.s f29, f10, f8, f18, rdn # perform operation
fmsub.s f29, f10, f8, f18, rmm # perform operation
fmsub.s f29, f10, f8, f18, rne # perform operation
fmsub.s f29, f10, f8, f18, rtz # perform operation
fmsub.s f29, f10, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f10, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f10, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x20, 0xe295eee7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x330e0476 # load x3 with value 0x330e0476
sw x3, 0(x2) # store 0x330e0476 in memory
flw f10, 0(x2) # load 0x330e0476 from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmsub.s f20, f31, f10, f21, dyn # perform operation
fmsub.s f20, f31, f10, f21, rdn # perform operation
fmsub.s f20, f31, f10, f21, rmm # perform operation
fmsub.s f20, f31, f10, f21, rne # perform operation
fmsub.s f20, f31, f10, f21, rtz # perform operation
fmsub.s f20, f31, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x16, 0x8acd2238 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x30e5e008 # load x3 with value 0x30e5e008
sw x3, 0(x2) # store 0x30e5e008 in memory
flw f19, 0(x2) # load 0x30e5e008 from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fmsub.s f16, f11, f19, f22, dyn # perform operation
fmsub.s f16, f11, f19, f22, rdn # perform operation
fmsub.s f16, f11, f19, f22, rmm # perform operation
fmsub.s f16, f11, f19, f22, rne # perform operation
fmsub.s f16, f11, f19, f22, rtz # perform operation
fmsub.s f16, f11, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f11, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f11, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x20, 0xee0c0910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x6d8028b9 # load x3 with value 0x6d8028b9
sw x3, 0(x2) # store 0x6d8028b9 in memory
flw f17, 0(x2) # load 0x6d8028b9 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f20, f29, f17, f3, dyn # perform operation
fmsub.s f20, f29, f17, f3, rdn # perform operation
fmsub.s f20, f29, f17, f3, rmm # perform operation
fmsub.s f20, f29, f17, f3, rne # perform operation
fmsub.s f20, f29, f17, f3, rtz # perform operation
fmsub.s f20, f29, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x6, 0x5b0cb740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xd3d26a12 # load x3 with value 0xd3d26a12
sw x3, 0(x2) # store 0xd3d26a12 in memory
flw f17, 0(x2) # load 0xd3d26a12 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmsub.s f6, f19, f17, f25, dyn # perform operation
fmsub.s f6, f19, f17, f25, rdn # perform operation
fmsub.s f6, f19, f17, f25, rmm # perform operation
fmsub.s f6, f19, f17, f25, rne # perform operation
fmsub.s f6, f19, f17, f25, rtz # perform operation
fmsub.s f6, f19, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f19, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f19, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x24, 0xafbcee23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xbaa36123 # load x3 with value 0xbaa36123
sw x3, 0(x2) # store 0xbaa36123 in memory
flw f9, 0(x2) # load 0xbaa36123 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fmsub.s f24, f29, f9, f15, dyn # perform operation
fmsub.s f24, f29, f9, f15, rdn # perform operation
fmsub.s f24, f29, f9, f15, rmm # perform operation
fmsub.s f24, f29, f9, f15, rne # perform operation
fmsub.s f24, f29, f9, f15, rtz # perform operation
fmsub.s f24, f29, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f29, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f29, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x9, 0x7da9855a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x43adb920 # load x3 with value 0x43adb920
sw x3, 0(x2) # store 0x43adb920 in memory
flw f22, 0(x2) # load 0x43adb920 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmsub.s f9, f11, f22, f18, dyn # perform operation
fmsub.s f9, f11, f22, f18, rdn # perform operation
fmsub.s f9, f11, f22, f18, rmm # perform operation
fmsub.s f9, f11, f22, f18, rne # perform operation
fmsub.s f9, f11, f22, f18, rtz # perform operation
fmsub.s f9, f11, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x16, 0x1618aa39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x854775ee # load x3 with value 0x854775ee
sw x3, 0(x2) # store 0x854775ee in memory
flw f5, 0(x2) # load 0x854775ee from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmsub.s f16, f1, f5, f15, dyn # perform operation
fmsub.s f16, f1, f5, f15, rdn # perform operation
fmsub.s f16, f1, f5, f15, rmm # perform operation
fmsub.s f16, f1, f5, f15, rne # perform operation
fmsub.s f16, f1, f5, f15, rtz # perform operation
fmsub.s f16, f1, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f1, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f1, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x20, 0x4aadf37e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x34a27b84 # load x3 with value 0x34a27b84
sw x3, 0(x2) # store 0x34a27b84 in memory
flw f11, 0(x2) # load 0x34a27b84 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmsub.s f20, f15, f11, f22, dyn # perform operation
fmsub.s f20, f15, f11, f22, rdn # perform operation
fmsub.s f20, f15, f11, f22, rmm # perform operation
fmsub.s f20, f15, f11, f22, rne # perform operation
fmsub.s f20, f15, f11, f22, rtz # perform operation
fmsub.s f20, f15, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f15, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f15, f11, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x5, 0x9991ea6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x322aac01 # load x3 with value 0x322aac01
sw x3, 0(x2) # store 0x322aac01 in memory
flw f13, 0(x2) # load 0x322aac01 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fmsub.s f5, f10, f13, f7, dyn # perform operation
fmsub.s f5, f10, f13, f7, rdn # perform operation
fmsub.s f5, f10, f13, f7, rmm # perform operation
fmsub.s f5, f10, f13, f7, rne # perform operation
fmsub.s f5, f10, f13, f7, rtz # perform operation
fmsub.s f5, f10, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f10, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f10, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f10, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f10, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f10, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x11, 0x183fbb08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x016acdbf # load x3 with value 0x016acdbf
sw x3, 0(x2) # store 0x016acdbf in memory
flw f16, 0(x2) # load 0x016acdbf from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f11, f31, f16, f19, dyn # perform operation
fmsub.s f11, f31, f16, f19, rdn # perform operation
fmsub.s f11, f31, f16, f19, rmm # perform operation
fmsub.s f11, f31, f16, f19, rne # perform operation
fmsub.s f11, f31, f16, f19, rtz # perform operation
fmsub.s f11, f31, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f16, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x4, 0xf8c4a1b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x758514b3 # load x3 with value 0x758514b3
sw x3, 0(x2) # store 0x758514b3 in memory
flw f31, 0(x2) # load 0x758514b3 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmsub.s f4, f5, f31, f25, dyn # perform operation
fmsub.s f4, f5, f31, f25, rdn # perform operation
fmsub.s f4, f5, f31, f25, rmm # perform operation
fmsub.s f4, f5, f31, f25, rne # perform operation
fmsub.s f4, f5, f31, f25, rtz # perform operation
fmsub.s f4, f5, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f5, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f5, f31, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x22, 0x8638d2d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0xdcfc0e65 # load x3 with value 0xdcfc0e65
sw x3, 0(x2) # store 0xdcfc0e65 in memory
flw f30, 0(x2) # load 0xdcfc0e65 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fmsub.s f22, f18, f30, f17, dyn # perform operation
fmsub.s f22, f18, f30, f17, rdn # perform operation
fmsub.s f22, f18, f30, f17, rmm # perform operation
fmsub.s f22, f18, f30, f17, rne # perform operation
fmsub.s f22, f18, f30, f17, rtz # perform operation
fmsub.s f22, f18, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f18, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f18, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f18, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f18, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f18, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x4, 0x5fa73975 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xd6c07baa # load x3 with value 0xd6c07baa
sw x3, 0(x2) # store 0xd6c07baa in memory
flw f25, 0(x2) # load 0xd6c07baa from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmsub.s f4, f13, f25, f26, dyn # perform operation
fmsub.s f4, f13, f25, f26, rdn # perform operation
fmsub.s f4, f13, f25, f26, rmm # perform operation
fmsub.s f4, f13, f25, f26, rne # perform operation
fmsub.s f4, f13, f25, f26, rtz # perform operation
fmsub.s f4, f13, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f13, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f13, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x5, 0x5ca8f023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x862edf44 # load x3 with value 0x862edf44
sw x3, 0(x2) # store 0x862edf44 in memory
flw f26, 0(x2) # load 0x862edf44 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fmsub.s f5, f20, f26, f31, dyn # perform operation
fmsub.s f5, f20, f26, f31, rdn # perform operation
fmsub.s f5, f20, f26, f31, rmm # perform operation
fmsub.s f5, f20, f26, f31, rne # perform operation
fmsub.s f5, f20, f26, f31, rtz # perform operation
fmsub.s f5, f20, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f20, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f20, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f20, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f20, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f20, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x12, 0x93942192 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x49c79192 # load x3 with value 0x49c79192
sw x3, 0(x2) # store 0x49c79192 in memory
flw f31, 0(x2) # load 0x49c79192 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fmsub.s f12, f29, f31, f17, dyn # perform operation
fmsub.s f12, f29, f31, f17, rdn # perform operation
fmsub.s f12, f29, f31, f17, rmm # perform operation
fmsub.s f12, f29, f31, f17, rne # perform operation
fmsub.s f12, f29, f31, f17, rtz # perform operation
fmsub.s f12, f29, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f29, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f29, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x8, 0xcf151e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xdd459062 # load x3 with value 0xdd459062
sw x3, 0(x2) # store 0xdd459062 in memory
flw f24, 0(x2) # load 0xdd459062 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmsub.s f8, f7, f24, f4, dyn # perform operation
fmsub.s f8, f7, f24, f4, rdn # perform operation
fmsub.s f8, f7, f24, f4, rmm # perform operation
fmsub.s f8, f7, f24, f4, rne # perform operation
fmsub.s f8, f7, f24, f4, rtz # perform operation
fmsub.s f8, f7, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x5, 0xc55ad76c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xe556e43a # load x3 with value 0xe556e43a
sw x3, 0(x2) # store 0xe556e43a in memory
flw f9, 0(x2) # load 0xe556e43a from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fmsub.s f5, f19, f9, f15, dyn # perform operation
fmsub.s f5, f19, f9, f15, rdn # perform operation
fmsub.s f5, f19, f9, f15, rmm # perform operation
fmsub.s f5, f19, f9, f15, rne # perform operation
fmsub.s f5, f19, f9, f15, rtz # perform operation
fmsub.s f5, f19, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f19, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f19, f9, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x3, 0x090ce9bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x3d9642ee # load x3 with value 0x3d9642ee
sw x3, 0(x2) # store 0x3d9642ee in memory
flw f20, 0(x2) # load 0x3d9642ee from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmsub.s f3, f11, f20, f19, dyn # perform operation
fmsub.s f3, f11, f20, f19, rdn # perform operation
fmsub.s f3, f11, f20, f19, rmm # perform operation
fmsub.s f3, f11, f20, f19, rne # perform operation
fmsub.s f3, f11, f20, f19, rtz # perform operation
fmsub.s f3, f11, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f11, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f11, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x13, 0x51fdbc39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x24d348c1 # load x3 with value 0x24d348c1
sw x3, 0(x2) # store 0x24d348c1 in memory
flw f30, 0(x2) # load 0x24d348c1 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmsub.s f13, f3, f30, f18, dyn # perform operation
fmsub.s f13, f3, f30, f18, rdn # perform operation
fmsub.s f13, f3, f30, f18, rmm # perform operation
fmsub.s f13, f3, f30, f18, rne # perform operation
fmsub.s f13, f3, f30, f18, rtz # perform operation
fmsub.s f13, f3, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f3, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f3, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f3, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f3, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f3, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x5, 0xb1bb723a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x49d70153 # load x3 with value 0x49d70153
sw x3, 0(x2) # store 0x49d70153 in memory
flw f14, 0(x2) # load 0x49d70153 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fmsub.s f5, f9, f14, f21, dyn # perform operation
fmsub.s f5, f9, f14, f21, rdn # perform operation
fmsub.s f5, f9, f14, f21, rmm # perform operation
fmsub.s f5, f9, f14, f21, rne # perform operation
fmsub.s f5, f9, f14, f21, rtz # perform operation
fmsub.s f5, f9, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f9, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f9, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f9, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f9, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f9, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x24, 0x04208742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x530621dc # load x3 with value 0x530621dc
sw x3, 0(x2) # store 0x530621dc in memory
flw f16, 0(x2) # load 0x530621dc from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f24, f20, f16, f26, dyn # perform operation
fmsub.s f24, f20, f16, f26, rdn # perform operation
fmsub.s f24, f20, f16, f26, rmm # perform operation
fmsub.s f24, f20, f16, f26, rne # perform operation
fmsub.s f24, f20, f16, f26, rtz # perform operation
fmsub.s f24, f20, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f20, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f20, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x16, 0x3952c473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x5d930f6a # load x3 with value 0x5d930f6a
sw x3, 0(x2) # store 0x5d930f6a in memory
flw f7, 0(x2) # load 0x5d930f6a from memory into f7
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmsub.s f16, f2, f7, f5, dyn # perform operation
fmsub.s f16, f2, f7, f5, rdn # perform operation
fmsub.s f16, f2, f7, f5, rmm # perform operation
fmsub.s f16, f2, f7, f5, rne # perform operation
fmsub.s f16, f2, f7, f5, rtz # perform operation
fmsub.s f16, f2, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f7, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x11, 0x078873c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x3cced89b # load x3 with value 0x3cced89b
sw x3, 0(x2) # store 0x3cced89b in memory
flw f4, 0(x2) # load 0x3cced89b from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fmsub.s f11, f9, f4, f7, dyn # perform operation
fmsub.s f11, f9, f4, f7, rdn # perform operation
fmsub.s f11, f9, f4, f7, rmm # perform operation
fmsub.s f11, f9, f4, f7, rne # perform operation
fmsub.s f11, f9, f4, f7, rtz # perform operation
fmsub.s f11, f9, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x9, 0x1eab9dff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x33be1a69 # load x3 with value 0x33be1a69
sw x3, 0(x2) # store 0x33be1a69 in memory
flw f29, 0(x2) # load 0x33be1a69 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmsub.s f9, f6, f29, f10, dyn # perform operation
fmsub.s f9, f6, f29, f10, rdn # perform operation
fmsub.s f9, f6, f29, f10, rmm # perform operation
fmsub.s f9, f6, f29, f10, rne # perform operation
fmsub.s f9, f6, f29, f10, rtz # perform operation
fmsub.s f9, f6, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f6, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f6, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x12, 0xeac1b35a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x67c42418 # load x3 with value 0x67c42418
sw x3, 0(x2) # store 0x67c42418 in memory
flw f29, 0(x2) # load 0x67c42418 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fmsub.s f12, f1, f29, f14, dyn # perform operation
fmsub.s f12, f1, f29, f14, rdn # perform operation
fmsub.s f12, f1, f29, f14, rmm # perform operation
fmsub.s f12, f1, f29, f14, rne # perform operation
fmsub.s f12, f1, f29, f14, rtz # perform operation
fmsub.s f12, f1, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f1, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f1, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x11, 0xc004583a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x5ac3295c # load x3 with value 0x5ac3295c
sw x3, 0(x2) # store 0x5ac3295c in memory
flw f18, 0(x2) # load 0x5ac3295c from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fmsub.s f11, f24, f18, f4, dyn # perform operation
fmsub.s f11, f24, f18, f4, rdn # perform operation
fmsub.s f11, f24, f18, f4, rmm # perform operation
fmsub.s f11, f24, f18, f4, rne # perform operation
fmsub.s f11, f24, f18, f4, rtz # perform operation
fmsub.s f11, f24, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f24, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f24, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x21, 0xa56c08b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xcd055b89 # load x3 with value 0xcd055b89
sw x3, 0(x2) # store 0xcd055b89 in memory
flw f28, 0(x2) # load 0xcd055b89 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmsub.s f21, f18, f28, f22, dyn # perform operation
fmsub.s f21, f18, f28, f22, rdn # perform operation
fmsub.s f21, f18, f28, f22, rmm # perform operation
fmsub.s f21, f18, f28, f22, rne # perform operation
fmsub.s f21, f18, f28, f22, rtz # perform operation
fmsub.s f21, f18, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x10, 0x161d5ae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x3803adc7 # load x3 with value 0x3803adc7
sw x3, 0(x2) # store 0x3803adc7 in memory
flw f16, 0(x2) # load 0x3803adc7 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmsub.s f10, f25, f16, f8, dyn # perform operation
fmsub.s f10, f25, f16, f8, rdn # perform operation
fmsub.s f10, f25, f16, f8, rmm # perform operation
fmsub.s f10, f25, f16, f8, rne # perform operation
fmsub.s f10, f25, f16, f8, rtz # perform operation
fmsub.s f10, f25, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x18, 0xbd6e93a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xa7f2281d # load x3 with value 0xa7f2281d
sw x3, 0(x2) # store 0xa7f2281d in memory
flw f23, 0(x2) # load 0xa7f2281d from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fmsub.s f18, f19, f23, f2, dyn # perform operation
fmsub.s f18, f19, f23, f2, rdn # perform operation
fmsub.s f18, f19, f23, f2, rmm # perform operation
fmsub.s f18, f19, f23, f2, rne # perform operation
fmsub.s f18, f19, f23, f2, rtz # perform operation
fmsub.s f18, f19, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x11, 0x3259ceab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0xd1166a09 # load x3 with value 0xd1166a09
sw x3, 0(x2) # store 0xd1166a09 in memory
flw f20, 0(x2) # load 0xd1166a09 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fmsub.s f11, f19, f20, f9, dyn # perform operation
fmsub.s f11, f19, f20, f9, rdn # perform operation
fmsub.s f11, f19, f20, f9, rmm # perform operation
fmsub.s f11, f19, f20, f9, rne # perform operation
fmsub.s f11, f19, f20, f9, rtz # perform operation
fmsub.s f11, f19, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x20, 0xc88825c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xfb6ceb7c # load x3 with value 0xfb6ceb7c
sw x3, 0(x2) # store 0xfb6ceb7c in memory
flw f23, 0(x2) # load 0xfb6ceb7c from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmsub.s f20, f16, f23, f3, dyn # perform operation
fmsub.s f20, f16, f23, f3, rdn # perform operation
fmsub.s f20, f16, f23, f3, rmm # perform operation
fmsub.s f20, f16, f23, f3, rne # perform operation
fmsub.s f20, f16, f23, f3, rtz # perform operation
fmsub.s f20, f16, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f16, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f16, f23, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x25, 0x67c8df7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xbae84f17 # load x3 with value 0xbae84f17
sw x3, 0(x2) # store 0xbae84f17 in memory
flw f21, 0(x2) # load 0xbae84f17 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmsub.s f25, f20, f21, f30, dyn # perform operation
fmsub.s f25, f20, f21, f30, rdn # perform operation
fmsub.s f25, f20, f21, f30, rmm # perform operation
fmsub.s f25, f20, f21, f30, rne # perform operation
fmsub.s f25, f20, f21, f30, rtz # perform operation
fmsub.s f25, f20, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f20, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f20, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x18, 0x301f5536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0x50320510 # load x3 with value 0x50320510
sw x3, 0(x2) # store 0x50320510 in memory
flw f23, 0(x2) # load 0x50320510 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmsub.s f18, f12, f23, f20, dyn # perform operation
fmsub.s f18, f12, f23, f20, rdn # perform operation
fmsub.s f18, f12, f23, f20, rmm # perform operation
fmsub.s f18, f12, f23, f20, rne # perform operation
fmsub.s f18, f12, f23, f20, rtz # perform operation
fmsub.s f18, f12, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f12, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f12, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x17, 0x26974c60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x45335f27 # load x3 with value 0x45335f27
sw x3, 0(x2) # store 0x45335f27 in memory
flw f26, 0(x2) # load 0x45335f27 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmsub.s f17, f31, f26, f18, dyn # perform operation
fmsub.s f17, f31, f26, f18, rdn # perform operation
fmsub.s f17, f31, f26, f18, rmm # perform operation
fmsub.s f17, f31, f26, f18, rne # perform operation
fmsub.s f17, f31, f26, f18, rtz # perform operation
fmsub.s f17, f31, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f31, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f31, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x11, 0x04ddd7a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0xf3b8ce28 # load x3 with value 0xf3b8ce28
sw x3, 0(x2) # store 0xf3b8ce28 in memory
flw f7, 0(x2) # load 0xf3b8ce28 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmsub.s f11, f2, f7, f10, dyn # perform operation
fmsub.s f11, f2, f7, f10, rdn # perform operation
fmsub.s f11, f2, f7, f10, rmm # perform operation
fmsub.s f11, f2, f7, f10, rne # perform operation
fmsub.s f11, f2, f7, f10, rtz # perform operation
fmsub.s f11, f2, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f2, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f2, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x22, 0xd1499e61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x862c42f8 # load x3 with value 0x862c42f8
sw x3, 0(x2) # store 0x862c42f8 in memory
flw f12, 0(x2) # load 0x862c42f8 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmsub.s f22, f25, f12, f17, dyn # perform operation
fmsub.s f22, f25, f12, f17, rdn # perform operation
fmsub.s f22, f25, f12, f17, rmm # perform operation
fmsub.s f22, f25, f12, f17, rne # perform operation
fmsub.s f22, f25, f12, f17, rtz # perform operation
fmsub.s f22, f25, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x5, 0xce28cc22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0xb30f32be # load x3 with value 0xb30f32be
sw x3, 0(x2) # store 0xb30f32be in memory
flw f29, 0(x2) # load 0xb30f32be from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f5, f17, f29, f10, dyn # perform operation
fmsub.s f5, f17, f29, f10, rdn # perform operation
fmsub.s f5, f17, f29, f10, rmm # perform operation
fmsub.s f5, f17, f29, f10, rne # perform operation
fmsub.s f5, f17, f29, f10, rtz # perform operation
fmsub.s f5, f17, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f17, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f17, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f17, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f17, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f17, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x23, 0xd5ad83d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x094e881c # load x3 with value 0x094e881c
sw x3, 0(x2) # store 0x094e881c in memory
flw f7, 0(x2) # load 0x094e881c from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmsub.s f23, f15, f7, f26, dyn # perform operation
fmsub.s f23, f15, f7, f26, rdn # perform operation
fmsub.s f23, f15, f7, f26, rmm # perform operation
fmsub.s f23, f15, f7, f26, rne # perform operation
fmsub.s f23, f15, f7, f26, rtz # perform operation
fmsub.s f23, f15, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f15, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f15, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x19, 0x4c4f7f83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xbb810339 # load x3 with value 0xbb810339
sw x3, 0(x2) # store 0xbb810339 in memory
flw f1, 0(x2) # load 0xbb810339 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f19, f13, f1, f11, dyn # perform operation
fmsub.s f19, f13, f1, f11, rdn # perform operation
fmsub.s f19, f13, f1, f11, rmm # perform operation
fmsub.s f19, f13, f1, f11, rne # perform operation
fmsub.s f19, f13, f1, f11, rtz # perform operation
fmsub.s f19, f13, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x7, 0xb93035f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x6c1dc851 # load x3 with value 0x6c1dc851
sw x3, 0(x2) # store 0x6c1dc851 in memory
flw f25, 0(x2) # load 0x6c1dc851 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmsub.s f7, f6, f25, f26, dyn # perform operation
fmsub.s f7, f6, f25, f26, rdn # perform operation
fmsub.s f7, f6, f25, f26, rmm # perform operation
fmsub.s f7, f6, f25, f26, rne # perform operation
fmsub.s f7, f6, f25, f26, rtz # perform operation
fmsub.s f7, f6, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x19, 0x91ef3ea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x4b4b7a6c # load x3 with value 0x4b4b7a6c
sw x3, 0(x2) # store 0x4b4b7a6c in memory
flw f16, 0(x2) # load 0x4b4b7a6c from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f19, f25, f16, f18, dyn # perform operation
fmsub.s f19, f25, f16, f18, rdn # perform operation
fmsub.s f19, f25, f16, f18, rmm # perform operation
fmsub.s f19, f25, f16, f18, rne # perform operation
fmsub.s f19, f25, f16, f18, rtz # perform operation
fmsub.s f19, f25, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f16, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x21, 0x762f9492 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x56c1ba7c # load x3 with value 0x56c1ba7c
sw x3, 0(x2) # store 0x56c1ba7c in memory
flw f3, 0(x2) # load 0x56c1ba7c from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmsub.s f21, f24, f3, f12, dyn # perform operation
fmsub.s f21, f24, f3, f12, rdn # perform operation
fmsub.s f21, f24, f3, f12, rmm # perform operation
fmsub.s f21, f24, f3, f12, rne # perform operation
fmsub.s f21, f24, f3, f12, rtz # perform operation
fmsub.s f21, f24, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f24, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f24, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x25, 0xd4000485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x29b38b6d # load x3 with value 0x29b38b6d
sw x3, 0(x2) # store 0x29b38b6d in memory
flw f15, 0(x2) # load 0x29b38b6d from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmsub.s f25, f10, f15, f16, dyn # perform operation
fmsub.s f25, f10, f15, f16, rdn # perform operation
fmsub.s f25, f10, f15, f16, rmm # perform operation
fmsub.s f25, f10, f15, f16, rne # perform operation
fmsub.s f25, f10, f15, f16, rtz # perform operation
fmsub.s f25, f10, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x11, 0x88ce7857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x0767d61b # load x3 with value 0x0767d61b
sw x3, 0(x2) # store 0x0767d61b in memory
flw f15, 0(x2) # load 0x0767d61b from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fmsub.s f11, f31, f15, f17, dyn # perform operation
fmsub.s f11, f31, f15, f17, rdn # perform operation
fmsub.s f11, f31, f15, f17, rmm # perform operation
fmsub.s f11, f31, f15, f17, rne # perform operation
fmsub.s f11, f31, f15, f17, rtz # perform operation
fmsub.s f11, f31, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f15, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x17, 0x62602bdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0xa0559d9d # load x3 with value 0xa0559d9d
sw x3, 0(x2) # store 0xa0559d9d in memory
flw f20, 0(x2) # load 0xa0559d9d from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f17, f9, f20, f5, dyn # perform operation
fmsub.s f17, f9, f20, f5, rdn # perform operation
fmsub.s f17, f9, f20, f5, rmm # perform operation
fmsub.s f17, f9, f20, f5, rne # perform operation
fmsub.s f17, f9, f20, f5, rtz # perform operation
fmsub.s f17, f9, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f9, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f9, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f9, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f9, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f9, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x24, 0x37f0433c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x6d543e87 # load x3 with value 0x6d543e87
sw x3, 0(x2) # store 0x6d543e87 in memory
flw f9, 0(x2) # load 0x6d543e87 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmsub.s f24, f26, f9, f18, dyn # perform operation
fmsub.s f24, f26, f9, f18, rdn # perform operation
fmsub.s f24, f26, f9, f18, rmm # perform operation
fmsub.s f24, f26, f9, f18, rne # perform operation
fmsub.s f24, f26, f9, f18, rtz # perform operation
fmsub.s f24, f26, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f9, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x9, 0xd1ab826e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x197aa737 # load x3 with value 0x197aa737
sw x3, 0(x2) # store 0x197aa737 in memory
flw f22, 0(x2) # load 0x197aa737 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fmsub.s f9, f27, f22, f29, dyn # perform operation
fmsub.s f9, f27, f22, f29, rdn # perform operation
fmsub.s f9, f27, f22, f29, rmm # perform operation
fmsub.s f9, f27, f22, f29, rne # perform operation
fmsub.s f9, f27, f22, f29, rtz # perform operation
fmsub.s f9, f27, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x6, 0xb6e4f9d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x8ca198dd # load x3 with value 0x8ca198dd
sw x3, 0(x2) # store 0x8ca198dd in memory
flw f30, 0(x2) # load 0x8ca198dd from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmsub.s f6, f23, f30, f3, dyn # perform operation
fmsub.s f6, f23, f30, f3, rdn # perform operation
fmsub.s f6, f23, f30, f3, rmm # perform operation
fmsub.s f6, f23, f30, f3, rne # perform operation
fmsub.s f6, f23, f30, f3, rtz # perform operation
fmsub.s f6, f23, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f23, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x1, 0x6ba4c890 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xfe30ebaf # load x3 with value 0xfe30ebaf
sw x3, 0(x2) # store 0xfe30ebaf in memory
flw f5, 0(x2) # load 0xfe30ebaf from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f1, f21, f5, f9, dyn # perform operation
fmsub.s f1, f21, f5, f9, rdn # perform operation
fmsub.s f1, f21, f5, f9, rmm # perform operation
fmsub.s f1, f21, f5, f9, rne # perform operation
fmsub.s f1, f21, f5, f9, rtz # perform operation
fmsub.s f1, f21, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f21, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f21, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x12, 0x29b98cd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xda22b307 # load x3 with value 0xda22b307
sw x3, 0(x2) # store 0xda22b307 in memory
flw f23, 0(x2) # load 0xda22b307 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fmsub.s f12, f2, f23, f28, dyn # perform operation
fmsub.s f12, f2, f23, f28, rdn # perform operation
fmsub.s f12, f2, f23, f28, rmm # perform operation
fmsub.s f12, f2, f23, f28, rne # perform operation
fmsub.s f12, f2, f23, f28, rtz # perform operation
fmsub.s f12, f2, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f2, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f2, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x22, 0x7a003347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x0981d15b # load x3 with value 0x0981d15b
sw x3, 0(x2) # store 0x0981d15b in memory
flw f20, 0(x2) # load 0x0981d15b from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmsub.s f22, f14, f20, f8, dyn # perform operation
fmsub.s f22, f14, f20, f8, rdn # perform operation
fmsub.s f22, f14, f20, f8, rmm # perform operation
fmsub.s f22, f14, f20, f8, rne # perform operation
fmsub.s f22, f14, f20, f8, rtz # perform operation
fmsub.s f22, f14, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f14, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x27, 0x5cc5620a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x2e7fd459 # load x3 with value 0x2e7fd459
sw x3, 0(x2) # store 0x2e7fd459 in memory
flw f23, 0(x2) # load 0x2e7fd459 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
fmsub.s f27, f20, f23, f13, dyn # perform operation
fmsub.s f27, f20, f23, f13, rdn # perform operation
fmsub.s f27, f20, f23, f13, rmm # perform operation
fmsub.s f27, f20, f23, f13, rne # perform operation
fmsub.s f27, f20, f23, f13, rtz # perform operation
fmsub.s f27, f20, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f20, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f20, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x8, 0x5c6206cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x04995405 # load x3 with value 0x04995405
sw x3, 0(x2) # store 0x04995405 in memory
flw f27, 0(x2) # load 0x04995405 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmsub.s f8, f1, f27, f17, dyn # perform operation
fmsub.s f8, f1, f27, f17, rdn # perform operation
fmsub.s f8, f1, f27, f17, rmm # perform operation
fmsub.s f8, f1, f27, f17, rne # perform operation
fmsub.s f8, f1, f27, f17, rtz # perform operation
fmsub.s f8, f1, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f1, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f1, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x13, 0xdb9e0c6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xf267776f # load x3 with value 0xf267776f
sw x3, 0(x2) # store 0xf267776f in memory
flw f23, 0(x2) # load 0xf267776f from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fmsub.s f13, f15, f23, f22, dyn # perform operation
fmsub.s f13, f15, f23, f22, rdn # perform operation
fmsub.s f13, f15, f23, f22, rmm # perform operation
fmsub.s f13, f15, f23, f22, rne # perform operation
fmsub.s f13, f15, f23, f22, rtz # perform operation
fmsub.s f13, f15, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x14, 0x95552396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xe40227a6 # load x3 with value 0xe40227a6
sw x3, 0(x2) # store 0xe40227a6 in memory
flw f10, 0(x2) # load 0xe40227a6 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f14, f27, f10, f3, dyn # perform operation
fmsub.s f14, f27, f10, f3, rdn # perform operation
fmsub.s f14, f27, f10, f3, rmm # perform operation
fmsub.s f14, f27, f10, f3, rne # perform operation
fmsub.s f14, f27, f10, f3, rtz # perform operation
fmsub.s f14, f27, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x15, 0xfcf2253e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0x9c3fdc85 # load x3 with value 0x9c3fdc85
sw x3, 0(x2) # store 0x9c3fdc85 in memory
flw f5, 0(x2) # load 0x9c3fdc85 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmsub.s f15, f16, f5, f11, dyn # perform operation
fmsub.s f15, f16, f5, f11, rdn # perform operation
fmsub.s f15, f16, f5, f11, rmm # perform operation
fmsub.s f15, f16, f5, f11, rne # perform operation
fmsub.s f15, f16, f5, f11, rtz # perform operation
fmsub.s f15, f16, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f16, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f16, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x17, 0x83d240b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x661a9f55 # load x3 with value 0x661a9f55
sw x3, 0(x2) # store 0x661a9f55 in memory
flw f4, 0(x2) # load 0x661a9f55 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmsub.s f17, f21, f4, f3, dyn # perform operation
fmsub.s f17, f21, f4, f3, rdn # perform operation
fmsub.s f17, f21, f4, f3, rmm # perform operation
fmsub.s f17, f21, f4, f3, rne # perform operation
fmsub.s f17, f21, f4, f3, rtz # perform operation
fmsub.s f17, f21, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f21, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f21, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f21, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f21, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f21, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x20, 0x1de7946f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0x975267bf # load x3 with value 0x975267bf
sw x3, 0(x2) # store 0x975267bf in memory
flw f18, 0(x2) # load 0x975267bf from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmsub.s f20, f29, f18, f3, dyn # perform operation
fmsub.s f20, f29, f18, f3, rdn # perform operation
fmsub.s f20, f29, f18, f3, rmm # perform operation
fmsub.s f20, f29, f18, f3, rne # perform operation
fmsub.s f20, f29, f18, f3, rtz # perform operation
fmsub.s f20, f29, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x21, 0xc542f3fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x9ae6d07e # load x3 with value 0x9ae6d07e
sw x3, 0(x2) # store 0x9ae6d07e in memory
flw f6, 0(x2) # load 0x9ae6d07e from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f21, f9, f6, f25, dyn # perform operation
fmsub.s f21, f9, f6, f25, rdn # perform operation
fmsub.s f21, f9, f6, f25, rmm # perform operation
fmsub.s f21, f9, f6, f25, rne # perform operation
fmsub.s f21, f9, f6, f25, rtz # perform operation
fmsub.s f21, f9, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f9, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x6, 0x9cce5b8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x691d3e19 # load x3 with value 0x691d3e19
sw x3, 0(x2) # store 0x691d3e19 in memory
flw f19, 0(x2) # load 0x691d3e19 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fmsub.s f6, f13, f19, f2, dyn # perform operation
fmsub.s f6, f13, f19, f2, rdn # perform operation
fmsub.s f6, f13, f19, f2, rmm # perform operation
fmsub.s f6, f13, f19, f2, rne # perform operation
fmsub.s f6, f13, f19, f2, rtz # perform operation
fmsub.s f6, f13, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f13, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f13, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f13, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f13, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f13, f19, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x9, 0xdd3fd8ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x088de78c # load x3 with value 0x088de78c
sw x3, 0(x2) # store 0x088de78c in memory
flw f14, 0(x2) # load 0x088de78c from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmsub.s f9, f20, f14, f18, dyn # perform operation
fmsub.s f9, f20, f14, f18, rdn # perform operation
fmsub.s f9, f20, f14, f18, rmm # perform operation
fmsub.s f9, f20, f14, f18, rne # perform operation
fmsub.s f9, f20, f14, f18, rtz # perform operation
fmsub.s f9, f20, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f20, f14, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x9, 0xeabfe03f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x333ef7a4 # load x3 with value 0x333ef7a4
sw x3, 0(x2) # store 0x333ef7a4 in memory
flw f29, 0(x2) # load 0x333ef7a4 from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmsub.s f9, f15, f29, f13, dyn # perform operation
fmsub.s f9, f15, f29, f13, rdn # perform operation
fmsub.s f9, f15, f29, f13, rmm # perform operation
fmsub.s f9, f15, f29, f13, rne # perform operation
fmsub.s f9, f15, f29, f13, rtz # perform operation
fmsub.s f9, f15, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x11, 0xa8113569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x966afd23 # load x3 with value 0x966afd23
sw x3, 0(x2) # store 0x966afd23 in memory
flw f5, 0(x2) # load 0x966afd23 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmsub.s f11, f31, f5, f7, dyn # perform operation
fmsub.s f11, f31, f5, f7, rdn # perform operation
fmsub.s f11, f31, f5, f7, rmm # perform operation
fmsub.s f11, f31, f5, f7, rne # perform operation
fmsub.s f11, f31, f5, f7, rtz # perform operation
fmsub.s f11, f31, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f31, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f31, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f31, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f31, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f31, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x27, 0xcfcaa3bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x35a7d645 # load x3 with value 0x35a7d645
sw x3, 0(x2) # store 0x35a7d645 in memory
flw f13, 0(x2) # load 0x35a7d645 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmsub.s f27, f5, f13, f22, dyn # perform operation
fmsub.s f27, f5, f13, f22, rdn # perform operation
fmsub.s f27, f5, f13, f22, rmm # perform operation
fmsub.s f27, f5, f13, f22, rne # perform operation
fmsub.s f27, f5, f13, f22, rtz # perform operation
fmsub.s f27, f5, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f5, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f5, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x14, 0xe90a9038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xbfc62e78 # load x3 with value 0xbfc62e78
sw x3, 0(x2) # store 0xbfc62e78 in memory
flw f12, 0(x2) # load 0xbfc62e78 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fmsub.s f14, f16, f12, f5, dyn # perform operation
fmsub.s f14, f16, f12, f5, rdn # perform operation
fmsub.s f14, f16, f12, f5, rmm # perform operation
fmsub.s f14, f16, f12, f5, rne # perform operation
fmsub.s f14, f16, f12, f5, rtz # perform operation
fmsub.s f14, f16, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f16, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f16, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x3, 0x4023509d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x5e4e927f # load x3 with value 0x5e4e927f
sw x3, 0(x2) # store 0x5e4e927f in memory
flw f14, 0(x2) # load 0x5e4e927f from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmsub.s f3, f23, f14, f24, dyn # perform operation
fmsub.s f3, f23, f14, f24, rdn # perform operation
fmsub.s f3, f23, f14, f24, rmm # perform operation
fmsub.s f3, f23, f14, f24, rne # perform operation
fmsub.s f3, f23, f14, f24, rtz # perform operation
fmsub.s f3, f23, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f23, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x21, 0x4c2cc479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x7da00665 # load x3 with value 0x7da00665
sw x3, 0(x2) # store 0x7da00665 in memory
flw f17, 0(x2) # load 0x7da00665 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f21, f19, f17, f18, dyn # perform operation
fmsub.s f21, f19, f17, f18, rdn # perform operation
fmsub.s f21, f19, f17, f18, rmm # perform operation
fmsub.s f21, f19, f17, f18, rne # perform operation
fmsub.s f21, f19, f17, f18, rtz # perform operation
fmsub.s f21, f19, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x16, 0x0457c82c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x4207e5ea # load x3 with value 0x4207e5ea
sw x3, 0(x2) # store 0x4207e5ea in memory
flw f22, 0(x2) # load 0x4207e5ea from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmsub.s f16, f5, f22, f4, dyn # perform operation
fmsub.s f16, f5, f22, f4, rdn # perform operation
fmsub.s f16, f5, f22, f4, rmm # perform operation
fmsub.s f16, f5, f22, f4, rne # perform operation
fmsub.s f16, f5, f22, f4, rtz # perform operation
fmsub.s f16, f5, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f5, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f5, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f5, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f5, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f5, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x30, 0x88f3574e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x4a761e1b # load x3 with value 0x4a761e1b
sw x3, 0(x2) # store 0x4a761e1b in memory
flw f15, 0(x2) # load 0x4a761e1b from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmsub.s f30, f1, f15, f10, dyn # perform operation
fmsub.s f30, f1, f15, f10, rdn # perform operation
fmsub.s f30, f1, f15, f10, rmm # perform operation
fmsub.s f30, f1, f15, f10, rne # perform operation
fmsub.s f30, f1, f15, f10, rtz # perform operation
fmsub.s f30, f1, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f1, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x7, 0x97cc3fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0xe7fdb2b0 # load x3 with value 0xe7fdb2b0
sw x3, 0(x2) # store 0xe7fdb2b0 in memory
flw f2, 0(x2) # load 0xe7fdb2b0 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmsub.s f7, f6, f2, f22, dyn # perform operation
fmsub.s f7, f6, f2, f22, rdn # perform operation
fmsub.s f7, f6, f2, f22, rmm # perform operation
fmsub.s f7, f6, f2, f22, rne # perform operation
fmsub.s f7, f6, f2, f22, rtz # perform operation
fmsub.s f7, f6, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x29, 0x9472009b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x60495ed3 # load x3 with value 0x60495ed3
sw x3, 0(x2) # store 0x60495ed3 in memory
flw f27, 0(x2) # load 0x60495ed3 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fmsub.s f29, f5, f27, f13, dyn # perform operation
fmsub.s f29, f5, f27, f13, rdn # perform operation
fmsub.s f29, f5, f27, f13, rmm # perform operation
fmsub.s f29, f5, f27, f13, rne # perform operation
fmsub.s f29, f5, f27, f13, rtz # perform operation
fmsub.s f29, f5, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f5, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f5, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x28, 0x752c90e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0xb3c6b499 # load x3 with value 0xb3c6b499
sw x3, 0(x2) # store 0xb3c6b499 in memory
flw f6, 0(x2) # load 0xb3c6b499 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fmsub.s f28, f17, f6, f16, dyn # perform operation
fmsub.s f28, f17, f6, f16, rdn # perform operation
fmsub.s f28, f17, f6, f16, rmm # perform operation
fmsub.s f28, f17, f6, f16, rne # perform operation
fmsub.s f28, f17, f6, f16, rtz # perform operation
fmsub.s f28, f17, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f17, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f17, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f17, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f17, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f17, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x20, 0x59fff8cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xb3659f7d # load x3 with value 0xb3659f7d
sw x3, 0(x2) # store 0xb3659f7d in memory
flw f18, 0(x2) # load 0xb3659f7d from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmsub.s f20, f29, f18, f14, dyn # perform operation
fmsub.s f20, f29, f18, f14, rdn # perform operation
fmsub.s f20, f29, f18, f14, rmm # perform operation
fmsub.s f20, f29, f18, f14, rne # perform operation
fmsub.s f20, f29, f18, f14, rtz # perform operation
fmsub.s f20, f29, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f29, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f29, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f29, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f29, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f29, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x7, 0x7ac68385 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0xb44edb89 # load x3 with value 0xb44edb89
sw x3, 0(x2) # store 0xb44edb89 in memory
flw f13, 0(x2) # load 0xb44edb89 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmsub.s f7, f10, f13, f9, dyn # perform operation
fmsub.s f7, f10, f13, f9, rdn # perform operation
fmsub.s f7, f10, f13, f9, rmm # perform operation
fmsub.s f7, f10, f13, f9, rne # perform operation
fmsub.s f7, f10, f13, f9, rtz # perform operation
fmsub.s f7, f10, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f13, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x6, 0x2bb7f46d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x087d849b # load x3 with value 0x087d849b
sw x3, 0(x2) # store 0x087d849b in memory
flw f12, 0(x2) # load 0x087d849b from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmsub.s f6, f14, f12, f22, dyn # perform operation
fmsub.s f6, f14, f12, f22, rdn # perform operation
fmsub.s f6, f14, f12, f22, rmm # perform operation
fmsub.s f6, f14, f12, f22, rne # perform operation
fmsub.s f6, f14, f12, f22, rtz # perform operation
fmsub.s f6, f14, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f14, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f14, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x14, 0xdcaedf00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x67b6ac50 # load x3 with value 0x67b6ac50
sw x3, 0(x2) # store 0x67b6ac50 in memory
flw f4, 0(x2) # load 0x67b6ac50 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmsub.s f14, f5, f4, f31, dyn # perform operation
fmsub.s f14, f5, f4, f31, rdn # perform operation
fmsub.s f14, f5, f4, f31, rmm # perform operation
fmsub.s f14, f5, f4, f31, rne # perform operation
fmsub.s f14, f5, f4, f31, rtz # perform operation
fmsub.s f14, f5, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f5, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f5, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x25, 0x4104bfec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0xa2c23822 # load x3 with value 0xa2c23822
sw x3, 0(x2) # store 0xa2c23822 in memory
flw f8, 0(x2) # load 0xa2c23822 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmsub.s f25, f29, f8, f11, dyn # perform operation
fmsub.s f25, f29, f8, f11, rdn # perform operation
fmsub.s f25, f29, f8, f11, rmm # perform operation
fmsub.s f25, f29, f8, f11, rne # perform operation
fmsub.s f25, f29, f8, f11, rtz # perform operation
fmsub.s f25, f29, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f8, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x19, 0x70bc65cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0xb4e81433 # load x3 with value 0xb4e81433
sw x3, 0(x2) # store 0xb4e81433 in memory
flw f4, 0(x2) # load 0xb4e81433 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmsub.s f19, f1, f4, f30, dyn # perform operation
fmsub.s f19, f1, f4, f30, rdn # perform operation
fmsub.s f19, f1, f4, f30, rmm # perform operation
fmsub.s f19, f1, f4, f30, rne # perform operation
fmsub.s f19, f1, f4, f30, rtz # perform operation
fmsub.s f19, f1, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f1, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f1, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x14, 0x72d673b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0xba1a905f # load x3 with value 0xba1a905f
sw x3, 0(x2) # store 0xba1a905f in memory
flw f7, 0(x2) # load 0xba1a905f from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmsub.s f14, f27, f7, f3, dyn # perform operation
fmsub.s f14, f27, f7, f3, rdn # perform operation
fmsub.s f14, f27, f7, f3, rmm # perform operation
fmsub.s f14, f27, f7, f3, rne # perform operation
fmsub.s f14, f27, f7, f3, rtz # perform operation
fmsub.s f14, f27, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f27, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f27, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x25, 0x66a2c665 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x09484ef8 # load x3 with value 0x09484ef8
sw x3, 0(x2) # store 0x09484ef8 in memory
flw f2, 0(x2) # load 0x09484ef8 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fmsub.s f25, f8, f2, f13, dyn # perform operation
fmsub.s f25, f8, f2, f13, rdn # perform operation
fmsub.s f25, f8, f2, f13, rmm # perform operation
fmsub.s f25, f8, f2, f13, rne # perform operation
fmsub.s f25, f8, f2, f13, rtz # perform operation
fmsub.s f25, f8, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f8, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f8, f2, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x15, 0x8d0152f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xf1060478 # load x3 with value 0xf1060478
sw x3, 0(x2) # store 0xf1060478 in memory
flw f14, 0(x2) # load 0xf1060478 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmsub.s f15, f24, f14, f21, dyn # perform operation
fmsub.s f15, f24, f14, f21, rdn # perform operation
fmsub.s f15, f24, f14, f21, rmm # perform operation
fmsub.s f15, f24, f14, f21, rne # perform operation
fmsub.s f15, f24, f14, f21, rtz # perform operation
fmsub.s f15, f24, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f24, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f24, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f24, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f24, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f24, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x31, 0xf8c9a9aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x1d6a3ec9 # load x3 with value 0x1d6a3ec9
sw x3, 0(x2) # store 0x1d6a3ec9 in memory
flw f17, 0(x2) # load 0x1d6a3ec9 from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fmsub.s f31, f11, f17, f7, dyn # perform operation
fmsub.s f31, f11, f17, f7, rdn # perform operation
fmsub.s f31, f11, f17, f7, rmm # perform operation
fmsub.s f31, f11, f17, f7, rne # perform operation
fmsub.s f31, f11, f17, f7, rtz # perform operation
fmsub.s f31, f11, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x30, 0x764e5003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x29796639 # load x3 with value 0x29796639
sw x3, 0(x2) # store 0x29796639 in memory
flw f17, 0(x2) # load 0x29796639 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f30, f24, f17, f6, dyn # perform operation
fmsub.s f30, f24, f17, f6, rdn # perform operation
fmsub.s f30, f24, f17, f6, rmm # perform operation
fmsub.s f30, f24, f17, f6, rne # perform operation
fmsub.s f30, f24, f17, f6, rtz # perform operation
fmsub.s f30, f24, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f24, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x30, 0x38478232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x3c3826f8 # load x3 with value 0x3c3826f8
sw x3, 0(x2) # store 0x3c3826f8 in memory
flw f1, 0(x2) # load 0x3c3826f8 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmsub.s f30, f8, f1, f18, dyn # perform operation
fmsub.s f30, f8, f1, f18, rdn # perform operation
fmsub.s f30, f8, f1, f18, rmm # perform operation
fmsub.s f30, f8, f1, f18, rne # perform operation
fmsub.s f30, f8, f1, f18, rtz # perform operation
fmsub.s f30, f8, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f8, f1, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x7, 0x9704f2c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x5cfb4062 # load x3 with value 0x5cfb4062
sw x3, 0(x2) # store 0x5cfb4062 in memory
flw f18, 0(x2) # load 0x5cfb4062 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fmsub.s f7, f26, f18, f6, dyn # perform operation
fmsub.s f7, f26, f18, f6, rdn # perform operation
fmsub.s f7, f26, f18, f6, rmm # perform operation
fmsub.s f7, f26, f18, f6, rne # perform operation
fmsub.s f7, f26, f18, f6, rtz # perform operation
fmsub.s f7, f26, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f26, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f26, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x27, 0xd15a2e84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x6a4f3236 # load x3 with value 0x6a4f3236
sw x3, 0(x2) # store 0x6a4f3236 in memory
flw f12, 0(x2) # load 0x6a4f3236 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fmsub.s f27, f20, f12, f15, dyn # perform operation
fmsub.s f27, f20, f12, f15, rdn # perform operation
fmsub.s f27, f20, f12, f15, rmm # perform operation
fmsub.s f27, f20, f12, f15, rne # perform operation
fmsub.s f27, f20, f12, f15, rtz # perform operation
fmsub.s f27, f20, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f20, f12, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x31, 0x4a4e8413 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x3e306e8e # load x3 with value 0x3e306e8e
sw x3, 0(x2) # store 0x3e306e8e in memory
flw f25, 0(x2) # load 0x3e306e8e from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fmsub.s f31, f8, f25, f7, dyn # perform operation
fmsub.s f31, f8, f25, f7, rdn # perform operation
fmsub.s f31, f8, f25, f7, rmm # perform operation
fmsub.s f31, f8, f25, f7, rne # perform operation
fmsub.s f31, f8, f25, f7, rtz # perform operation
fmsub.s f31, f8, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f8, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f8, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f8, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f8, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f8, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x19, 0x76232722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x085be006 # load x3 with value 0x085be006
sw x3, 0(x2) # store 0x085be006 in memory
flw f9, 0(x2) # load 0x085be006 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmsub.s f19, f3, f9, f25, dyn # perform operation
fmsub.s f19, f3, f9, f25, rdn # perform operation
fmsub.s f19, f3, f9, f25, rmm # perform operation
fmsub.s f19, f3, f9, f25, rne # perform operation
fmsub.s f19, f3, f9, f25, rtz # perform operation
fmsub.s f19, f3, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f3, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f3, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f3, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f3, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f3, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x9, 0xbb7f15f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xa12e4b17 # load x3 with value 0xa12e4b17
sw x3, 0(x2) # store 0xa12e4b17 in memory
flw f5, 0(x2) # load 0xa12e4b17 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmsub.s f9, f28, f5, f4, dyn # perform operation
fmsub.s f9, f28, f5, f4, rdn # perform operation
fmsub.s f9, f28, f5, f4, rmm # perform operation
fmsub.s f9, f28, f5, f4, rne # perform operation
fmsub.s f9, f28, f5, f4, rtz # perform operation
fmsub.s f9, f28, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f28, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f28, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f28, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f28, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f28, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x27, 0x31236cbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xa3cc3231 # load x3 with value 0xa3cc3231
sw x3, 0(x2) # store 0xa3cc3231 in memory
flw f3, 0(x2) # load 0xa3cc3231 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmsub.s f27, f9, f3, f13, dyn # perform operation
fmsub.s f27, f9, f3, f13, rdn # perform operation
fmsub.s f27, f9, f3, f13, rmm # perform operation
fmsub.s f27, f9, f3, f13, rne # perform operation
fmsub.s f27, f9, f3, f13, rtz # perform operation
fmsub.s f27, f9, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f9, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f9, f3, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x12, 0xd872eb35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0xd73f59c6 # load x3 with value 0xd73f59c6
sw x3, 0(x2) # store 0xd73f59c6 in memory
flw f17, 0(x2) # load 0xd73f59c6 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmsub.s f12, f21, f17, f11, dyn # perform operation
fmsub.s f12, f21, f17, f11, rdn # perform operation
fmsub.s f12, f21, f17, f11, rmm # perform operation
fmsub.s f12, f21, f17, f11, rne # perform operation
fmsub.s f12, f21, f17, f11, rtz # perform operation
fmsub.s f12, f21, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f21, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f21, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x16, 0xece94ffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x09d9f0b4 # load x3 with value 0x09d9f0b4
sw x3, 0(x2) # store 0x09d9f0b4 in memory
flw f5, 0(x2) # load 0x09d9f0b4 from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f16, f28, f5, f30, dyn # perform operation
fmsub.s f16, f28, f5, f30, rdn # perform operation
fmsub.s f16, f28, f5, f30, rmm # perform operation
fmsub.s f16, f28, f5, f30, rne # perform operation
fmsub.s f16, f28, f5, f30, rtz # perform operation
fmsub.s f16, f28, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x29, 0x38cbc4f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0xbabcdba0 # load x3 with value 0xbabcdba0
sw x3, 0(x2) # store 0xbabcdba0 in memory
flw f9, 0(x2) # load 0xbabcdba0 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmsub.s f29, f8, f9, f5, dyn # perform operation
fmsub.s f29, f8, f9, f5, rdn # perform operation
fmsub.s f29, f8, f9, f5, rmm # perform operation
fmsub.s f29, f8, f9, f5, rne # perform operation
fmsub.s f29, f8, f9, f5, rtz # perform operation
fmsub.s f29, f8, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x31, 0x748664e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x86ed3584 # load x3 with value 0x86ed3584
sw x3, 0(x2) # store 0x86ed3584 in memory
flw f26, 0(x2) # load 0x86ed3584 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f31, f20, f26, f29, dyn # perform operation
fmsub.s f31, f20, f26, f29, rdn # perform operation
fmsub.s f31, f20, f26, f29, rmm # perform operation
fmsub.s f31, f20, f26, f29, rne # perform operation
fmsub.s f31, f20, f26, f29, rtz # perform operation
fmsub.s f31, f20, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f20, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f20, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x31, 0x5835543c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x354281b2 # load x3 with value 0x354281b2
sw x3, 0(x2) # store 0x354281b2 in memory
flw f23, 0(x2) # load 0x354281b2 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmsub.s f31, f18, f23, f8, dyn # perform operation
fmsub.s f31, f18, f23, f8, rdn # perform operation
fmsub.s f31, f18, f23, f8, rmm # perform operation
fmsub.s f31, f18, f23, f8, rne # perform operation
fmsub.s f31, f18, f23, f8, rtz # perform operation
fmsub.s f31, f18, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f18, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f18, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x27, 0xbee1a1a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x15f5c6e0 # load x3 with value 0x15f5c6e0
sw x3, 0(x2) # store 0x15f5c6e0 in memory
flw f29, 0(x2) # load 0x15f5c6e0 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmsub.s f27, f1, f29, f8, dyn # perform operation
fmsub.s f27, f1, f29, f8, rdn # perform operation
fmsub.s f27, f1, f29, f8, rmm # perform operation
fmsub.s f27, f1, f29, f8, rne # perform operation
fmsub.s f27, f1, f29, f8, rtz # perform operation
fmsub.s f27, f1, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f1, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f1, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f1, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f1, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f1, f29, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x18, 0xd7785370 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x23d6f1b3 # load x3 with value 0x23d6f1b3
sw x3, 0(x2) # store 0x23d6f1b3 in memory
flw f29, 0(x2) # load 0x23d6f1b3 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fmsub.s f18, f31, f29, f14, dyn # perform operation
fmsub.s f18, f31, f29, f14, rdn # perform operation
fmsub.s f18, f31, f29, f14, rmm # perform operation
fmsub.s f18, f31, f29, f14, rne # perform operation
fmsub.s f18, f31, f29, f14, rtz # perform operation
fmsub.s f18, f31, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x16, 0x0fb68b66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x883d196b # load x3 with value 0x883d196b
sw x3, 0(x2) # store 0x883d196b in memory
flw f31, 0(x2) # load 0x883d196b from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fmsub.s f16, f11, f31, f7, dyn # perform operation
fmsub.s f16, f11, f31, f7, rdn # perform operation
fmsub.s f16, f11, f31, f7, rmm # perform operation
fmsub.s f16, f11, f31, f7, rne # perform operation
fmsub.s f16, f11, f31, f7, rtz # perform operation
fmsub.s f16, f11, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f11, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f11, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x20, 0x4c5f5659 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x9d3347e1 # load x3 with value 0x9d3347e1
sw x3, 0(x2) # store 0x9d3347e1 in memory
flw f13, 0(x2) # load 0x9d3347e1 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fmsub.s f20, f3, f13, f21, dyn # perform operation
fmsub.s f20, f3, f13, f21, rdn # perform operation
fmsub.s f20, f3, f13, f21, rmm # perform operation
fmsub.s f20, f3, f13, f21, rne # perform operation
fmsub.s f20, f3, f13, f21, rtz # perform operation
fmsub.s f20, f3, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f3, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f3, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f3, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f3, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f3, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x19, 0xd0da5a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xd15a8682 # load x3 with value 0xd15a8682
sw x3, 0(x2) # store 0xd15a8682 in memory
flw f11, 0(x2) # load 0xd15a8682 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
fmsub.s f19, f25, f11, f28, dyn # perform operation
fmsub.s f19, f25, f11, f28, rdn # perform operation
fmsub.s f19, f25, f11, f28, rmm # perform operation
fmsub.s f19, f25, f11, f28, rne # perform operation
fmsub.s f19, f25, f11, f28, rtz # perform operation
fmsub.s f19, f25, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f25, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f25, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f25, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f25, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f25, f11, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x28, 0xa7afce13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x4ea23771 # load x3 with value 0x4ea23771
sw x3, 0(x2) # store 0x4ea23771 in memory
flw f4, 0(x2) # load 0x4ea23771 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmsub.s f28, f5, f4, f14, dyn # perform operation
fmsub.s f28, f5, f4, f14, rdn # perform operation
fmsub.s f28, f5, f4, f14, rmm # perform operation
fmsub.s f28, f5, f4, f14, rne # perform operation
fmsub.s f28, f5, f4, f14, rtz # perform operation
fmsub.s f28, f5, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f5, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f5, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f5, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f5, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f5, f4, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x3, 0xe4ea3d34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x93e74477 # load x3 with value 0x93e74477
sw x3, 0(x2) # store 0x93e74477 in memory
flw f24, 0(x2) # load 0x93e74477 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fmsub.s f3, f5, f24, f13, dyn # perform operation
fmsub.s f3, f5, f24, f13, rdn # perform operation
fmsub.s f3, f5, f24, f13, rmm # perform operation
fmsub.s f3, f5, f24, f13, rne # perform operation
fmsub.s f3, f5, f24, f13, rtz # perform operation
fmsub.s f3, f5, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f5, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f5, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f5, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f5, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f5, f24, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x3, 0x7c52e9b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x7ed7a45e # load x3 with value 0x7ed7a45e
sw x3, 0(x2) # store 0x7ed7a45e in memory
flw f7, 0(x2) # load 0x7ed7a45e from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmsub.s f3, f8, f7, f28, dyn # perform operation
fmsub.s f3, f8, f7, f28, rdn # perform operation
fmsub.s f3, f8, f7, f28, rmm # perform operation
fmsub.s f3, f8, f7, f28, rne # perform operation
fmsub.s f3, f8, f7, f28, rtz # perform operation
fmsub.s f3, f8, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f8, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x28, 0x546ece6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x2e4a344c # load x3 with value 0x2e4a344c
sw x3, 0(x2) # store 0x2e4a344c in memory
flw f18, 0(x2) # load 0x2e4a344c from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmsub.s f28, f27, f18, f6, dyn # perform operation
fmsub.s f28, f27, f18, f6, rdn # perform operation
fmsub.s f28, f27, f18, f6, rmm # perform operation
fmsub.s f28, f27, f18, f6, rne # perform operation
fmsub.s f28, f27, f18, f6, rtz # perform operation
fmsub.s f28, f27, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f27, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f27, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x25, 0xbf8b68f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x7b11ae49 # load x3 with value 0x7b11ae49
sw x3, 0(x2) # store 0x7b11ae49 in memory
flw f14, 0(x2) # load 0x7b11ae49 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fmsub.s f25, f23, f14, f10, dyn # perform operation
fmsub.s f25, f23, f14, f10, rdn # perform operation
fmsub.s f25, f23, f14, f10, rmm # perform operation
fmsub.s f25, f23, f14, f10, rne # perform operation
fmsub.s f25, f23, f14, f10, rtz # perform operation
fmsub.s f25, f23, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f23, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f23, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f23, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f23, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f23, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x4, 0xc1e3e7ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x574bbd25 # load x3 with value 0x574bbd25
sw x3, 0(x2) # store 0x574bbd25 in memory
flw f11, 0(x2) # load 0x574bbd25 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmsub.s f4, f18, f11, f3, dyn # perform operation
fmsub.s f4, f18, f11, f3, rdn # perform operation
fmsub.s f4, f18, f11, f3, rmm # perform operation
fmsub.s f4, f18, f11, f3, rne # perform operation
fmsub.s f4, f18, f11, f3, rtz # perform operation
fmsub.s f4, f18, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f18, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x20, 0xa381dfec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x424eacb5 # load x3 with value 0x424eacb5
sw x3, 0(x2) # store 0x424eacb5 in memory
flw f4, 0(x2) # load 0x424eacb5 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmsub.s f20, f8, f4, f7, dyn # perform operation
fmsub.s f20, f8, f4, f7, rdn # perform operation
fmsub.s f20, f8, f4, f7, rmm # perform operation
fmsub.s f20, f8, f4, f7, rne # perform operation
fmsub.s f20, f8, f4, f7, rtz # perform operation
fmsub.s f20, f8, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f8, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f8, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f8, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f8, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f8, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x11, 0x396638d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x3e5b6fe3 # load x3 with value 0x3e5b6fe3
sw x3, 0(x2) # store 0x3e5b6fe3 in memory
flw f21, 0(x2) # load 0x3e5b6fe3 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fmsub.s f11, f19, f21, f5, dyn # perform operation
fmsub.s f11, f19, f21, f5, rdn # perform operation
fmsub.s f11, f19, f21, f5, rmm # perform operation
fmsub.s f11, f19, f21, f5, rne # perform operation
fmsub.s f11, f19, f21, f5, rtz # perform operation
fmsub.s f11, f19, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f19, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f19, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f19, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f19, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f19, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x7, 0x0a85e319 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xf3b416d4 # load x3 with value 0xf3b416d4
sw x3, 0(x2) # store 0xf3b416d4 in memory
flw f31, 0(x2) # load 0xf3b416d4 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fmsub.s f7, f21, f31, f15, dyn # perform operation
fmsub.s f7, f21, f31, f15, rdn # perform operation
fmsub.s f7, f21, f31, f15, rmm # perform operation
fmsub.s f7, f21, f31, f15, rne # perform operation
fmsub.s f7, f21, f31, f15, rtz # perform operation
fmsub.s f7, f21, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f21, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x17, 0x10801e4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x5e4c503d # load x3 with value 0x5e4c503d
sw x3, 0(x2) # store 0x5e4c503d in memory
flw f20, 0(x2) # load 0x5e4c503d from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fmsub.s f17, f24, f20, f16, dyn # perform operation
fmsub.s f17, f24, f20, f16, rdn # perform operation
fmsub.s f17, f24, f20, f16, rmm # perform operation
fmsub.s f17, f24, f20, f16, rne # perform operation
fmsub.s f17, f24, f20, f16, rtz # perform operation
fmsub.s f17, f24, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f24, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f24, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x28, 0xfbc1a301 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x4fe7e53f # load x3 with value 0x4fe7e53f
sw x3, 0(x2) # store 0x4fe7e53f in memory
flw f14, 0(x2) # load 0x4fe7e53f from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f28, f12, f14, f25, dyn # perform operation
fmsub.s f28, f12, f14, f25, rdn # perform operation
fmsub.s f28, f12, f14, f25, rmm # perform operation
fmsub.s f28, f12, f14, f25, rne # perform operation
fmsub.s f28, f12, f14, f25, rtz # perform operation
fmsub.s f28, f12, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f12, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f12, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f12, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f12, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f12, f14, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x29, 0x84da6b37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x3519b9cc # load x3 with value 0x3519b9cc
sw x3, 0(x2) # store 0x3519b9cc in memory
flw f11, 0(x2) # load 0x3519b9cc from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fmsub.s f29, f24, f11, f12, dyn # perform operation
fmsub.s f29, f24, f11, f12, rdn # perform operation
fmsub.s f29, f24, f11, f12, rmm # perform operation
fmsub.s f29, f24, f11, f12, rne # perform operation
fmsub.s f29, f24, f11, f12, rtz # perform operation
fmsub.s f29, f24, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f11, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x17, 0xdaa64efb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x7f9d4a20 # load x3 with value 0x7f9d4a20
sw x3, 0(x2) # store 0x7f9d4a20 in memory
flw f23, 0(x2) # load 0x7f9d4a20 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fmsub.s f17, f7, f23, f27, dyn # perform operation
fmsub.s f17, f7, f23, f27, rdn # perform operation
fmsub.s f17, f7, f23, f27, rmm # perform operation
fmsub.s f17, f7, f23, f27, rne # perform operation
fmsub.s f17, f7, f23, f27, rtz # perform operation
fmsub.s f17, f7, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f7, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x8, 0xd42043be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x32fbd7bc # load x3 with value 0x32fbd7bc
sw x3, 0(x2) # store 0x32fbd7bc in memory
flw f10, 0(x2) # load 0x32fbd7bc from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmsub.s f8, f21, f10, f14, dyn # perform operation
fmsub.s f8, f21, f10, f14, rdn # perform operation
fmsub.s f8, f21, f10, f14, rmm # perform operation
fmsub.s f8, f21, f10, f14, rne # perform operation
fmsub.s f8, f21, f10, f14, rtz # perform operation
fmsub.s f8, f21, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f21, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f21, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x17, 0xd4cb493f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0xeef2d4e5 # load x3 with value 0xeef2d4e5
sw x3, 0(x2) # store 0xeef2d4e5 in memory
flw f12, 0(x2) # load 0xeef2d4e5 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fmsub.s f17, f3, f12, f23, dyn # perform operation
fmsub.s f17, f3, f12, f23, rdn # perform operation
fmsub.s f17, f3, f12, f23, rmm # perform operation
fmsub.s f17, f3, f12, f23, rne # perform operation
fmsub.s f17, f3, f12, f23, rtz # perform operation
fmsub.s f17, f3, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f3, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f3, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x9, 0xb99f24c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x7240de30 # load x3 with value 0x7240de30
sw x3, 0(x2) # store 0x7240de30 in memory
flw f29, 0(x2) # load 0x7240de30 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmsub.s f9, f27, f29, f7, dyn # perform operation
fmsub.s f9, f27, f29, f7, rdn # perform operation
fmsub.s f9, f27, f29, f7, rmm # perform operation
fmsub.s f9, f27, f29, f7, rne # perform operation
fmsub.s f9, f27, f29, f7, rtz # perform operation
fmsub.s f9, f27, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f29, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x25, 0x0017de1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0x8a9144e1 # load x3 with value 0x8a9144e1
sw x3, 0(x2) # store 0x8a9144e1 in memory
flw f8, 0(x2) # load 0x8a9144e1 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fmsub.s f25, f27, f8, f9, dyn # perform operation
fmsub.s f25, f27, f8, f9, rdn # perform operation
fmsub.s f25, f27, f8, f9, rmm # perform operation
fmsub.s f25, f27, f8, f9, rne # perform operation
fmsub.s f25, f27, f8, f9, rtz # perform operation
fmsub.s f25, f27, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f27, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f27, f8, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x24, 0x594c0e31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x98274b56 # load x3 with value 0x98274b56
sw x3, 0(x2) # store 0x98274b56 in memory
flw f18, 0(x2) # load 0x98274b56 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmsub.s f24, f10, f18, f6, dyn # perform operation
fmsub.s f24, f10, f18, f6, rdn # perform operation
fmsub.s f24, f10, f18, f6, rmm # perform operation
fmsub.s f24, f10, f18, f6, rne # perform operation
fmsub.s f24, f10, f18, f6, rtz # perform operation
fmsub.s f24, f10, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f10, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f10, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x6, 0x46e3d6c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0xf9d94982 # load x3 with value 0xf9d94982
sw x3, 0(x2) # store 0xf9d94982 in memory
flw f2, 0(x2) # load 0xf9d94982 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fmsub.s f6, f31, f2, f29, dyn # perform operation
fmsub.s f6, f31, f2, f29, rdn # perform operation
fmsub.s f6, f31, f2, f29, rmm # perform operation
fmsub.s f6, f31, f2, f29, rne # perform operation
fmsub.s f6, f31, f2, f29, rtz # perform operation
fmsub.s f6, f31, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f31, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f31, f2, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x23, 0x5ca3fa1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x6785d1dd # load x3 with value 0x6785d1dd
sw x3, 0(x2) # store 0x6785d1dd in memory
flw f9, 0(x2) # load 0x6785d1dd from memory into f9
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmsub.s f23, f29, f9, f4, dyn # perform operation
fmsub.s f23, f29, f9, f4, rdn # perform operation
fmsub.s f23, f29, f9, f4, rmm # perform operation
fmsub.s f23, f29, f9, f4, rne # perform operation
fmsub.s f23, f29, f9, f4, rtz # perform operation
fmsub.s f23, f29, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x29, 0xb26aaaa4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xb4ef2368 # load x3 with value 0xb4ef2368
sw x3, 0(x2) # store 0xb4ef2368 in memory
flw f18, 0(x2) # load 0xb4ef2368 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fmsub.s f29, f17, f18, f27, dyn # perform operation
fmsub.s f29, f17, f18, f27, rdn # perform operation
fmsub.s f29, f17, f18, f27, rmm # perform operation
fmsub.s f29, f17, f18, f27, rne # perform operation
fmsub.s f29, f17, f18, f27, rtz # perform operation
fmsub.s f29, f17, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f17, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f17, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x9, 0x98b92757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x7e7d520a # load x3 with value 0x7e7d520a
sw x3, 0(x2) # store 0x7e7d520a in memory
flw f21, 0(x2) # load 0x7e7d520a from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmsub.s f9, f7, f21, f2, dyn # perform operation
fmsub.s f9, f7, f21, f2, rdn # perform operation
fmsub.s f9, f7, f21, f2, rmm # perform operation
fmsub.s f9, f7, f21, f2, rne # perform operation
fmsub.s f9, f7, f21, f2, rtz # perform operation
fmsub.s f9, f7, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f7, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f7, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f7, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f7, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f7, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x17, 0x79f5abd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xe7c2d017 # load x3 with value 0xe7c2d017
sw x3, 0(x2) # store 0xe7c2d017 in memory
flw f3, 0(x2) # load 0xe7c2d017 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmsub.s f17, f24, f3, f23, dyn # perform operation
fmsub.s f17, f24, f3, f23, rdn # perform operation
fmsub.s f17, f24, f3, f23, rmm # perform operation
fmsub.s f17, f24, f3, f23, rne # perform operation
fmsub.s f17, f24, f3, f23, rtz # perform operation
fmsub.s f17, f24, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f24, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f24, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x16, 0xf225154d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x5040deb5 # load x3 with value 0x5040deb5
sw x3, 0(x2) # store 0x5040deb5 in memory
flw f14, 0(x2) # load 0x5040deb5 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fmsub.s f16, f7, f14, f21, dyn # perform operation
fmsub.s f16, f7, f14, f21, rdn # perform operation
fmsub.s f16, f7, f14, f21, rmm # perform operation
fmsub.s f16, f7, f14, f21, rne # perform operation
fmsub.s f16, f7, f14, f21, rtz # perform operation
fmsub.s f16, f7, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f7, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f7, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f7, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f7, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f7, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x29, 0xaabcb258 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x652b3850 # load x3 with value 0x652b3850
sw x3, 0(x2) # store 0x652b3850 in memory
flw f24, 0(x2) # load 0x652b3850 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmsub.s f29, f31, f24, f7, dyn # perform operation
fmsub.s f29, f31, f24, f7, rdn # perform operation
fmsub.s f29, f31, f24, f7, rmm # perform operation
fmsub.s f29, f31, f24, f7, rne # perform operation
fmsub.s f29, f31, f24, f7, rtz # perform operation
fmsub.s f29, f31, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f31, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f31, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x22, 0xcf7e7864 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x45a32c78 # load x3 with value 0x45a32c78
sw x3, 0(x2) # store 0x45a32c78 in memory
flw f26, 0(x2) # load 0x45a32c78 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmsub.s f22, f25, f26, f29, dyn # perform operation
fmsub.s f22, f25, f26, f29, rdn # perform operation
fmsub.s f22, f25, f26, f29, rmm # perform operation
fmsub.s f22, f25, f26, f29, rne # perform operation
fmsub.s f22, f25, f26, f29, rtz # perform operation
fmsub.s f22, f25, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f25, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x3, 0x8856a221 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0xb7923e12 # load x3 with value 0xb7923e12
sw x3, 0(x2) # store 0xb7923e12 in memory
flw f1, 0(x2) # load 0xb7923e12 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmsub.s f3, f21, f1, f5, dyn # perform operation
fmsub.s f3, f21, f1, f5, rdn # perform operation
fmsub.s f3, f21, f1, f5, rmm # perform operation
fmsub.s f3, f21, f1, f5, rne # perform operation
fmsub.s f3, f21, f1, f5, rtz # perform operation
fmsub.s f3, f21, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f21, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f21, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f21, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f21, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f21, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x30, 0x53b7ae63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x65844523 # load x3 with value 0x65844523
sw x3, 0(x2) # store 0x65844523 in memory
flw f21, 0(x2) # load 0x65844523 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
fmsub.s f30, f2, f21, f26, dyn # perform operation
fmsub.s f30, f2, f21, f26, rdn # perform operation
fmsub.s f30, f2, f21, f26, rmm # perform operation
fmsub.s f30, f2, f21, f26, rne # perform operation
fmsub.s f30, f2, f21, f26, rtz # perform operation
fmsub.s f30, f2, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f2, f21, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x31, 0x37645cbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x2d6eed8f # load x3 with value 0x2d6eed8f
sw x3, 0(x2) # store 0x2d6eed8f in memory
flw f14, 0(x2) # load 0x2d6eed8f from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmsub.s f31, f30, f14, f5, dyn # perform operation
fmsub.s f31, f30, f14, f5, rdn # perform operation
fmsub.s f31, f30, f14, f5, rmm # perform operation
fmsub.s f31, f30, f14, f5, rne # perform operation
fmsub.s f31, f30, f14, f5, rtz # perform operation
fmsub.s f31, f30, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f30, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f30, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f30, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f30, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f30, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x14, 0x2fc2cb41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x5e551417 # load x3 with value 0x5e551417
sw x3, 0(x2) # store 0x5e551417 in memory
flw f28, 0(x2) # load 0x5e551417 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmsub.s f14, f12, f28, f2, dyn # perform operation
fmsub.s f14, f12, f28, f2, rdn # perform operation
fmsub.s f14, f12, f28, f2, rmm # perform operation
fmsub.s f14, f12, f28, f2, rne # perform operation
fmsub.s f14, f12, f28, f2, rtz # perform operation
fmsub.s f14, f12, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f12, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f12, f28, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x15, 0xd7525108 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x91d540d4 # load x3 with value 0x91d540d4
sw x3, 0(x2) # store 0x91d540d4 in memory
flw f2, 0(x2) # load 0x91d540d4 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmsub.s f15, f4, f2, f11, dyn # perform operation
fmsub.s f15, f4, f2, f11, rdn # perform operation
fmsub.s f15, f4, f2, f11, rmm # perform operation
fmsub.s f15, f4, f2, f11, rne # perform operation
fmsub.s f15, f4, f2, f11, rtz # perform operation
fmsub.s f15, f4, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f4, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f4, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f4, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f4, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f4, f2, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x12, 0xe2476c0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x033b2504 # load x3 with value 0x033b2504
sw x3, 0(x2) # store 0x033b2504 in memory
flw f2, 0(x2) # load 0x033b2504 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmsub.s f12, f11, f2, f4, dyn # perform operation
fmsub.s f12, f11, f2, f4, rdn # perform operation
fmsub.s f12, f11, f2, f4, rmm # perform operation
fmsub.s f12, f11, f2, f4, rne # perform operation
fmsub.s f12, f11, f2, f4, rtz # perform operation
fmsub.s f12, f11, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f11, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f11, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f11, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f11, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f11, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x27, 0x043e5397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x759ebf2d # load x3 with value 0x759ebf2d
sw x3, 0(x2) # store 0x759ebf2d in memory
flw f1, 0(x2) # load 0x759ebf2d from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmsub.s f27, f30, f1, f24, dyn # perform operation
fmsub.s f27, f30, f1, f24, rdn # perform operation
fmsub.s f27, f30, f1, f24, rmm # perform operation
fmsub.s f27, f30, f1, f24, rne # perform operation
fmsub.s f27, f30, f1, f24, rtz # perform operation
fmsub.s f27, f30, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f30, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x10, 0x25b411c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0xf696f371 # load x3 with value 0xf696f371
sw x3, 0(x2) # store 0xf696f371 in memory
flw f19, 0(x2) # load 0xf696f371 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmsub.s f10, f9, f19, f22, dyn # perform operation
fmsub.s f10, f9, f19, f22, rdn # perform operation
fmsub.s f10, f9, f19, f22, rmm # perform operation
fmsub.s f10, f9, f19, f22, rne # perform operation
fmsub.s f10, f9, f19, f22, rtz # perform operation
fmsub.s f10, f9, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f9, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f9, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f9, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f9, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f9, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x11, 0xba56c16c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0xcf5f25ef # load x3 with value 0xcf5f25ef
sw x3, 0(x2) # store 0xcf5f25ef in memory
flw f7, 0(x2) # load 0xcf5f25ef from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmsub.s f11, f29, f7, f24, dyn # perform operation
fmsub.s f11, f29, f7, f24, rdn # perform operation
fmsub.s f11, f29, f7, f24, rmm # perform operation
fmsub.s f11, f29, f7, f24, rne # perform operation
fmsub.s f11, f29, f7, f24, rtz # perform operation
fmsub.s f11, f29, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f29, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f29, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x11, 0x2ebe7ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x56f24734 # load x3 with value 0x56f24734
sw x3, 0(x2) # store 0x56f24734 in memory
flw f25, 0(x2) # load 0x56f24734 from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmsub.s f11, f7, f25, f15, dyn # perform operation
fmsub.s f11, f7, f25, f15, rdn # perform operation
fmsub.s f11, f7, f25, f15, rmm # perform operation
fmsub.s f11, f7, f25, f15, rne # perform operation
fmsub.s f11, f7, f25, f15, rtz # perform operation
fmsub.s f11, f7, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f7, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f7, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x31, 0xe89a8af0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x578122b3 # load x3 with value 0x578122b3
sw x3, 0(x2) # store 0x578122b3 in memory
flw f21, 0(x2) # load 0x578122b3 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmsub.s f31, f1, f21, f20, dyn # perform operation
fmsub.s f31, f1, f21, f20, rdn # perform operation
fmsub.s f31, f1, f21, f20, rmm # perform operation
fmsub.s f31, f1, f21, f20, rne # perform operation
fmsub.s f31, f1, f21, f20, rtz # perform operation
fmsub.s f31, f1, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f1, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x18, 0x352ef9c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x9d285c0a # load x3 with value 0x9d285c0a
sw x3, 0(x2) # store 0x9d285c0a in memory
flw f9, 0(x2) # load 0x9d285c0a from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fmsub.s f18, f7, f9, f17, dyn # perform operation
fmsub.s f18, f7, f9, f17, rdn # perform operation
fmsub.s f18, f7, f9, f17, rmm # perform operation
fmsub.s f18, f7, f9, f17, rne # perform operation
fmsub.s f18, f7, f9, f17, rtz # perform operation
fmsub.s f18, f7, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f7, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f7, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x5, 0xbf31de4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x148551d9 # load x3 with value 0x148551d9
sw x3, 0(x2) # store 0x148551d9 in memory
flw f3, 0(x2) # load 0x148551d9 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmsub.s f5, f21, f3, f30, dyn # perform operation
fmsub.s f5, f21, f3, f30, rdn # perform operation
fmsub.s f5, f21, f3, f30, rmm # perform operation
fmsub.s f5, f21, f3, f30, rne # perform operation
fmsub.s f5, f21, f3, f30, rtz # perform operation
fmsub.s f5, f21, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f21, f3, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x1, 0x81d55810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x860b5e87 # load x3 with value 0x860b5e87
sw x3, 0(x2) # store 0x860b5e87 in memory
flw f24, 0(x2) # load 0x860b5e87 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f1, f2, f24, f19, dyn # perform operation
fmsub.s f1, f2, f24, f19, rdn # perform operation
fmsub.s f1, f2, f24, f19, rmm # perform operation
fmsub.s f1, f2, f24, f19, rne # perform operation
fmsub.s f1, f2, f24, f19, rtz # perform operation
fmsub.s f1, f2, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x29, 0x0a5ffb01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x8791de19 # load x3 with value 0x8791de19
sw x3, 0(x2) # store 0x8791de19 in memory
flw f18, 0(x2) # load 0x8791de19 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmsub.s f29, f4, f18, f14, dyn # perform operation
fmsub.s f29, f4, f18, f14, rdn # perform operation
fmsub.s f29, f4, f18, f14, rmm # perform operation
fmsub.s f29, f4, f18, f14, rne # perform operation
fmsub.s f29, f4, f18, f14, rtz # perform operation
fmsub.s f29, f4, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f4, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f4, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f4, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f4, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f4, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x25, 0xa516d4fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x5af58b31 # load x3 with value 0x5af58b31
sw x3, 0(x2) # store 0x5af58b31 in memory
flw f14, 0(x2) # load 0x5af58b31 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fmsub.s f25, f30, f14, f15, dyn # perform operation
fmsub.s f25, f30, f14, f15, rdn # perform operation
fmsub.s f25, f30, f14, f15, rmm # perform operation
fmsub.s f25, f30, f14, f15, rne # perform operation
fmsub.s f25, f30, f14, f15, rtz # perform operation
fmsub.s f25, f30, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f30, f14, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x13, 0xb593de3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0xbfeabe0d # load x3 with value 0xbfeabe0d
sw x3, 0(x2) # store 0xbfeabe0d in memory
flw f8, 0(x2) # load 0xbfeabe0d from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmsub.s f13, f14, f8, f21, dyn # perform operation
fmsub.s f13, f14, f8, f21, rdn # perform operation
fmsub.s f13, f14, f8, f21, rmm # perform operation
fmsub.s f13, f14, f8, f21, rne # perform operation
fmsub.s f13, f14, f8, f21, rtz # perform operation
fmsub.s f13, f14, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f14, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f14, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x23, 0x3c12ea93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x51947f2f # load x3 with value 0x51947f2f
sw x3, 0(x2) # store 0x51947f2f in memory
flw f4, 0(x2) # load 0x51947f2f from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmsub.s f23, f29, f4, f21, dyn # perform operation
fmsub.s f23, f29, f4, f21, rdn # perform operation
fmsub.s f23, f29, f4, f21, rmm # perform operation
fmsub.s f23, f29, f4, f21, rne # perform operation
fmsub.s f23, f29, f4, f21, rtz # perform operation
fmsub.s f23, f29, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f29, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f29, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f29, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f29, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f29, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x30, 0xc44f1299 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x178683bb # load x3 with value 0x178683bb
sw x3, 0(x2) # store 0x178683bb in memory
flw f13, 0(x2) # load 0x178683bb from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fmsub.s f30, f10, f13, f31, dyn # perform operation
fmsub.s f30, f10, f13, f31, rdn # perform operation
fmsub.s f30, f10, f13, f31, rmm # perform operation
fmsub.s f30, f10, f13, f31, rne # perform operation
fmsub.s f30, f10, f13, f31, rtz # perform operation
fmsub.s f30, f10, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f10, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x22, 0xc605866c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x59eada99 # load x3 with value 0x59eada99
sw x3, 0(x2) # store 0x59eada99 in memory
flw f19, 0(x2) # load 0x59eada99 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmsub.s f22, f31, f19, f5, dyn # perform operation
fmsub.s f22, f31, f19, f5, rdn # perform operation
fmsub.s f22, f31, f19, f5, rmm # perform operation
fmsub.s f22, f31, f19, f5, rne # perform operation
fmsub.s f22, f31, f19, f5, rtz # perform operation
fmsub.s f22, f31, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x19, 0x3af295d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x8721b229 # load x3 with value 0x8721b229
sw x3, 0(x2) # store 0x8721b229 in memory
flw f15, 0(x2) # load 0x8721b229 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmsub.s f19, f4, f15, f10, dyn # perform operation
fmsub.s f19, f4, f15, f10, rdn # perform operation
fmsub.s f19, f4, f15, f10, rmm # perform operation
fmsub.s f19, f4, f15, f10, rne # perform operation
fmsub.s f19, f4, f15, f10, rtz # perform operation
fmsub.s f19, f4, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f4, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f4, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f4, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f4, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f4, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x13, 0xc833c111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x9ebbaecb # load x3 with value 0x9ebbaecb
sw x3, 0(x2) # store 0x9ebbaecb in memory
flw f27, 0(x2) # load 0x9ebbaecb from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmsub.s f13, f17, f27, f8, dyn # perform operation
fmsub.s f13, f17, f27, f8, rdn # perform operation
fmsub.s f13, f17, f27, f8, rmm # perform operation
fmsub.s f13, f17, f27, f8, rne # perform operation
fmsub.s f13, f17, f27, f8, rtz # perform operation
fmsub.s f13, f17, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x26, 0xbccb068c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x24783982 # load x3 with value 0x24783982
sw x3, 0(x2) # store 0x24783982 in memory
flw f19, 0(x2) # load 0x24783982 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmsub.s f26, f9, f19, f17, dyn # perform operation
fmsub.s f26, f9, f19, f17, rdn # perform operation
fmsub.s f26, f9, f19, f17, rmm # perform operation
fmsub.s f26, f9, f19, f17, rne # perform operation
fmsub.s f26, f9, f19, f17, rtz # perform operation
fmsub.s f26, f9, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f9, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f9, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x30, 0x03535555 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x990d7258 # load x3 with value 0x990d7258
sw x3, 0(x2) # store 0x990d7258 in memory
flw f20, 0(x2) # load 0x990d7258 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmsub.s f30, f23, f20, f5, dyn # perform operation
fmsub.s f30, f23, f20, f5, rdn # perform operation
fmsub.s f30, f23, f20, f5, rmm # perform operation
fmsub.s f30, f23, f20, f5, rne # perform operation
fmsub.s f30, f23, f20, f5, rtz # perform operation
fmsub.s f30, f23, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f23, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f23, f20, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x18, 0x985c62be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x58c52daf # load x3 with value 0x58c52daf
sw x3, 0(x2) # store 0x58c52daf in memory
flw f4, 0(x2) # load 0x58c52daf from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmsub.s f18, f28, f4, f2, dyn # perform operation
fmsub.s f18, f28, f4, f2, rdn # perform operation
fmsub.s f18, f28, f4, f2, rmm # perform operation
fmsub.s f18, f28, f4, f2, rne # perform operation
fmsub.s f18, f28, f4, f2, rtz # perform operation
fmsub.s f18, f28, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x14, 0x89c13571 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0xcfa1ac09 # load x3 with value 0xcfa1ac09
sw x3, 0(x2) # store 0xcfa1ac09 in memory
flw f18, 0(x2) # load 0xcfa1ac09 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmsub.s f14, f7, f18, f17, dyn # perform operation
fmsub.s f14, f7, f18, f17, rdn # perform operation
fmsub.s f14, f7, f18, f17, rmm # perform operation
fmsub.s f14, f7, f18, f17, rne # perform operation
fmsub.s f14, f7, f18, f17, rtz # perform operation
fmsub.s f14, f7, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f7, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f7, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x12, 0xcc49e922 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x6f126e29 # load x3 with value 0x6f126e29
sw x3, 0(x2) # store 0x6f126e29 in memory
flw f13, 0(x2) # load 0x6f126e29 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmsub.s f12, f8, f13, f23, dyn # perform operation
fmsub.s f12, f8, f13, f23, rdn # perform operation
fmsub.s f12, f8, f13, f23, rmm # perform operation
fmsub.s f12, f8, f13, f23, rne # perform operation
fmsub.s f12, f8, f13, f23, rtz # perform operation
fmsub.s f12, f8, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f8, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f8, f13, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x13, 0xffeaa1d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x42f8107b # load x3 with value 0x42f8107b
sw x3, 0(x2) # store 0x42f8107b in memory
flw f8, 0(x2) # load 0x42f8107b from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmsub.s f13, f2, f8, f31, dyn # perform operation
fmsub.s f13, f2, f8, f31, rdn # perform operation
fmsub.s f13, f2, f8, f31, rmm # perform operation
fmsub.s f13, f2, f8, f31, rne # perform operation
fmsub.s f13, f2, f8, f31, rtz # perform operation
fmsub.s f13, f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x22, 0xe290d011 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xac9d2b3f # load x3 with value 0xac9d2b3f
sw x3, 0(x2) # store 0xac9d2b3f in memory
flw f20, 0(x2) # load 0xac9d2b3f from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmsub.s f22, f15, f20, f12, dyn # perform operation
fmsub.s f22, f15, f20, f12, rdn # perform operation
fmsub.s f22, f15, f20, f12, rmm # perform operation
fmsub.s f22, f15, f20, f12, rne # perform operation
fmsub.s f22, f15, f20, f12, rtz # perform operation
fmsub.s f22, f15, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f15, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x17, 0x4af46f38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x6f75e300 # load x3 with value 0x6f75e300
sw x3, 0(x2) # store 0x6f75e300 in memory
flw f6, 0(x2) # load 0x6f75e300 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmsub.s f17, f22, f6, f15, dyn # perform operation
fmsub.s f17, f22, f6, f15, rdn # perform operation
fmsub.s f17, f22, f6, f15, rmm # perform operation
fmsub.s f17, f22, f6, f15, rne # perform operation
fmsub.s f17, f22, f6, f15, rtz # perform operation
fmsub.s f17, f22, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x24, 0x4baf1764 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x36e8a3ef # load x3 with value 0x36e8a3ef
sw x3, 0(x2) # store 0x36e8a3ef in memory
flw f25, 0(x2) # load 0x36e8a3ef from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmsub.s f24, f21, f25, f17, dyn # perform operation
fmsub.s f24, f21, f25, f17, rdn # perform operation
fmsub.s f24, f21, f25, f17, rmm # perform operation
fmsub.s f24, f21, f25, f17, rne # perform operation
fmsub.s f24, f21, f25, f17, rtz # perform operation
fmsub.s f24, f21, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f21, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f21, f25, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x9, 0xa24985ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xe89886f7 # load x3 with value 0xe89886f7
sw x3, 0(x2) # store 0xe89886f7 in memory
flw f14, 0(x2) # load 0xe89886f7 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmsub.s f9, f15, f14, f21, dyn # perform operation
fmsub.s f9, f15, f14, f21, rdn # perform operation
fmsub.s f9, f15, f14, f21, rmm # perform operation
fmsub.s f9, f15, f14, f21, rne # perform operation
fmsub.s f9, f15, f14, f21, rtz # perform operation
fmsub.s f9, f15, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x20, 0x42de391e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x7e2675a4 # load x3 with value 0x7e2675a4
sw x3, 0(x2) # store 0x7e2675a4 in memory
flw f16, 0(x2) # load 0x7e2675a4 from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmsub.s f20, f27, f16, f12, dyn # perform operation
fmsub.s f20, f27, f16, f12, rdn # perform operation
fmsub.s f20, f27, f16, f12, rmm # perform operation
fmsub.s f20, f27, f16, f12, rne # perform operation
fmsub.s f20, f27, f16, f12, rtz # perform operation
fmsub.s f20, f27, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f27, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x2, 0xb02f57fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
li x3, 0xc28ff991 # load x3 with value 0xc28ff991
sw x3, 0(x2) # store 0xc28ff991 in memory
flw f3, 0(x2) # load 0xc28ff991 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmsub.s f2, f18, f3, f22, dyn # perform operation
fmsub.s f2, f18, f3, f22, rdn # perform operation
fmsub.s f2, f18, f3, f22, rmm # perform operation
fmsub.s f2, f18, f3, f22, rne # perform operation
fmsub.s f2, f18, f3, f22, rtz # perform operation
fmsub.s f2, f18, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x3, 0x0f009229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xa4b4e85e # load x3 with value 0xa4b4e85e
sw x3, 0(x2) # store 0xa4b4e85e in memory
flw f17, 0(x2) # load 0xa4b4e85e from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmsub.s f3, f24, f17, f26, dyn # perform operation
fmsub.s f3, f24, f17, f26, rdn # perform operation
fmsub.s f3, f24, f17, f26, rmm # perform operation
fmsub.s f3, f24, f17, f26, rne # perform operation
fmsub.s f3, f24, f17, f26, rtz # perform operation
fmsub.s f3, f24, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f24, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f24, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x1, 0x6dd14636 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x9a6e10d2 # load x3 with value 0x9a6e10d2
sw x3, 0(x2) # store 0x9a6e10d2 in memory
flw f2, 0(x2) # load 0x9a6e10d2 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmsub.s f1, f25, f2, f24, dyn # perform operation
fmsub.s f1, f25, f2, f24, rdn # perform operation
fmsub.s f1, f25, f2, f24, rmm # perform operation
fmsub.s f1, f25, f2, f24, rne # perform operation
fmsub.s f1, f25, f2, f24, rtz # perform operation
fmsub.s f1, f25, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x9, 0x8ddf9126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0xae891c20 # load x3 with value 0xae891c20
sw x3, 0(x2) # store 0xae891c20 in memory
flw f21, 0(x2) # load 0xae891c20 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmsub.s f9, f4, f21, f10, dyn # perform operation
fmsub.s f9, f4, f21, f10, rdn # perform operation
fmsub.s f9, f4, f21, f10, rmm # perform operation
fmsub.s f9, f4, f21, f10, rne # perform operation
fmsub.s f9, f4, f21, f10, rtz # perform operation
fmsub.s f9, f4, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f4, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x16, 0xbb8c921d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xce09f330 # load x3 with value 0xce09f330
sw x3, 0(x2) # store 0xce09f330 in memory
flw f7, 0(x2) # load 0xce09f330 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fmsub.s f16, f30, f7, f28, dyn # perform operation
fmsub.s f16, f30, f7, f28, rdn # perform operation
fmsub.s f16, f30, f7, f28, rmm # perform operation
fmsub.s f16, f30, f7, f28, rne # perform operation
fmsub.s f16, f30, f7, f28, rtz # perform operation
fmsub.s f16, f30, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f30, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f30, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f30, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f30, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f30, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x2, 0x057e169b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xc07d7f67 # load x3 with value 0xc07d7f67
sw x3, 0(x2) # store 0xc07d7f67 in memory
flw f29, 0(x2) # load 0xc07d7f67 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fmsub.s f2, f8, f29, f4, dyn # perform operation
fmsub.s f2, f8, f29, f4, rdn # perform operation
fmsub.s f2, f8, f29, f4, rmm # perform operation
fmsub.s f2, f8, f29, f4, rne # perform operation
fmsub.s f2, f8, f29, f4, rtz # perform operation
fmsub.s f2, f8, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f8, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f8, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x20, 0x234dbd7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xe138c52b # load x3 with value 0xe138c52b
sw x3, 0(x2) # store 0xe138c52b in memory
flw f12, 0(x2) # load 0xe138c52b from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f20, f1, f12, f27, dyn # perform operation
fmsub.s f20, f1, f12, f27, rdn # perform operation
fmsub.s f20, f1, f12, f27, rmm # perform operation
fmsub.s f20, f1, f12, f27, rne # perform operation
fmsub.s f20, f1, f12, f27, rtz # perform operation
fmsub.s f20, f1, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f1, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f1, f12, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x29, 0x0d2cbd53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xe0e178ac # load x3 with value 0xe0e178ac
sw x3, 0(x2) # store 0xe0e178ac in memory
flw f20, 0(x2) # load 0xe0e178ac from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f29, f8, f20, f10, dyn # perform operation
fmsub.s f29, f8, f20, f10, rdn # perform operation
fmsub.s f29, f8, f20, f10, rmm # perform operation
fmsub.s f29, f8, f20, f10, rne # perform operation
fmsub.s f29, f8, f20, f10, rtz # perform operation
fmsub.s f29, f8, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x23, 0x760cc5ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x785c68a3 # load x3 with value 0x785c68a3
sw x3, 0(x2) # store 0x785c68a3 in memory
flw f31, 0(x2) # load 0x785c68a3 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmsub.s f23, f6, f31, f21, dyn # perform operation
fmsub.s f23, f6, f31, f21, rdn # perform operation
fmsub.s f23, f6, f31, f21, rmm # perform operation
fmsub.s f23, f6, f31, f21, rne # perform operation
fmsub.s f23, f6, f31, f21, rtz # perform operation
fmsub.s f23, f6, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x29, 0x9ee88833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x4d1b21b1 # load x3 with value 0x4d1b21b1
sw x3, 0(x2) # store 0x4d1b21b1 in memory
flw f1, 0(x2) # load 0x4d1b21b1 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmsub.s f29, f24, f1, f3, dyn # perform operation
fmsub.s f29, f24, f1, f3, rdn # perform operation
fmsub.s f29, f24, f1, f3, rmm # perform operation
fmsub.s f29, f24, f1, f3, rne # perform operation
fmsub.s f29, f24, f1, f3, rtz # perform operation
fmsub.s f29, f24, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f24, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x6, 0xf6825774 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x8c279f71 # load x3 with value 0x8c279f71
sw x3, 0(x2) # store 0x8c279f71 in memory
flw f1, 0(x2) # load 0x8c279f71 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmsub.s f6, f4, f1, f7, dyn # perform operation
fmsub.s f6, f4, f1, f7, rdn # perform operation
fmsub.s f6, f4, f1, f7, rmm # perform operation
fmsub.s f6, f4, f1, f7, rne # perform operation
fmsub.s f6, f4, f1, f7, rtz # perform operation
fmsub.s f6, f4, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f4, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x9, 0x4583a84d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x5013dd60 # load x3 with value 0x5013dd60
sw x3, 0(x2) # store 0x5013dd60 in memory
flw f24, 0(x2) # load 0x5013dd60 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmsub.s f9, f19, f24, f25, dyn # perform operation
fmsub.s f9, f19, f24, f25, rdn # perform operation
fmsub.s f9, f19, f24, f25, rmm # perform operation
fmsub.s f9, f19, f24, f25, rne # perform operation
fmsub.s f9, f19, f24, f25, rtz # perform operation
fmsub.s f9, f19, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f19, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x23, 0xdca18c2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x4b6203f5 # load x3 with value 0x4b6203f5
sw x3, 0(x2) # store 0x4b6203f5 in memory
flw f19, 0(x2) # load 0x4b6203f5 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmsub.s f23, f21, f19, f16, dyn # perform operation
fmsub.s f23, f21, f19, f16, rdn # perform operation
fmsub.s f23, f21, f19, f16, rmm # perform operation
fmsub.s f23, f21, f19, f16, rne # perform operation
fmsub.s f23, f21, f19, f16, rtz # perform operation
fmsub.s f23, f21, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f21, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f21, f19, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x6, 0x355acfd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x271fa56a # load x3 with value 0x271fa56a
sw x3, 0(x2) # store 0x271fa56a in memory
flw f12, 0(x2) # load 0x271fa56a from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmsub.s f6, f27, f12, f5, dyn # perform operation
fmsub.s f6, f27, f12, f5, rdn # perform operation
fmsub.s f6, f27, f12, f5, rmm # perform operation
fmsub.s f6, f27, f12, f5, rne # perform operation
fmsub.s f6, f27, f12, f5, rtz # perform operation
fmsub.s f6, f27, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f27, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f27, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x16, 0x57b7227b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xe6a03bf4 # load x3 with value 0xe6a03bf4
sw x3, 0(x2) # store 0xe6a03bf4 in memory
flw f10, 0(x2) # load 0xe6a03bf4 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fmsub.s f16, f28, f10, f13, dyn # perform operation
fmsub.s f16, f28, f10, f13, rdn # perform operation
fmsub.s f16, f28, f10, f13, rmm # perform operation
fmsub.s f16, f28, f10, f13, rne # perform operation
fmsub.s f16, f28, f10, f13, rtz # perform operation
fmsub.s f16, f28, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f10, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x14, 0xcd6e01f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x6c83fbdb # load x3 with value 0x6c83fbdb
sw x3, 0(x2) # store 0x6c83fbdb in memory
flw f24, 0(x2) # load 0x6c83fbdb from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmsub.s f14, f31, f24, f30, dyn # perform operation
fmsub.s f14, f31, f24, f30, rdn # perform operation
fmsub.s f14, f31, f24, f30, rmm # perform operation
fmsub.s f14, f31, f24, f30, rne # perform operation
fmsub.s f14, f31, f24, f30, rtz # perform operation
fmsub.s f14, f31, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f31, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x3, 0x0c133679 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0xc674b923 # load x3 with value 0xc674b923
sw x3, 0(x2) # store 0xc674b923 in memory
flw f19, 0(x2) # load 0xc674b923 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
fmsub.s f3, f14, f19, f6, dyn # perform operation
fmsub.s f3, f14, f19, f6, rdn # perform operation
fmsub.s f3, f14, f19, f6, rmm # perform operation
fmsub.s f3, f14, f19, f6, rne # perform operation
fmsub.s f3, f14, f19, f6, rtz # perform operation
fmsub.s f3, f14, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x13, 0x3e7cc26f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x69d613e3 # load x3 with value 0x69d613e3
sw x3, 0(x2) # store 0x69d613e3 in memory
flw f1, 0(x2) # load 0x69d613e3 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fmsub.s f13, f15, f1, f24, dyn # perform operation
fmsub.s f13, f15, f1, f24, rdn # perform operation
fmsub.s f13, f15, f1, f24, rmm # perform operation
fmsub.s f13, f15, f1, f24, rne # perform operation
fmsub.s f13, f15, f1, f24, rtz # perform operation
fmsub.s f13, f15, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f15, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f15, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x6, 0xcf1417de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x33d3c0c5 # load x3 with value 0x33d3c0c5
sw x3, 0(x2) # store 0x33d3c0c5 in memory
flw f5, 0(x2) # load 0x33d3c0c5 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fmsub.s f6, f8, f5, f4, dyn # perform operation
fmsub.s f6, f8, f5, f4, rdn # perform operation
fmsub.s f6, f8, f5, f4, rmm # perform operation
fmsub.s f6, f8, f5, f4, rne # perform operation
fmsub.s f6, f8, f5, f4, rtz # perform operation
fmsub.s f6, f8, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f8, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f8, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x1, 0xde195249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xf42834e2 # load x3 with value 0xf42834e2
sw x3, 0(x2) # store 0xf42834e2 in memory
flw f18, 0(x2) # load 0xf42834e2 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmsub.s f1, f25, f18, f14, dyn # perform operation
fmsub.s f1, f25, f18, f14, rdn # perform operation
fmsub.s f1, f25, f18, f14, rmm # perform operation
fmsub.s f1, f25, f18, f14, rne # perform operation
fmsub.s f1, f25, f18, f14, rtz # perform operation
fmsub.s f1, f25, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f25, f18, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x29, 0xff6536d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0xa9232b4b # load x3 with value 0xa9232b4b
sw x3, 0(x2) # store 0xa9232b4b in memory
flw f2, 0(x2) # load 0xa9232b4b from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fmsub.s f29, f3, f2, f28, dyn # perform operation
fmsub.s f29, f3, f2, f28, rdn # perform operation
fmsub.s f29, f3, f2, f28, rmm # perform operation
fmsub.s f29, f3, f2, f28, rne # perform operation
fmsub.s f29, f3, f2, f28, rtz # perform operation
fmsub.s f29, f3, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f3, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x6, 0x6141cea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x10b806a1 # load x3 with value 0x10b806a1
sw x3, 0(x2) # store 0x10b806a1 in memory
flw f12, 0(x2) # load 0x10b806a1 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f6, f19, f12, f23, dyn # perform operation
fmsub.s f6, f19, f12, f23, rdn # perform operation
fmsub.s f6, f19, f12, f23, rmm # perform operation
fmsub.s f6, f19, f12, f23, rne # perform operation
fmsub.s f6, f19, f12, f23, rtz # perform operation
fmsub.s f6, f19, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f19, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x7, 0xa86004c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x74d3b394 # load x3 with value 0x74d3b394
sw x3, 0(x2) # store 0x74d3b394 in memory
flw f25, 0(x2) # load 0x74d3b394 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fmsub.s f7, f30, f25, f4, dyn # perform operation
fmsub.s f7, f30, f25, f4, rdn # perform operation
fmsub.s f7, f30, f25, f4, rmm # perform operation
fmsub.s f7, f30, f25, f4, rne # perform operation
fmsub.s f7, f30, f25, f4, rtz # perform operation
fmsub.s f7, f30, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f30, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f30, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x9, 0x275eea8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x91bca1d8 # load x3 with value 0x91bca1d8
sw x3, 0(x2) # store 0x91bca1d8 in memory
flw f30, 0(x2) # load 0x91bca1d8 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmsub.s f9, f4, f30, f2, dyn # perform operation
fmsub.s f9, f4, f30, f2, rdn # perform operation
fmsub.s f9, f4, f30, f2, rmm # perform operation
fmsub.s f9, f4, f30, f2, rne # perform operation
fmsub.s f9, f4, f30, f2, rtz # perform operation
fmsub.s f9, f4, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f4, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f4, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f4, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f4, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f4, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x13, 0x514194cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x49817037 # load x3 with value 0x49817037
sw x3, 0(x2) # store 0x49817037 in memory
flw f28, 0(x2) # load 0x49817037 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmsub.s f13, f30, f28, f10, dyn # perform operation
fmsub.s f13, f30, f28, f10, rdn # perform operation
fmsub.s f13, f30, f28, f10, rmm # perform operation
fmsub.s f13, f30, f28, f10, rne # perform operation
fmsub.s f13, f30, f28, f10, rtz # perform operation
fmsub.s f13, f30, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f30, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f30, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f30, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f30, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f30, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x11, 0x0d91844c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xab84f1d5 # load x3 with value 0xab84f1d5
sw x3, 0(x2) # store 0xab84f1d5 in memory
flw f16, 0(x2) # load 0xab84f1d5 from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmsub.s f11, f25, f16, f22, dyn # perform operation
fmsub.s f11, f25, f16, f22, rdn # perform operation
fmsub.s f11, f25, f16, f22, rmm # perform operation
fmsub.s f11, f25, f16, f22, rne # perform operation
fmsub.s f11, f25, f16, f22, rtz # perform operation
fmsub.s f11, f25, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x17, 0xc08c0b01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0xec7bb1e7 # load x3 with value 0xec7bb1e7
sw x3, 0(x2) # store 0xec7bb1e7 in memory
flw f9, 0(x2) # load 0xec7bb1e7 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f17, f4, f9, f23, dyn # perform operation
fmsub.s f17, f4, f9, f23, rdn # perform operation
fmsub.s f17, f4, f9, f23, rmm # perform operation
fmsub.s f17, f4, f9, f23, rne # perform operation
fmsub.s f17, f4, f9, f23, rtz # perform operation
fmsub.s f17, f4, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f4, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f4, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f4, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f4, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f4, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x15, 0x9e5a34d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x2eece69d # load x3 with value 0x2eece69d
sw x3, 0(x2) # store 0x2eece69d in memory
flw f27, 0(x2) # load 0x2eece69d from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fmsub.s f15, f16, f27, f5, dyn # perform operation
fmsub.s f15, f16, f27, f5, rdn # perform operation
fmsub.s f15, f16, f27, f5, rmm # perform operation
fmsub.s f15, f16, f27, f5, rne # perform operation
fmsub.s f15, f16, f27, f5, rtz # perform operation
fmsub.s f15, f16, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f16, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f16, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x11, 0xfc288aac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x6467ea54 # load x3 with value 0x6467ea54
sw x3, 0(x2) # store 0x6467ea54 in memory
flw f19, 0(x2) # load 0x6467ea54 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fmsub.s f11, f9, f19, f14, dyn # perform operation
fmsub.s f11, f9, f19, f14, rdn # perform operation
fmsub.s f11, f9, f19, f14, rmm # perform operation
fmsub.s f11, f9, f19, f14, rne # perform operation
fmsub.s f11, f9, f19, f14, rtz # perform operation
fmsub.s f11, f9, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f9, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f9, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x17, 0x8c84604b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x97231a8d # load x3 with value 0x97231a8d
sw x3, 0(x2) # store 0x97231a8d in memory
flw f22, 0(x2) # load 0x97231a8d from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmsub.s f17, f23, f22, f31, dyn # perform operation
fmsub.s f17, f23, f22, f31, rdn # perform operation
fmsub.s f17, f23, f22, f31, rmm # perform operation
fmsub.s f17, f23, f22, f31, rne # perform operation
fmsub.s f17, f23, f22, f31, rtz # perform operation
fmsub.s f17, f23, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f23, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f23, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x30, 0x0713ee68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x6e968eda # load x3 with value 0x6e968eda
sw x3, 0(x2) # store 0x6e968eda in memory
flw f10, 0(x2) # load 0x6e968eda from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmsub.s f30, f28, f10, f24, dyn # perform operation
fmsub.s f30, f28, f10, f24, rdn # perform operation
fmsub.s f30, f28, f10, f24, rmm # perform operation
fmsub.s f30, f28, f10, f24, rne # perform operation
fmsub.s f30, f28, f10, f24, rtz # perform operation
fmsub.s f30, f28, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f28, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f28, f10, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x2, 0x160b5d56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x4a026ad6 # load x3 with value 0x4a026ad6
sw x3, 0(x2) # store 0x4a026ad6 in memory
flw f18, 0(x2) # load 0x4a026ad6 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmsub.s f2, f24, f18, f8, dyn # perform operation
fmsub.s f2, f24, f18, f8, rdn # perform operation
fmsub.s f2, f24, f18, f8, rmm # perform operation
fmsub.s f2, f24, f18, f8, rne # perform operation
fmsub.s f2, f24, f18, f8, rtz # perform operation
fmsub.s f2, f24, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f18, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x24, 0x4b2fc0a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0x812f1d0d # load x3 with value 0x812f1d0d
sw x3, 0(x2) # store 0x812f1d0d in memory
flw f8, 0(x2) # load 0x812f1d0d from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fmsub.s f24, f23, f8, f20, dyn # perform operation
fmsub.s f24, f23, f8, f20, rdn # perform operation
fmsub.s f24, f23, f8, f20, rmm # perform operation
fmsub.s f24, f23, f8, f20, rne # perform operation
fmsub.s f24, f23, f8, f20, rtz # perform operation
fmsub.s f24, f23, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f23, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f23, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x25, 0xf1e42388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xd1b092a0 # load x3 with value 0xd1b092a0
sw x3, 0(x2) # store 0xd1b092a0 in memory
flw f7, 0(x2) # load 0xd1b092a0 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fmsub.s f25, f21, f7, f22, dyn # perform operation
fmsub.s f25, f21, f7, f22, rdn # perform operation
fmsub.s f25, f21, f7, f22, rmm # perform operation
fmsub.s f25, f21, f7, f22, rne # perform operation
fmsub.s f25, f21, f7, f22, rtz # perform operation
fmsub.s f25, f21, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f21, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f21, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x27, 0x3a97a98c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x435e606f # load x3 with value 0x435e606f
sw x3, 0(x2) # store 0x435e606f in memory
flw f31, 0(x2) # load 0x435e606f from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmsub.s f27, f24, f31, f11, dyn # perform operation
fmsub.s f27, f24, f31, f11, rdn # perform operation
fmsub.s f27, f24, f31, f11, rmm # perform operation
fmsub.s f27, f24, f31, f11, rne # perform operation
fmsub.s f27, f24, f31, f11, rtz # perform operation
fmsub.s f27, f24, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f24, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x8, 0x32abdf57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0xdec30efc # load x3 with value 0xdec30efc
sw x3, 0(x2) # store 0xdec30efc in memory
flw f14, 0(x2) # load 0xdec30efc from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmsub.s f8, f12, f14, f2, dyn # perform operation
fmsub.s f8, f12, f14, f2, rdn # perform operation
fmsub.s f8, f12, f14, f2, rmm # perform operation
fmsub.s f8, f12, f14, f2, rne # perform operation
fmsub.s f8, f12, f14, f2, rtz # perform operation
fmsub.s f8, f12, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f12, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f12, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x28, 0x44dec309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x46aa0c66 # load x3 with value 0x46aa0c66
sw x3, 0(x2) # store 0x46aa0c66 in memory
flw f23, 0(x2) # load 0x46aa0c66 from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fmsub.s f28, f10, f23, f20, dyn # perform operation
fmsub.s f28, f10, f23, f20, rdn # perform operation
fmsub.s f28, f10, f23, f20, rmm # perform operation
fmsub.s f28, f10, f23, f20, rne # perform operation
fmsub.s f28, f10, f23, f20, rtz # perform operation
fmsub.s f28, f10, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f23, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x3, 0xf654948f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0xd4491544 # load x3 with value 0xd4491544
sw x3, 0(x2) # store 0xd4491544 in memory
flw f13, 0(x2) # load 0xd4491544 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmsub.s f3, f9, f13, f18, dyn # perform operation
fmsub.s f3, f9, f13, f18, rdn # perform operation
fmsub.s f3, f9, f13, f18, rmm # perform operation
fmsub.s f3, f9, f13, f18, rne # perform operation
fmsub.s f3, f9, f13, f18, rtz # perform operation
fmsub.s f3, f9, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f9, f13, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x16, 0x1728db9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x83fb2b72 # load x3 with value 0x83fb2b72
sw x3, 0(x2) # store 0x83fb2b72 in memory
flw f3, 0(x2) # load 0x83fb2b72 from memory into f3
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f16, f18, f3, f29, dyn # perform operation
fmsub.s f16, f18, f3, f29, rdn # perform operation
fmsub.s f16, f18, f3, f29, rmm # perform operation
fmsub.s f16, f18, f3, f29, rne # perform operation
fmsub.s f16, f18, f3, f29, rtz # perform operation
fmsub.s f16, f18, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f18, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f18, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f18, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f18, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f18, f3, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x29, 0xd759e12b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0xd4b51aae # load x3 with value 0xd4b51aae
sw x3, 0(x2) # store 0xd4b51aae in memory
flw f30, 0(x2) # load 0xd4b51aae from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmsub.s f29, f12, f30, f20, dyn # perform operation
fmsub.s f29, f12, f30, f20, rdn # perform operation
fmsub.s f29, f12, f30, f20, rmm # perform operation
fmsub.s f29, f12, f30, f20, rne # perform operation
fmsub.s f29, f12, f30, f20, rtz # perform operation
fmsub.s f29, f12, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f12, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f12, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f12, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f12, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f12, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x30, 0x9cee47f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0xad1871f8 # load x3 with value 0xad1871f8
sw x3, 0(x2) # store 0xad1871f8 in memory
flw f8, 0(x2) # load 0xad1871f8 from memory into f8
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmsub.s f30, f7, f8, f25, dyn # perform operation
fmsub.s f30, f7, f8, f25, rdn # perform operation
fmsub.s f30, f7, f8, f25, rmm # perform operation
fmsub.s f30, f7, f8, f25, rne # perform operation
fmsub.s f30, f7, f8, f25, rtz # perform operation
fmsub.s f30, f7, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f7, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f7, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f7, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f7, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f7, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x3, 0x9033610f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x0bde2137 # load x3 with value 0x0bde2137
sw x3, 0(x2) # store 0x0bde2137 in memory
flw f16, 0(x2) # load 0x0bde2137 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmsub.s f3, f8, f16, f5, dyn # perform operation
fmsub.s f3, f8, f16, f5, rdn # perform operation
fmsub.s f3, f8, f16, f5, rmm # perform operation
fmsub.s f3, f8, f16, f5, rne # perform operation
fmsub.s f3, f8, f16, f5, rtz # perform operation
fmsub.s f3, f8, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f8, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f8, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x9, 0x919f4396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x2d4d7e5e # load x3 with value 0x2d4d7e5e
sw x3, 0(x2) # store 0x2d4d7e5e in memory
flw f3, 0(x2) # load 0x2d4d7e5e from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmsub.s f9, f11, f3, f20, dyn # perform operation
fmsub.s f9, f11, f3, f20, rdn # perform operation
fmsub.s f9, f11, f3, f20, rmm # perform operation
fmsub.s f9, f11, f3, f20, rne # perform operation
fmsub.s f9, f11, f3, f20, rtz # perform operation
fmsub.s f9, f11, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f11, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f11, f3, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x26, 0x575b1236 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x2f7fe968 # load x3 with value 0x2f7fe968
sw x3, 0(x2) # store 0x2f7fe968 in memory
flw f27, 0(x2) # load 0x2f7fe968 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fmsub.s f26, f2, f27, f29, dyn # perform operation
fmsub.s f26, f2, f27, f29, rdn # perform operation
fmsub.s f26, f2, f27, f29, rmm # perform operation
fmsub.s f26, f2, f27, f29, rne # perform operation
fmsub.s f26, f2, f27, f29, rtz # perform operation
fmsub.s f26, f2, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f2, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f2, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x18, 0x4e900d37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x4d404977 # load x3 with value 0x4d404977
sw x3, 0(x2) # store 0x4d404977 in memory
flw f20, 0(x2) # load 0x4d404977 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fmsub.s f18, f9, f20, f8, dyn # perform operation
fmsub.s f18, f9, f20, f8, rdn # perform operation
fmsub.s f18, f9, f20, f8, rmm # perform operation
fmsub.s f18, f9, f20, f8, rne # perform operation
fmsub.s f18, f9, f20, f8, rtz # perform operation
fmsub.s f18, f9, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f9, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x15, 0x5f60ca47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x8cf2ef87 # load x3 with value 0x8cf2ef87
sw x3, 0(x2) # store 0x8cf2ef87 in memory
flw f30, 0(x2) # load 0x8cf2ef87 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmsub.s f15, f4, f30, f9, dyn # perform operation
fmsub.s f15, f4, f30, f9, rdn # perform operation
fmsub.s f15, f4, f30, f9, rmm # perform operation
fmsub.s f15, f4, f30, f9, rne # perform operation
fmsub.s f15, f4, f30, f9, rtz # perform operation
fmsub.s f15, f4, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f4, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f4, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f4, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f4, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f4, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x28, 0xe301f84f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x237de9b8 # load x3 with value 0x237de9b8
sw x3, 0(x2) # store 0x237de9b8 in memory
flw f26, 0(x2) # load 0x237de9b8 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmsub.s f28, f10, f26, f23, dyn # perform operation
fmsub.s f28, f10, f26, f23, rdn # perform operation
fmsub.s f28, f10, f26, f23, rmm # perform operation
fmsub.s f28, f10, f26, f23, rne # perform operation
fmsub.s f28, f10, f26, f23, rtz # perform operation
fmsub.s f28, f10, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f10, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f10, f26, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x1, 0x4195477e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xe0055d3d # load x3 with value 0xe0055d3d
sw x3, 0(x2) # store 0xe0055d3d in memory
flw f2, 0(x2) # load 0xe0055d3d from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmsub.s f1, f20, f2, f12, dyn # perform operation
fmsub.s f1, f20, f2, f12, rdn # perform operation
fmsub.s f1, f20, f2, f12, rmm # perform operation
fmsub.s f1, f20, f2, f12, rne # perform operation
fmsub.s f1, f20, f2, f12, rtz # perform operation
fmsub.s f1, f20, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f20, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x15, 0xcd0d2a5d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x4e0fb6ab # load x3 with value 0x4e0fb6ab
sw x3, 0(x2) # store 0x4e0fb6ab in memory
flw f28, 0(x2) # load 0x4e0fb6ab from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmsub.s f15, f31, f28, f24, dyn # perform operation
fmsub.s f15, f31, f28, f24, rdn # perform operation
fmsub.s f15, f31, f28, f24, rmm # perform operation
fmsub.s f15, f31, f28, f24, rne # perform operation
fmsub.s f15, f31, f28, f24, rtz # perform operation
fmsub.s f15, f31, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f31, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f31, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f31, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f31, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f31, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x8, 0xdb4e6509 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x67b20e68 # load x3 with value 0x67b20e68
sw x3, 0(x2) # store 0x67b20e68 in memory
flw f28, 0(x2) # load 0x67b20e68 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmsub.s f8, f30, f28, f26, dyn # perform operation
fmsub.s f8, f30, f28, f26, rdn # perform operation
fmsub.s f8, f30, f28, f26, rmm # perform operation
fmsub.s f8, f30, f28, f26, rne # perform operation
fmsub.s f8, f30, f28, f26, rtz # perform operation
fmsub.s f8, f30, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f30, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f30, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x25, 0xf2a8f331 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xa6c6030f # load x3 with value 0xa6c6030f
sw x3, 0(x2) # store 0xa6c6030f in memory
flw f23, 0(x2) # load 0xa6c6030f from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmsub.s f25, f12, f23, f21, dyn # perform operation
fmsub.s f25, f12, f23, f21, rdn # perform operation
fmsub.s f25, f12, f23, f21, rmm # perform operation
fmsub.s f25, f12, f23, f21, rne # perform operation
fmsub.s f25, f12, f23, f21, rtz # perform operation
fmsub.s f25, f12, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f12, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f12, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f12, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f12, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f12, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x17, 0xb10120de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x2bab3a00 # load x3 with value 0x2bab3a00
sw x3, 0(x2) # store 0x2bab3a00 in memory
flw f4, 0(x2) # load 0x2bab3a00 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmsub.s f17, f13, f4, f11, dyn # perform operation
fmsub.s f17, f13, f4, f11, rdn # perform operation
fmsub.s f17, f13, f4, f11, rmm # perform operation
fmsub.s f17, f13, f4, f11, rne # perform operation
fmsub.s f17, f13, f4, f11, rtz # perform operation
fmsub.s f17, f13, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x10, 0x61d397d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x3f04fd21 # load x3 with value 0x3f04fd21
sw x3, 0(x2) # store 0x3f04fd21 in memory
flw f5, 0(x2) # load 0x3f04fd21 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmsub.s f10, f24, f5, f1, dyn # perform operation
fmsub.s f10, f24, f5, f1, rdn # perform operation
fmsub.s f10, f24, f5, f1, rmm # perform operation
fmsub.s f10, f24, f5, f1, rne # perform operation
fmsub.s f10, f24, f5, f1, rtz # perform operation
fmsub.s f10, f24, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f24, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f24, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f24, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f24, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f24, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x15, 0x4923543c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0xf16f9b93 # load x3 with value 0xf16f9b93
sw x3, 0(x2) # store 0xf16f9b93 in memory
flw f30, 0(x2) # load 0xf16f9b93 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fmsub.s f15, f9, f30, f1, dyn # perform operation
fmsub.s f15, f9, f30, f1, rdn # perform operation
fmsub.s f15, f9, f30, f1, rmm # perform operation
fmsub.s f15, f9, f30, f1, rne # perform operation
fmsub.s f15, f9, f30, f1, rtz # perform operation
fmsub.s f15, f9, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f9, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f9, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f9, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f9, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f9, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x13, 0x14d28112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x2aca581c # load x3 with value 0x2aca581c
sw x3, 0(x2) # store 0x2aca581c in memory
flw f14, 0(x2) # load 0x2aca581c from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmsub.s f13, f20, f14, f7, dyn # perform operation
fmsub.s f13, f20, f14, f7, rdn # perform operation
fmsub.s f13, f20, f14, f7, rmm # perform operation
fmsub.s f13, f20, f14, f7, rne # perform operation
fmsub.s f13, f20, f14, f7, rtz # perform operation
fmsub.s f13, f20, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f20, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f20, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f20, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f20, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f20, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x19, 0x633a88e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x8dcc17ec # load x3 with value 0x8dcc17ec
sw x3, 0(x2) # store 0x8dcc17ec in memory
flw f10, 0(x2) # load 0x8dcc17ec from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fmsub.s f19, f21, f10, f1, dyn # perform operation
fmsub.s f19, f21, f10, f1, rdn # perform operation
fmsub.s f19, f21, f10, f1, rmm # perform operation
fmsub.s f19, f21, f10, f1, rne # perform operation
fmsub.s f19, f21, f10, f1, rtz # perform operation
fmsub.s f19, f21, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f21, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x28, 0x15ff2934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x2df13c31 # load x3 with value 0x2df13c31
sw x3, 0(x2) # store 0x2df13c31 in memory
flw f7, 0(x2) # load 0x2df13c31 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmsub.s f28, f24, f7, f13, dyn # perform operation
fmsub.s f28, f24, f7, f13, rdn # perform operation
fmsub.s f28, f24, f7, f13, rmm # perform operation
fmsub.s f28, f24, f7, f13, rne # perform operation
fmsub.s f28, f24, f7, f13, rtz # perform operation
fmsub.s f28, f24, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f24, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f24, f7, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x30, 0xd518b29d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xad1962ff # load x3 with value 0xad1962ff
sw x3, 0(x2) # store 0xad1962ff in memory
flw f13, 0(x2) # load 0xad1962ff from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmsub.s f30, f21, f13, f3, dyn # perform operation
fmsub.s f30, f21, f13, f3, rdn # perform operation
fmsub.s f30, f21, f13, f3, rmm # perform operation
fmsub.s f30, f21, f13, f3, rne # perform operation
fmsub.s f30, f21, f13, f3, rtz # perform operation
fmsub.s f30, f21, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f21, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f21, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x31, 0xf8f167d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x6d73152f # load x3 with value 0x6d73152f
sw x3, 0(x2) # store 0x6d73152f in memory
flw f19, 0(x2) # load 0x6d73152f from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmsub.s f31, f14, f19, f3, dyn # perform operation
fmsub.s f31, f14, f19, f3, rdn # perform operation
fmsub.s f31, f14, f19, f3, rmm # perform operation
fmsub.s f31, f14, f19, f3, rne # perform operation
fmsub.s f31, f14, f19, f3, rtz # perform operation
fmsub.s f31, f14, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x4, 0x11ccd496 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x3d5a7b91 # load x3 with value 0x3d5a7b91
sw x3, 0(x2) # store 0x3d5a7b91 in memory
flw f2, 0(x2) # load 0x3d5a7b91 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmsub.s f4, f29, f2, f25, dyn # perform operation
fmsub.s f4, f29, f2, f25, rdn # perform operation
fmsub.s f4, f29, f2, f25, rmm # perform operation
fmsub.s f4, f29, f2, f25, rne # perform operation
fmsub.s f4, f29, f2, f25, rtz # perform operation
fmsub.s f4, f29, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f29, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x8, 0x01b7ee51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x1b356963 # load x3 with value 0x1b356963
sw x3, 0(x2) # store 0x1b356963 in memory
flw f3, 0(x2) # load 0x1b356963 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
fmsub.s f8, f10, f3, f4, dyn # perform operation
fmsub.s f8, f10, f3, f4, rdn # perform operation
fmsub.s f8, f10, f3, f4, rmm # perform operation
fmsub.s f8, f10, f3, f4, rne # perform operation
fmsub.s f8, f10, f3, f4, rtz # perform operation
fmsub.s f8, f10, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x26, 0x6d0ed429 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xd97b766c # load x3 with value 0xd97b766c
sw x3, 0(x2) # store 0xd97b766c in memory
flw f29, 0(x2) # load 0xd97b766c from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fmsub.s f26, f30, f29, f9, dyn # perform operation
fmsub.s f26, f30, f29, f9, rdn # perform operation
fmsub.s f26, f30, f29, f9, rmm # perform operation
fmsub.s f26, f30, f29, f9, rne # perform operation
fmsub.s f26, f30, f29, f9, rtz # perform operation
fmsub.s f26, f30, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f30, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x4, 0x5076f3b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x9bcd019b # load x3 with value 0x9bcd019b
sw x3, 0(x2) # store 0x9bcd019b in memory
flw f14, 0(x2) # load 0x9bcd019b from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmsub.s f4, f15, f14, f24, dyn # perform operation
fmsub.s f4, f15, f14, f24, rdn # perform operation
fmsub.s f4, f15, f14, f24, rmm # perform operation
fmsub.s f4, f15, f14, f24, rne # perform operation
fmsub.s f4, f15, f14, f24, rtz # perform operation
fmsub.s f4, f15, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f15, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f15, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f15, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f15, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f15, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x11, 0x1f14b09e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x9073c305 # load x3 with value 0x9073c305
sw x3, 0(x2) # store 0x9073c305 in memory
flw f24, 0(x2) # load 0x9073c305 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmsub.s f11, f8, f24, f19, dyn # perform operation
fmsub.s f11, f8, f24, f19, rdn # perform operation
fmsub.s f11, f8, f24, f19, rmm # perform operation
fmsub.s f11, f8, f24, f19, rne # perform operation
fmsub.s f11, f8, f24, f19, rtz # perform operation
fmsub.s f11, f8, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f8, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f8, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f8, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f8, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f8, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x21, 0x66ac3662 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0xb89c8b20 # load x3 with value 0xb89c8b20
sw x3, 0(x2) # store 0xb89c8b20 in memory
flw f18, 0(x2) # load 0xb89c8b20 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmsub.s f21, f2, f18, f29, dyn # perform operation
fmsub.s f21, f2, f18, f29, rdn # perform operation
fmsub.s f21, f2, f18, f29, rmm # perform operation
fmsub.s f21, f2, f18, f29, rne # perform operation
fmsub.s f21, f2, f18, f29, rtz # perform operation
fmsub.s f21, f2, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f2, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f2, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f2, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f2, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f2, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x2, 0xfc29c949 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x828b6f89 # load x3 with value 0x828b6f89
sw x3, 0(x2) # store 0x828b6f89 in memory
flw f17, 0(x2) # load 0x828b6f89 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f2, f14, f17, f29, dyn # perform operation
fmsub.s f2, f14, f17, f29, rdn # perform operation
fmsub.s f2, f14, f17, f29, rmm # perform operation
fmsub.s f2, f14, f17, f29, rne # perform operation
fmsub.s f2, f14, f17, f29, rtz # perform operation
fmsub.s f2, f14, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f14, f17, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x1, 0x846f7156 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x9456b020 # load x3 with value 0x9456b020
sw x3, 0(x2) # store 0x9456b020 in memory
flw f16, 0(x2) # load 0x9456b020 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fmsub.s f1, f28, f16, f26, dyn # perform operation
fmsub.s f1, f28, f16, f26, rdn # perform operation
fmsub.s f1, f28, f16, f26, rmm # perform operation
fmsub.s f1, f28, f16, f26, rne # perform operation
fmsub.s f1, f28, f16, f26, rtz # perform operation
fmsub.s f1, f28, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f28, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f28, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x13, 0x85718d5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x593a0369 # load x3 with value 0x593a0369
sw x3, 0(x2) # store 0x593a0369 in memory
flw f25, 0(x2) # load 0x593a0369 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmsub.s f13, f28, f25, f2, dyn # perform operation
fmsub.s f13, f28, f25, f2, rdn # perform operation
fmsub.s f13, f28, f25, f2, rmm # perform operation
fmsub.s f13, f28, f25, f2, rne # perform operation
fmsub.s f13, f28, f25, f2, rtz # perform operation
fmsub.s f13, f28, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f28, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f28, f25, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x28, 0xbb49e7d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xead2200d # load x3 with value 0xead2200d
sw x3, 0(x2) # store 0xead2200d in memory
flw f21, 0(x2) # load 0xead2200d from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f28, f27, f21, f25, dyn # perform operation
fmsub.s f28, f27, f21, f25, rdn # perform operation
fmsub.s f28, f27, f21, f25, rmm # perform operation
fmsub.s f28, f27, f21, f25, rne # perform operation
fmsub.s f28, f27, f21, f25, rtz # perform operation
fmsub.s f28, f27, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f27, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f27, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f27, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f27, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f27, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x6, 0x2528f7d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x3a760246 # load x3 with value 0x3a760246
sw x3, 0(x2) # store 0x3a760246 in memory
flw f18, 0(x2) # load 0x3a760246 from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmsub.s f6, f13, f18, f12, dyn # perform operation
fmsub.s f6, f13, f18, f12, rdn # perform operation
fmsub.s f6, f13, f18, f12, rmm # perform operation
fmsub.s f6, f13, f18, f12, rne # perform operation
fmsub.s f6, f13, f18, f12, rtz # perform operation
fmsub.s f6, f13, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f13, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x24, 0x2bde9379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x002ec486 # load x3 with value 0x002ec486
sw x3, 0(x2) # store 0x002ec486 in memory
flw f15, 0(x2) # load 0x002ec486 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmsub.s f24, f17, f15, f27, dyn # perform operation
fmsub.s f24, f17, f15, f27, rdn # perform operation
fmsub.s f24, f17, f15, f27, rmm # perform operation
fmsub.s f24, f17, f15, f27, rne # perform operation
fmsub.s f24, f17, f15, f27, rtz # perform operation
fmsub.s f24, f17, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f17, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f17, f15, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x8, 0x65b1a395 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xe72b54ed # load x3 with value 0xe72b54ed
sw x3, 0(x2) # store 0xe72b54ed in memory
flw f10, 0(x2) # load 0xe72b54ed from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fmsub.s f8, f21, f10, f2, dyn # perform operation
fmsub.s f8, f21, f10, f2, rdn # perform operation
fmsub.s f8, f21, f10, f2, rmm # perform operation
fmsub.s f8, f21, f10, f2, rne # perform operation
fmsub.s f8, f21, f10, f2, rtz # perform operation
fmsub.s f8, f21, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f21, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f21, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f21, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f21, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f21, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x12, 0x92d17bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x7e7abc65 # load x3 with value 0x7e7abc65
sw x3, 0(x2) # store 0x7e7abc65 in memory
flw f21, 0(x2) # load 0x7e7abc65 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fmsub.s f12, f7, f21, f5, dyn # perform operation
fmsub.s f12, f7, f21, f5, rdn # perform operation
fmsub.s f12, f7, f21, f5, rmm # perform operation
fmsub.s f12, f7, f21, f5, rne # perform operation
fmsub.s f12, f7, f21, f5, rtz # perform operation
fmsub.s f12, f7, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f7, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f7, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f7, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f7, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f7, f21, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x7, 0xb1e4e6c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x07999cbf # load x3 with value 0x07999cbf
sw x3, 0(x2) # store 0x07999cbf in memory
flw f30, 0(x2) # load 0x07999cbf from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmsub.s f7, f14, f30, f16, dyn # perform operation
fmsub.s f7, f14, f30, f16, rdn # perform operation
fmsub.s f7, f14, f30, f16, rmm # perform operation
fmsub.s f7, f14, f30, f16, rne # perform operation
fmsub.s f7, f14, f30, f16, rtz # perform operation
fmsub.s f7, f14, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f14, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f14, f30, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x27, 0x81c07146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x55f78727 # load x3 with value 0x55f78727
sw x3, 0(x2) # store 0x55f78727 in memory
flw f14, 0(x2) # load 0x55f78727 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmsub.s f27, f23, f14, f29, dyn # perform operation
fmsub.s f27, f23, f14, f29, rdn # perform operation
fmsub.s f27, f23, f14, f29, rmm # perform operation
fmsub.s f27, f23, f14, f29, rne # perform operation
fmsub.s f27, f23, f14, f29, rtz # perform operation
fmsub.s f27, f23, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f23, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f23, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f23, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f23, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f23, f14, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x17, 0x0aca95f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0xde9691c8 # load x3 with value 0xde9691c8
sw x3, 0(x2) # store 0xde9691c8 in memory
flw f14, 0(x2) # load 0xde9691c8 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmsub.s f17, f22, f14, f3, dyn # perform operation
fmsub.s f17, f22, f14, f3, rdn # perform operation
fmsub.s f17, f22, f14, f3, rmm # perform operation
fmsub.s f17, f22, f14, f3, rne # perform operation
fmsub.s f17, f22, f14, f3, rtz # perform operation
fmsub.s f17, f22, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f22, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f22, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f22, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f22, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f22, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x28, 0x70efadb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x110cd7fc # load x3 with value 0x110cd7fc
sw x3, 0(x2) # store 0x110cd7fc in memory
flw f24, 0(x2) # load 0x110cd7fc from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fmsub.s f28, f6, f24, f19, dyn # perform operation
fmsub.s f28, f6, f24, f19, rdn # perform operation
fmsub.s f28, f6, f24, f19, rmm # perform operation
fmsub.s f28, f6, f24, f19, rne # perform operation
fmsub.s f28, f6, f24, f19, rtz # perform operation
fmsub.s f28, f6, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f6, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f6, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x31, 0xca2d3ca0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x1a3890f3 # load x3 with value 0x1a3890f3
sw x3, 0(x2) # store 0x1a3890f3 in memory
flw f4, 0(x2) # load 0x1a3890f3 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmsub.s f31, f14, f4, f3, dyn # perform operation
fmsub.s f31, f14, f4, f3, rdn # perform operation
fmsub.s f31, f14, f4, f3, rmm # perform operation
fmsub.s f31, f14, f4, f3, rne # perform operation
fmsub.s f31, f14, f4, f3, rtz # perform operation
fmsub.s f31, f14, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f14, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f14, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f14, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f14, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f14, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x14, 0x5d96d51d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x65a75a00 # load x3 with value 0x65a75a00
sw x3, 0(x2) # store 0x65a75a00 in memory
flw f11, 0(x2) # load 0x65a75a00 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fmsub.s f14, f5, f11, f10, dyn # perform operation
fmsub.s f14, f5, f11, f10, rdn # perform operation
fmsub.s f14, f5, f11, f10, rmm # perform operation
fmsub.s f14, f5, f11, f10, rne # perform operation
fmsub.s f14, f5, f11, f10, rtz # perform operation
fmsub.s f14, f5, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f5, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f5, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x30, 0x3bd3faf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xc7adc2b8 # load x3 with value 0xc7adc2b8
sw x3, 0(x2) # store 0xc7adc2b8 in memory
flw f20, 0(x2) # load 0xc7adc2b8 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmsub.s f30, f28, f20, f17, dyn # perform operation
fmsub.s f30, f28, f20, f17, rdn # perform operation
fmsub.s f30, f28, f20, f17, rmm # perform operation
fmsub.s f30, f28, f20, f17, rne # perform operation
fmsub.s f30, f28, f20, f17, rtz # perform operation
fmsub.s f30, f28, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f28, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f28, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x1, 0x28003da7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x89f5a7c8 # load x3 with value 0x89f5a7c8
sw x3, 0(x2) # store 0x89f5a7c8 in memory
flw f9, 0(x2) # load 0x89f5a7c8 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmsub.s f1, f26, f9, f7, dyn # perform operation
fmsub.s f1, f26, f9, f7, rdn # perform operation
fmsub.s f1, f26, f9, f7, rmm # perform operation
fmsub.s f1, f26, f9, f7, rne # perform operation
fmsub.s f1, f26, f9, f7, rtz # perform operation
fmsub.s f1, f26, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f26, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f26, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f26, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f26, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f26, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x8, 0xd867f3f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x7b0bfe76 # load x3 with value 0x7b0bfe76
sw x3, 0(x2) # store 0x7b0bfe76 in memory
flw f15, 0(x2) # load 0x7b0bfe76 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmsub.s f8, f14, f15, f31, dyn # perform operation
fmsub.s f8, f14, f15, f31, rdn # perform operation
fmsub.s f8, f14, f15, f31, rmm # perform operation
fmsub.s f8, f14, f15, f31, rne # perform operation
fmsub.s f8, f14, f15, f31, rtz # perform operation
fmsub.s f8, f14, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f14, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f14, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x19, 0x44dfef5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x28255cc6 # load x3 with value 0x28255cc6
sw x3, 0(x2) # store 0x28255cc6 in memory
flw f3, 0(x2) # load 0x28255cc6 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmsub.s f19, f1, f3, f14, dyn # perform operation
fmsub.s f19, f1, f3, f14, rdn # perform operation
fmsub.s f19, f1, f3, f14, rmm # perform operation
fmsub.s f19, f1, f3, f14, rne # perform operation
fmsub.s f19, f1, f3, f14, rtz # perform operation
fmsub.s f19, f1, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f1, f3, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x28, 0x37190005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x07277f49 # load x3 with value 0x07277f49
sw x3, 0(x2) # store 0x07277f49 in memory
flw f5, 0(x2) # load 0x07277f49 from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fmsub.s f28, f11, f5, f24, dyn # perform operation
fmsub.s f28, f11, f5, f24, rdn # perform operation
fmsub.s f28, f11, f5, f24, rmm # perform operation
fmsub.s f28, f11, f5, f24, rne # perform operation
fmsub.s f28, f11, f5, f24, rtz # perform operation
fmsub.s f28, f11, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f11, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x28, 0x82b3efb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xd601a8bb # load x3 with value 0xd601a8bb
sw x3, 0(x2) # store 0xd601a8bb in memory
flw f29, 0(x2) # load 0xd601a8bb from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmsub.s f28, f16, f29, f21, dyn # perform operation
fmsub.s f28, f16, f29, f21, rdn # perform operation
fmsub.s f28, f16, f29, f21, rmm # perform operation
fmsub.s f28, f16, f29, f21, rne # perform operation
fmsub.s f28, f16, f29, f21, rtz # perform operation
fmsub.s f28, f16, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f16, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x21, 0xea69eb96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x8e126923 # load x3 with value 0x8e126923
sw x3, 0(x2) # store 0x8e126923 in memory
flw f10, 0(x2) # load 0x8e126923 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmsub.s f21, f1, f10, f29, dyn # perform operation
fmsub.s f21, f1, f10, f29, rdn # perform operation
fmsub.s f21, f1, f10, f29, rmm # perform operation
fmsub.s f21, f1, f10, f29, rne # perform operation
fmsub.s f21, f1, f10, f29, rtz # perform operation
fmsub.s f21, f1, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f1, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f1, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x31, 0xb4e29aba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x4e5d4f29 # load x3 with value 0x4e5d4f29
sw x3, 0(x2) # store 0x4e5d4f29 in memory
flw f24, 0(x2) # load 0x4e5d4f29 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fmsub.s f31, f28, f24, f19, dyn # perform operation
fmsub.s f31, f28, f24, f19, rdn # perform operation
fmsub.s f31, f28, f24, f19, rmm # perform operation
fmsub.s f31, f28, f24, f19, rne # perform operation
fmsub.s f31, f28, f24, f19, rtz # perform operation
fmsub.s f31, f28, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f28, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f28, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f28, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f28, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f28, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x9, 0x29b4a22f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xcb90e051 # load x3 with value 0xcb90e051
sw x3, 0(x2) # store 0xcb90e051 in memory
flw f23, 0(x2) # load 0xcb90e051 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmsub.s f9, f20, f23, f8, dyn # perform operation
fmsub.s f9, f20, f23, f8, rdn # perform operation
fmsub.s f9, f20, f23, f8, rmm # perform operation
fmsub.s f9, f20, f23, f8, rne # perform operation
fmsub.s f9, f20, f23, f8, rtz # perform operation
fmsub.s f9, f20, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f20, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f20, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x22, 0xe4bc8ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x446aa698 # load x3 with value 0x446aa698
sw x3, 0(x2) # store 0x446aa698 in memory
flw f19, 0(x2) # load 0x446aa698 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fmsub.s f22, f23, f19, f20, dyn # perform operation
fmsub.s f22, f23, f19, f20, rdn # perform operation
fmsub.s f22, f23, f19, f20, rmm # perform operation
fmsub.s f22, f23, f19, f20, rne # perform operation
fmsub.s f22, f23, f19, f20, rtz # perform operation
fmsub.s f22, f23, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f23, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f23, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x13, 0xc5daef59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x6ca8af72 # load x3 with value 0x6ca8af72
sw x3, 0(x2) # store 0x6ca8af72 in memory
flw f26, 0(x2) # load 0x6ca8af72 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmsub.s f13, f29, f26, f19, dyn # perform operation
fmsub.s f13, f29, f26, f19, rdn # perform operation
fmsub.s f13, f29, f26, f19, rmm # perform operation
fmsub.s f13, f29, f26, f19, rne # perform operation
fmsub.s f13, f29, f26, f19, rtz # perform operation
fmsub.s f13, f29, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f29, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f29, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x17, 0x57d3c963 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x14bfe7da # load x3 with value 0x14bfe7da
sw x3, 0(x2) # store 0x14bfe7da in memory
flw f5, 0(x2) # load 0x14bfe7da from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmsub.s f17, f8, f5, f24, dyn # perform operation
fmsub.s f17, f8, f5, f24, rdn # perform operation
fmsub.s f17, f8, f5, f24, rmm # perform operation
fmsub.s f17, f8, f5, f24, rne # perform operation
fmsub.s f17, f8, f5, f24, rtz # perform operation
fmsub.s f17, f8, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f8, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x3, 0x74d798f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x9b6d152b # load x3 with value 0x9b6d152b
sw x3, 0(x2) # store 0x9b6d152b in memory
flw f21, 0(x2) # load 0x9b6d152b from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f3, f8, f21, f29, dyn # perform operation
fmsub.s f3, f8, f21, f29, rdn # perform operation
fmsub.s f3, f8, f21, f29, rmm # perform operation
fmsub.s f3, f8, f21, f29, rne # perform operation
fmsub.s f3, f8, f21, f29, rtz # perform operation
fmsub.s f3, f8, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f8, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f8, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x8, 0x791280dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x79eca0ce # load x3 with value 0x79eca0ce
sw x3, 0(x2) # store 0x79eca0ce in memory
flw f23, 0(x2) # load 0x79eca0ce from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fmsub.s f8, f11, f23, f27, dyn # perform operation
fmsub.s f8, f11, f23, f27, rdn # perform operation
fmsub.s f8, f11, f23, f27, rmm # perform operation
fmsub.s f8, f11, f23, f27, rne # perform operation
fmsub.s f8, f11, f23, f27, rtz # perform operation
fmsub.s f8, f11, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f11, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f11, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f11, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f11, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f11, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x6, 0x9b8ff322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x4eeb3b0c # load x3 with value 0x4eeb3b0c
sw x3, 0(x2) # store 0x4eeb3b0c in memory
flw f24, 0(x2) # load 0x4eeb3b0c from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fmsub.s f6, f15, f24, f16, dyn # perform operation
fmsub.s f6, f15, f24, f16, rdn # perform operation
fmsub.s f6, f15, f24, f16, rmm # perform operation
fmsub.s f6, f15, f24, f16, rne # perform operation
fmsub.s f6, f15, f24, f16, rtz # perform operation
fmsub.s f6, f15, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f15, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x3, 0x1e42a863 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x1bf23b46 # load x3 with value 0x1bf23b46
sw x3, 0(x2) # store 0x1bf23b46 in memory
flw f9, 0(x2) # load 0x1bf23b46 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fmsub.s f3, f14, f9, f16, dyn # perform operation
fmsub.s f3, f14, f9, f16, rdn # perform operation
fmsub.s f3, f14, f9, f16, rmm # perform operation
fmsub.s f3, f14, f9, f16, rne # perform operation
fmsub.s f3, f14, f9, f16, rtz # perform operation
fmsub.s f3, f14, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x1, 0x68a1b70a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0xb191514c # load x3 with value 0xb191514c
sw x3, 0(x2) # store 0xb191514c in memory
flw f15, 0(x2) # load 0xb191514c from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmsub.s f1, f2, f15, f25, dyn # perform operation
fmsub.s f1, f2, f15, f25, rdn # perform operation
fmsub.s f1, f2, f15, f25, rmm # perform operation
fmsub.s f1, f2, f15, f25, rne # perform operation
fmsub.s f1, f2, f15, f25, rtz # perform operation
fmsub.s f1, f2, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f2, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f2, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x2, 0xbc5bd923 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x77bd5f85 # load x3 with value 0x77bd5f85
sw x3, 0(x2) # store 0x77bd5f85 in memory
flw f31, 0(x2) # load 0x77bd5f85 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmsub.s f2, f7, f31, f12, dyn # perform operation
fmsub.s f2, f7, f31, f12, rdn # perform operation
fmsub.s f2, f7, f31, f12, rmm # perform operation
fmsub.s f2, f7, f31, f12, rne # perform operation
fmsub.s f2, f7, f31, f12, rtz # perform operation
fmsub.s f2, f7, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f31, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x12, 0xbbe9f0ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xef69b40b # load x3 with value 0xef69b40b
sw x3, 0(x2) # store 0xef69b40b in memory
flw f8, 0(x2) # load 0xef69b40b from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f12, f28, f8, f25, dyn # perform operation
fmsub.s f12, f28, f8, f25, rdn # perform operation
fmsub.s f12, f28, f8, f25, rmm # perform operation
fmsub.s f12, f28, f8, f25, rne # perform operation
fmsub.s f12, f28, f8, f25, rtz # perform operation
fmsub.s f12, f28, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f28, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x2, 0xce717a00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0xa718a195 # load x3 with value 0xa718a195
sw x3, 0(x2) # store 0xa718a195 in memory
flw f24, 0(x2) # load 0xa718a195 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
fmsub.s f2, f21, f24, f29, dyn # perform operation
fmsub.s f2, f21, f24, f29, rdn # perform operation
fmsub.s f2, f21, f24, f29, rmm # perform operation
fmsub.s f2, f21, f24, f29, rne # perform operation
fmsub.s f2, f21, f24, f29, rtz # perform operation
fmsub.s f2, f21, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f21, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f21, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x23, 0x5f224f2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x07579c28 # load x3 with value 0x07579c28
sw x3, 0(x2) # store 0x07579c28 in memory
flw f31, 0(x2) # load 0x07579c28 from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmsub.s f23, f8, f31, f28, dyn # perform operation
fmsub.s f23, f8, f31, f28, rdn # perform operation
fmsub.s f23, f8, f31, f28, rmm # perform operation
fmsub.s f23, f8, f31, f28, rne # perform operation
fmsub.s f23, f8, f31, f28, rtz # perform operation
fmsub.s f23, f8, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f8, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f8, f31, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x15, 0x0b8a4ba9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x93b9476c # load x3 with value 0x93b9476c
sw x3, 0(x2) # store 0x93b9476c in memory
flw f20, 0(x2) # load 0x93b9476c from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmsub.s f15, f23, f20, f12, dyn # perform operation
fmsub.s f15, f23, f20, f12, rdn # perform operation
fmsub.s f15, f23, f20, f12, rmm # perform operation
fmsub.s f15, f23, f20, f12, rne # perform operation
fmsub.s f15, f23, f20, f12, rtz # perform operation
fmsub.s f15, f23, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f23, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f23, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f23, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f23, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f23, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x6, 0x17be8f14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xc33de9b8 # load x3 with value 0xc33de9b8
sw x3, 0(x2) # store 0xc33de9b8 in memory
flw f27, 0(x2) # load 0xc33de9b8 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fmsub.s f6, f20, f27, f4, dyn # perform operation
fmsub.s f6, f20, f27, f4, rdn # perform operation
fmsub.s f6, f20, f27, f4, rmm # perform operation
fmsub.s f6, f20, f27, f4, rne # perform operation
fmsub.s f6, f20, f27, f4, rtz # perform operation
fmsub.s f6, f20, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f27, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x29, 0x615ee57c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x22be204f # load x3 with value 0x22be204f
sw x3, 0(x2) # store 0x22be204f in memory
flw f5, 0(x2) # load 0x22be204f from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmsub.s f29, f21, f5, f3, dyn # perform operation
fmsub.s f29, f21, f5, f3, rdn # perform operation
fmsub.s f29, f21, f5, f3, rmm # perform operation
fmsub.s f29, f21, f5, f3, rne # perform operation
fmsub.s f29, f21, f5, f3, rtz # perform operation
fmsub.s f29, f21, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f21, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x5, 0xebda7612 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x518e0ce1 # load x3 with value 0x518e0ce1
sw x3, 0(x2) # store 0x518e0ce1 in memory
flw f9, 0(x2) # load 0x518e0ce1 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
fmsub.s f5, f20, f9, f4, dyn # perform operation
fmsub.s f5, f20, f9, f4, rdn # perform operation
fmsub.s f5, f20, f9, f4, rmm # perform operation
fmsub.s f5, f20, f9, f4, rne # perform operation
fmsub.s f5, f20, f9, f4, rtz # perform operation
fmsub.s f5, f20, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f20, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f20, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x28, 0xab045f6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x98bc9e5f # load x3 with value 0x98bc9e5f
sw x3, 0(x2) # store 0x98bc9e5f in memory
flw f7, 0(x2) # load 0x98bc9e5f from memory into f7
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmsub.s f28, f2, f7, f16, dyn # perform operation
fmsub.s f28, f2, f7, f16, rdn # perform operation
fmsub.s f28, f2, f7, f16, rmm # perform operation
fmsub.s f28, f2, f7, f16, rne # perform operation
fmsub.s f28, f2, f7, f16, rtz # perform operation
fmsub.s f28, f2, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x13, 0x7e35918f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x4da1d328 # load x3 with value 0x4da1d328
sw x3, 0(x2) # store 0x4da1d328 in memory
flw f12, 0(x2) # load 0x4da1d328 from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmsub.s f13, f11, f12, f7, dyn # perform operation
fmsub.s f13, f11, f12, f7, rdn # perform operation
fmsub.s f13, f11, f12, f7, rmm # perform operation
fmsub.s f13, f11, f12, f7, rne # perform operation
fmsub.s f13, f11, f12, f7, rtz # perform operation
fmsub.s f13, f11, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f11, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f11, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x24, 0x1a753165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x30cbca34 # load x3 with value 0x30cbca34
sw x3, 0(x2) # store 0x30cbca34 in memory
flw f3, 0(x2) # load 0x30cbca34 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fmsub.s f24, f26, f3, f4, dyn # perform operation
fmsub.s f24, f26, f3, f4, rdn # perform operation
fmsub.s f24, f26, f3, f4, rmm # perform operation
fmsub.s f24, f26, f3, f4, rne # perform operation
fmsub.s f24, f26, f3, f4, rtz # perform operation
fmsub.s f24, f26, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x17, 0x3c08a6ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xe00e15ae # load x3 with value 0xe00e15ae
sw x3, 0(x2) # store 0xe00e15ae in memory
flw f21, 0(x2) # load 0xe00e15ae from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmsub.s f17, f13, f21, f25, dyn # perform operation
fmsub.s f17, f13, f21, f25, rdn # perform operation
fmsub.s f17, f13, f21, f25, rmm # perform operation
fmsub.s f17, f13, f21, f25, rne # perform operation
fmsub.s f17, f13, f21, f25, rtz # perform operation
fmsub.s f17, f13, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f13, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f13, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f13, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f13, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f13, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x31, 0x7a17dbe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0xa3feeaff # load x3 with value 0xa3feeaff
sw x3, 0(x2) # store 0xa3feeaff in memory
flw f13, 0(x2) # load 0xa3feeaff from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fmsub.s f31, f11, f13, f2, dyn # perform operation
fmsub.s f31, f11, f13, f2, rdn # perform operation
fmsub.s f31, f11, f13, f2, rmm # perform operation
fmsub.s f31, f11, f13, f2, rne # perform operation
fmsub.s f31, f11, f13, f2, rtz # perform operation
fmsub.s f31, f11, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f11, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f11, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x7, 0xc5359327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0xe436e5e8 # load x3 with value 0xe436e5e8
sw x3, 0(x2) # store 0xe436e5e8 in memory
flw f1, 0(x2) # load 0xe436e5e8 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmsub.s f7, f27, f1, f25, dyn # perform operation
fmsub.s f7, f27, f1, f25, rdn # perform operation
fmsub.s f7, f27, f1, f25, rmm # perform operation
fmsub.s f7, f27, f1, f25, rne # perform operation
fmsub.s f7, f27, f1, f25, rtz # perform operation
fmsub.s f7, f27, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f27, f1, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x18, 0x2529b63a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x54a2f933 # load x3 with value 0x54a2f933
sw x3, 0(x2) # store 0x54a2f933 in memory
flw f20, 0(x2) # load 0x54a2f933 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmsub.s f18, f5, f20, f25, dyn # perform operation
fmsub.s f18, f5, f20, f25, rdn # perform operation
fmsub.s f18, f5, f20, f25, rmm # perform operation
fmsub.s f18, f5, f20, f25, rne # perform operation
fmsub.s f18, f5, f20, f25, rtz # perform operation
fmsub.s f18, f5, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f5, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f5, f20, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x8, 0xa80206a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x5e784e84 # load x3 with value 0x5e784e84
sw x3, 0(x2) # store 0x5e784e84 in memory
flw f6, 0(x2) # load 0x5e784e84 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmsub.s f8, f15, f6, f25, dyn # perform operation
fmsub.s f8, f15, f6, f25, rdn # perform operation
fmsub.s f8, f15, f6, f25, rmm # perform operation
fmsub.s f8, f15, f6, f25, rne # perform operation
fmsub.s f8, f15, f6, f25, rtz # perform operation
fmsub.s f8, f15, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x4, 0xc897168c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xfbc831eb # load x3 with value 0xfbc831eb
sw x3, 0(x2) # store 0xfbc831eb in memory
flw f7, 0(x2) # load 0xfbc831eb from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fmsub.s f4, f20, f7, f3, dyn # perform operation
fmsub.s f4, f20, f7, f3, rdn # perform operation
fmsub.s f4, f20, f7, f3, rmm # perform operation
fmsub.s f4, f20, f7, f3, rne # perform operation
fmsub.s f4, f20, f7, f3, rtz # perform operation
fmsub.s f4, f20, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f20, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f20, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x3, 0xe421c01f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x32c88cc0 # load x3 with value 0x32c88cc0
sw x3, 0(x2) # store 0x32c88cc0 in memory
flw f8, 0(x2) # load 0x32c88cc0 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fmsub.s f3, f14, f8, f30, dyn # perform operation
fmsub.s f3, f14, f8, f30, rdn # perform operation
fmsub.s f3, f14, f8, f30, rmm # perform operation
fmsub.s f3, f14, f8, f30, rne # perform operation
fmsub.s f3, f14, f8, f30, rtz # perform operation
fmsub.s f3, f14, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f14, f8, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x19, 0xa8898284 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xff020f4c # load x3 with value 0xff020f4c
sw x3, 0(x2) # store 0xff020f4c in memory
flw f30, 0(x2) # load 0xff020f4c from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
fmsub.s f19, f20, f30, f4, dyn # perform operation
fmsub.s f19, f20, f30, f4, rdn # perform operation
fmsub.s f19, f20, f30, f4, rmm # perform operation
fmsub.s f19, f20, f30, f4, rne # perform operation
fmsub.s f19, f20, f30, f4, rtz # perform operation
fmsub.s f19, f20, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f20, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f20, f30, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x25, 0x8e7ab3cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x741798c3 # load x3 with value 0x741798c3
sw x3, 0(x2) # store 0x741798c3 in memory
flw f29, 0(x2) # load 0x741798c3 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmsub.s f25, f11, f29, f14, dyn # perform operation
fmsub.s f25, f11, f29, f14, rdn # perform operation
fmsub.s f25, f11, f29, f14, rmm # perform operation
fmsub.s f25, f11, f29, f14, rne # perform operation
fmsub.s f25, f11, f29, f14, rtz # perform operation
fmsub.s f25, f11, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f29, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x25, 0xf9d16db8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x5ca30bc2 # load x3 with value 0x5ca30bc2
sw x3, 0(x2) # store 0x5ca30bc2 in memory
flw f19, 0(x2) # load 0x5ca30bc2 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fmsub.s f25, f17, f19, f10, dyn # perform operation
fmsub.s f25, f17, f19, f10, rdn # perform operation
fmsub.s f25, f17, f19, f10, rmm # perform operation
fmsub.s f25, f17, f19, f10, rne # perform operation
fmsub.s f25, f17, f19, f10, rtz # perform operation
fmsub.s f25, f17, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f17, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f17, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x8, 0xf511338a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x4e270b87 # load x3 with value 0x4e270b87
sw x3, 0(x2) # store 0x4e270b87 in memory
flw f2, 0(x2) # load 0x4e270b87 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f8, f17, f2, f26, dyn # perform operation
fmsub.s f8, f17, f2, f26, rdn # perform operation
fmsub.s f8, f17, f2, f26, rmm # perform operation
fmsub.s f8, f17, f2, f26, rne # perform operation
fmsub.s f8, f17, f2, f26, rtz # perform operation
fmsub.s f8, f17, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f17, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x17, 0x22a26eaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x1b1a1c33 # load x3 with value 0x1b1a1c33
sw x3, 0(x2) # store 0x1b1a1c33 in memory
flw f18, 0(x2) # load 0x1b1a1c33 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmsub.s f17, f19, f18, f29, dyn # perform operation
fmsub.s f17, f19, f18, f29, rdn # perform operation
fmsub.s f17, f19, f18, f29, rmm # perform operation
fmsub.s f17, f19, f18, f29, rne # perform operation
fmsub.s f17, f19, f18, f29, rtz # perform operation
fmsub.s f17, f19, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f19, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f19, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f19, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f19, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f19, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x19, 0xa504d0dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x717b1286 # load x3 with value 0x717b1286
sw x3, 0(x2) # store 0x717b1286 in memory
flw f22, 0(x2) # load 0x717b1286 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmsub.s f19, f17, f22, f25, dyn # perform operation
fmsub.s f19, f17, f22, f25, rdn # perform operation
fmsub.s f19, f17, f22, f25, rmm # perform operation
fmsub.s f19, f17, f22, f25, rne # perform operation
fmsub.s f19, f17, f22, f25, rtz # perform operation
fmsub.s f19, f17, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f17, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f17, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x8, 0x6ea0790f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x3512ba5a # load x3 with value 0x3512ba5a
sw x3, 0(x2) # store 0x3512ba5a in memory
flw f24, 0(x2) # load 0x3512ba5a from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fmsub.s f8, f15, f24, f19, dyn # perform operation
fmsub.s f8, f15, f24, f19, rdn # perform operation
fmsub.s f8, f15, f24, f19, rmm # perform operation
fmsub.s f8, f15, f24, f19, rne # perform operation
fmsub.s f8, f15, f24, f19, rtz # perform operation
fmsub.s f8, f15, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f15, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f15, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x30, 0xe5c36fa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x435c54f4 # load x3 with value 0x435c54f4
sw x3, 0(x2) # store 0x435c54f4 in memory
flw f7, 0(x2) # load 0x435c54f4 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmsub.s f30, f5, f7, f26, dyn # perform operation
fmsub.s f30, f5, f7, f26, rdn # perform operation
fmsub.s f30, f5, f7, f26, rmm # perform operation
fmsub.s f30, f5, f7, f26, rne # perform operation
fmsub.s f30, f5, f7, f26, rtz # perform operation
fmsub.s f30, f5, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f5, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f5, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x2, 0xba9bab8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x7c5533c2 # load x3 with value 0x7c5533c2
sw x3, 0(x2) # store 0x7c5533c2 in memory
flw f18, 0(x2) # load 0x7c5533c2 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmsub.s f2, f7, f18, f24, dyn # perform operation
fmsub.s f2, f7, f18, f24, rdn # perform operation
fmsub.s f2, f7, f18, f24, rmm # perform operation
fmsub.s f2, f7, f18, f24, rne # perform operation
fmsub.s f2, f7, f18, f24, rtz # perform operation
fmsub.s f2, f7, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f7, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x13, 0xe9e64df1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0xffb88f67 # load x3 with value 0xffb88f67
sw x3, 0(x2) # store 0xffb88f67 in memory
flw f31, 0(x2) # load 0xffb88f67 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fmsub.s f13, f10, f31, f14, dyn # perform operation
fmsub.s f13, f10, f31, f14, rdn # perform operation
fmsub.s f13, f10, f31, f14, rmm # perform operation
fmsub.s f13, f10, f31, f14, rne # perform operation
fmsub.s f13, f10, f31, f14, rtz # perform operation
fmsub.s f13, f10, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f10, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f10, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f10, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f10, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f10, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x5, 0x77ae996b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x1705b3d7 # load x3 with value 0x1705b3d7
sw x3, 0(x2) # store 0x1705b3d7 in memory
flw f14, 0(x2) # load 0x1705b3d7 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fmsub.s f5, f2, f14, f7, dyn # perform operation
fmsub.s f5, f2, f14, f7, rdn # perform operation
fmsub.s f5, f2, f14, f7, rmm # perform operation
fmsub.s f5, f2, f14, f7, rne # perform operation
fmsub.s f5, f2, f14, f7, rtz # perform operation
fmsub.s f5, f2, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f2, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f2, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f2, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f2, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f2, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x23, 0xc6d6361c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0xc07a2cc6 # load x3 with value 0xc07a2cc6
sw x3, 0(x2) # store 0xc07a2cc6 in memory
flw f25, 0(x2) # load 0xc07a2cc6 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmsub.s f23, f18, f25, f3, dyn # perform operation
fmsub.s f23, f18, f25, f3, rdn # perform operation
fmsub.s f23, f18, f25, f3, rmm # perform operation
fmsub.s f23, f18, f25, f3, rne # perform operation
fmsub.s f23, f18, f25, f3, rtz # perform operation
fmsub.s f23, f18, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f18, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f18, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f18, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f18, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f18, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x28, 0x5fad8678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x72e1a785 # load x3 with value 0x72e1a785
sw x3, 0(x2) # store 0x72e1a785 in memory
flw f16, 0(x2) # load 0x72e1a785 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmsub.s f28, f20, f16, f1, dyn # perform operation
fmsub.s f28, f20, f16, f1, rdn # perform operation
fmsub.s f28, f20, f16, f1, rmm # perform operation
fmsub.s f28, f20, f16, f1, rne # perform operation
fmsub.s f28, f20, f16, f1, rtz # perform operation
fmsub.s f28, f20, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f20, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f20, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x2, 0x43b8e165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x22635138 # load x3 with value 0x22635138
sw x3, 0(x2) # store 0x22635138 in memory
flw f30, 0(x2) # load 0x22635138 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmsub.s f2, f6, f30, f27, dyn # perform operation
fmsub.s f2, f6, f30, f27, rdn # perform operation
fmsub.s f2, f6, f30, f27, rmm # perform operation
fmsub.s f2, f6, f30, f27, rne # perform operation
fmsub.s f2, f6, f30, f27, rtz # perform operation
fmsub.s f2, f6, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f6, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f6, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f6, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f6, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f6, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x16, 0xf7db27fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xd699109b # load x3 with value 0xd699109b
sw x3, 0(x2) # store 0xd699109b in memory
flw f11, 0(x2) # load 0xd699109b from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmsub.s f16, f27, f11, f6, dyn # perform operation
fmsub.s f16, f27, f11, f6, rdn # perform operation
fmsub.s f16, f27, f11, f6, rmm # perform operation
fmsub.s f16, f27, f11, f6, rne # perform operation
fmsub.s f16, f27, f11, f6, rtz # perform operation
fmsub.s f16, f27, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f27, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f27, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x8, 0xa2c70f3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xa6f72ec8 # load x3 with value 0xa6f72ec8
sw x3, 0(x2) # store 0xa6f72ec8 in memory
flw f5, 0(x2) # load 0xa6f72ec8 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fmsub.s f8, f7, f5, f31, dyn # perform operation
fmsub.s f8, f7, f5, f31, rdn # perform operation
fmsub.s f8, f7, f5, f31, rmm # perform operation
fmsub.s f8, f7, f5, f31, rne # perform operation
fmsub.s f8, f7, f5, f31, rtz # perform operation
fmsub.s f8, f7, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f7, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f7, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x25, 0x939a4f21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x83161845 # load x3 with value 0x83161845
sw x3, 0(x2) # store 0x83161845 in memory
flw f27, 0(x2) # load 0x83161845 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmsub.s f25, f13, f27, f29, dyn # perform operation
fmsub.s f25, f13, f27, f29, rdn # perform operation
fmsub.s f25, f13, f27, f29, rmm # perform operation
fmsub.s f25, f13, f27, f29, rne # perform operation
fmsub.s f25, f13, f27, f29, rtz # perform operation
fmsub.s f25, f13, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f13, f27, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x15, 0x1d972c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x43b63e95 # load x3 with value 0x43b63e95
sw x3, 0(x2) # store 0x43b63e95 in memory
flw f29, 0(x2) # load 0x43b63e95 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fmsub.s f15, f20, f29, f25, dyn # perform operation
fmsub.s f15, f20, f29, f25, rdn # perform operation
fmsub.s f15, f20, f29, f25, rmm # perform operation
fmsub.s f15, f20, f29, f25, rne # perform operation
fmsub.s f15, f20, f29, f25, rtz # perform operation
fmsub.s f15, f20, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f20, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f20, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x4, 0x39fc56db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xe7571786 # load x3 with value 0xe7571786
sw x3, 0(x2) # store 0xe7571786 in memory
flw f16, 0(x2) # load 0xe7571786 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmsub.s f4, f20, f16, f11, dyn # perform operation
fmsub.s f4, f20, f16, f11, rdn # perform operation
fmsub.s f4, f20, f16, f11, rmm # perform operation
fmsub.s f4, f20, f16, f11, rne # perform operation
fmsub.s f4, f20, f16, f11, rtz # perform operation
fmsub.s f4, f20, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f20, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f20, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x25, 0xd6586769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x66ff7bc2 # load x3 with value 0x66ff7bc2
sw x3, 0(x2) # store 0x66ff7bc2 in memory
flw f11, 0(x2) # load 0x66ff7bc2 from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmsub.s f25, f7, f11, f8, dyn # perform operation
fmsub.s f25, f7, f11, f8, rdn # perform operation
fmsub.s f25, f7, f11, f8, rmm # perform operation
fmsub.s f25, f7, f11, f8, rne # perform operation
fmsub.s f25, f7, f11, f8, rtz # perform operation
fmsub.s f25, f7, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f7, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f7, f11, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x30, 0x71fc09f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x384751bb # load x3 with value 0x384751bb
sw x3, 0(x2) # store 0x384751bb in memory
flw f19, 0(x2) # load 0x384751bb from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmsub.s f30, f31, f19, f5, dyn # perform operation
fmsub.s f30, f31, f19, f5, rdn # perform operation
fmsub.s f30, f31, f19, f5, rmm # perform operation
fmsub.s f30, f31, f19, f5, rne # perform operation
fmsub.s f30, f31, f19, f5, rtz # perform operation
fmsub.s f30, f31, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f31, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f31, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x20, 0x8faa9b63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xd33d0e85 # load x3 with value 0xd33d0e85
sw x3, 0(x2) # store 0xd33d0e85 in memory
flw f4, 0(x2) # load 0xd33d0e85 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fmsub.s f20, f31, f4, f28, dyn # perform operation
fmsub.s f20, f31, f4, f28, rdn # perform operation
fmsub.s f20, f31, f4, f28, rmm # perform operation
fmsub.s f20, f31, f4, f28, rne # perform operation
fmsub.s f20, f31, f4, f28, rtz # perform operation
fmsub.s f20, f31, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f31, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f31, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f31, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f31, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f31, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x10, 0x332593e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xbcf29c25 # load x3 with value 0xbcf29c25
sw x3, 0(x2) # store 0xbcf29c25 in memory
flw f1, 0(x2) # load 0xbcf29c25 from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmsub.s f10, f25, f1, f29, dyn # perform operation
fmsub.s f10, f25, f1, f29, rdn # perform operation
fmsub.s f10, f25, f1, f29, rmm # perform operation
fmsub.s f10, f25, f1, f29, rne # perform operation
fmsub.s f10, f25, f1, f29, rtz # perform operation
fmsub.s f10, f25, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f25, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f25, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f25, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f25, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f25, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x17, 0xf1c99a3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x03bd48a1 # load x3 with value 0x03bd48a1
sw x3, 0(x2) # store 0x03bd48a1 in memory
flw f18, 0(x2) # load 0x03bd48a1 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fmsub.s f17, f25, f18, f30, dyn # perform operation
fmsub.s f17, f25, f18, f30, rdn # perform operation
fmsub.s f17, f25, f18, f30, rmm # perform operation
fmsub.s f17, f25, f18, f30, rne # perform operation
fmsub.s f17, f25, f18, f30, rtz # perform operation
fmsub.s f17, f25, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x19, 0x50f1efe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x358dc1a8 # load x3 with value 0x358dc1a8
sw x3, 0(x2) # store 0x358dc1a8 in memory
flw f14, 0(x2) # load 0x358dc1a8 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
fmsub.s f19, f13, f14, f10, dyn # perform operation
fmsub.s f19, f13, f14, f10, rdn # perform operation
fmsub.s f19, f13, f14, f10, rmm # perform operation
fmsub.s f19, f13, f14, f10, rne # perform operation
fmsub.s f19, f13, f14, f10, rtz # perform operation
fmsub.s f19, f13, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f13, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f13, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f13, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f13, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f13, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x4, 0x4b2aa4f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x80b557f7 # load x3 with value 0x80b557f7
sw x3, 0(x2) # store 0x80b557f7 in memory
flw f30, 0(x2) # load 0x80b557f7 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmsub.s f4, f10, f30, f23, dyn # perform operation
fmsub.s f4, f10, f30, f23, rdn # perform operation
fmsub.s f4, f10, f30, f23, rmm # perform operation
fmsub.s f4, f10, f30, f23, rne # perform operation
fmsub.s f4, f10, f30, f23, rtz # perform operation
fmsub.s f4, f10, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f10, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f10, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f10, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f10, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f10, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x21, 0xc2439493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x17b1d6cb # load x3 with value 0x17b1d6cb
sw x3, 0(x2) # store 0x17b1d6cb in memory
flw f20, 0(x2) # load 0x17b1d6cb from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f21, f19, f20, f30, dyn # perform operation
fmsub.s f21, f19, f20, f30, rdn # perform operation
fmsub.s f21, f19, f20, f30, rmm # perform operation
fmsub.s f21, f19, f20, f30, rne # perform operation
fmsub.s f21, f19, f20, f30, rtz # perform operation
fmsub.s f21, f19, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f19, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f19, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f19, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f19, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f19, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x11, 0x88a791be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x74943079 # load x3 with value 0x74943079
sw x3, 0(x2) # store 0x74943079 in memory
flw f3, 0(x2) # load 0x74943079 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmsub.s f11, f21, f3, f12, dyn # perform operation
fmsub.s f11, f21, f3, f12, rdn # perform operation
fmsub.s f11, f21, f3, f12, rmm # perform operation
fmsub.s f11, f21, f3, f12, rne # perform operation
fmsub.s f11, f21, f3, f12, rtz # perform operation
fmsub.s f11, f21, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f21, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f21, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x17, 0x307554a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x34c9af22 # load x3 with value 0x34c9af22
sw x3, 0(x2) # store 0x34c9af22 in memory
flw f13, 0(x2) # load 0x34c9af22 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmsub.s f17, f28, f13, f6, dyn # perform operation
fmsub.s f17, f28, f13, f6, rdn # perform operation
fmsub.s f17, f28, f13, f6, rmm # perform operation
fmsub.s f17, f28, f13, f6, rne # perform operation
fmsub.s f17, f28, f13, f6, rtz # perform operation
fmsub.s f17, f28, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f28, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f28, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x25, 0xdcb071c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0xea92603d # load x3 with value 0xea92603d
sw x3, 0(x2) # store 0xea92603d in memory
flw f18, 0(x2) # load 0xea92603d from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmsub.s f25, f11, f18, f29, dyn # perform operation
fmsub.s f25, f11, f18, f29, rdn # perform operation
fmsub.s f25, f11, f18, f29, rmm # perform operation
fmsub.s f25, f11, f18, f29, rne # perform operation
fmsub.s f25, f11, f18, f29, rtz # perform operation
fmsub.s f25, f11, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f11, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f11, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x13, 0x51d86f5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x715d1d49 # load x3 with value 0x715d1d49
sw x3, 0(x2) # store 0x715d1d49 in memory
flw f24, 0(x2) # load 0x715d1d49 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmsub.s f13, f5, f24, f1, dyn # perform operation
fmsub.s f13, f5, f24, f1, rdn # perform operation
fmsub.s f13, f5, f24, f1, rmm # perform operation
fmsub.s f13, f5, f24, f1, rne # perform operation
fmsub.s f13, f5, f24, f1, rtz # perform operation
fmsub.s f13, f5, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f5, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f5, f24, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x20, 0x1cd8db73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xa0c11ce6 # load x3 with value 0xa0c11ce6
sw x3, 0(x2) # store 0xa0c11ce6 in memory
flw f21, 0(x2) # load 0xa0c11ce6 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmsub.s f20, f17, f21, f31, dyn # perform operation
fmsub.s f20, f17, f21, f31, rdn # perform operation
fmsub.s f20, f17, f21, f31, rmm # perform operation
fmsub.s f20, f17, f21, f31, rne # perform operation
fmsub.s f20, f17, f21, f31, rtz # perform operation
fmsub.s f20, f17, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f17, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f17, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f17, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f17, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f17, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x6, 0x921f039d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x06b86ff3 # load x3 with value 0x06b86ff3
sw x3, 0(x2) # store 0x06b86ff3 in memory
flw f18, 0(x2) # load 0x06b86ff3 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fmsub.s f6, f14, f18, f7, dyn # perform operation
fmsub.s f6, f14, f18, f7, rdn # perform operation
fmsub.s f6, f14, f18, f7, rmm # perform operation
fmsub.s f6, f14, f18, f7, rne # perform operation
fmsub.s f6, f14, f18, f7, rtz # perform operation
fmsub.s f6, f14, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f14, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f14, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f14, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f14, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f14, f18, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x26, 0xe6f85f4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0xd388cd53 # load x3 with value 0xd388cd53
sw x3, 0(x2) # store 0xd388cd53 in memory
flw f6, 0(x2) # load 0xd388cd53 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmsub.s f26, f10, f6, f1, dyn # perform operation
fmsub.s f26, f10, f6, f1, rdn # perform operation
fmsub.s f26, f10, f6, f1, rmm # perform operation
fmsub.s f26, f10, f6, f1, rne # perform operation
fmsub.s f26, f10, f6, f1, rtz # perform operation
fmsub.s f26, f10, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f10, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f10, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x12, 0x03634c88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x24585041 # load x3 with value 0x24585041
sw x3, 0(x2) # store 0x24585041 in memory
flw f14, 0(x2) # load 0x24585041 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fmsub.s f12, f18, f14, f6, dyn # perform operation
fmsub.s f12, f18, f14, f6, rdn # perform operation
fmsub.s f12, f18, f14, f6, rmm # perform operation
fmsub.s f12, f18, f14, f6, rne # perform operation
fmsub.s f12, f18, f14, f6, rtz # perform operation
fmsub.s f12, f18, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f18, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x4, 0x56986e0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xe41829f6 # load x3 with value 0xe41829f6
sw x3, 0(x2) # store 0xe41829f6 in memory
flw f31, 0(x2) # load 0xe41829f6 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmsub.s f4, f7, f31, f1, dyn # perform operation
fmsub.s f4, f7, f31, f1, rdn # perform operation
fmsub.s f4, f7, f31, f1, rmm # perform operation
fmsub.s f4, f7, f31, f1, rne # perform operation
fmsub.s f4, f7, f31, f1, rtz # perform operation
fmsub.s f4, f7, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f7, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f7, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x3, 0x0fae0afd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0xd88e870d # load x3 with value 0xd88e870d
sw x3, 0(x2) # store 0xd88e870d in memory
flw f15, 0(x2) # load 0xd88e870d from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmsub.s f3, f29, f15, f20, dyn # perform operation
fmsub.s f3, f29, f15, f20, rdn # perform operation
fmsub.s f3, f29, f15, f20, rmm # perform operation
fmsub.s f3, f29, f15, f20, rne # perform operation
fmsub.s f3, f29, f15, f20, rtz # perform operation
fmsub.s f3, f29, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f29, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x4, 0x0e86739c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x716770fe # load x3 with value 0x716770fe
sw x3, 0(x2) # store 0x716770fe in memory
flw f14, 0(x2) # load 0x716770fe from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmsub.s f4, f9, f14, f17, dyn # perform operation
fmsub.s f4, f9, f14, f17, rdn # perform operation
fmsub.s f4, f9, f14, f17, rmm # perform operation
fmsub.s f4, f9, f14, f17, rne # perform operation
fmsub.s f4, f9, f14, f17, rtz # perform operation
fmsub.s f4, f9, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f9, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f9, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x19, 0x0379821e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x7447f8d7 # load x3 with value 0x7447f8d7
sw x3, 0(x2) # store 0x7447f8d7 in memory
flw f21, 0(x2) # load 0x7447f8d7 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmsub.s f19, f9, f21, f15, dyn # perform operation
fmsub.s f19, f9, f21, f15, rdn # perform operation
fmsub.s f19, f9, f21, f15, rmm # perform operation
fmsub.s f19, f9, f21, f15, rne # perform operation
fmsub.s f19, f9, f21, f15, rtz # perform operation
fmsub.s f19, f9, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f9, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f9, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x3, 0xc4aa89b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x9b05391b # load x3 with value 0x9b05391b
sw x3, 0(x2) # store 0x9b05391b in memory
flw f1, 0(x2) # load 0x9b05391b from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fmsub.s f3, f13, f1, f20, dyn # perform operation
fmsub.s f3, f13, f1, f20, rdn # perform operation
fmsub.s f3, f13, f1, f20, rmm # perform operation
fmsub.s f3, f13, f1, f20, rne # perform operation
fmsub.s f3, f13, f1, f20, rtz # perform operation
fmsub.s f3, f13, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f13, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f13, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f13, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f13, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f13, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x29, 0xd8ba5eb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xec5e21ae # load x3 with value 0xec5e21ae
sw x3, 0(x2) # store 0xec5e21ae in memory
flw f1, 0(x2) # load 0xec5e21ae from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fmsub.s f29, f26, f1, f5, dyn # perform operation
fmsub.s f29, f26, f1, f5, rdn # perform operation
fmsub.s f29, f26, f1, f5, rmm # perform operation
fmsub.s f29, f26, f1, f5, rne # perform operation
fmsub.s f29, f26, f1, f5, rtz # perform operation
fmsub.s f29, f26, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f26, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x9, 0x98d3dfbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
li x3, 0xe02aea53 # load x3 with value 0xe02aea53
sw x3, 0(x2) # store 0xe02aea53 in memory
flw f21, 0(x2) # load 0xe02aea53 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fmsub.s f9, f24, f21, f25, dyn # perform operation
fmsub.s f9, f24, f21, f25, rdn # perform operation
fmsub.s f9, f24, f21, f25, rmm # perform operation
fmsub.s f9, f24, f21, f25, rne # perform operation
fmsub.s f9, f24, f21, f25, rtz # perform operation
fmsub.s f9, f24, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f24, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f24, f21, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x13, 0x4f2e967c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x61b2bda9 # load x3 with value 0x61b2bda9
sw x3, 0(x2) # store 0x61b2bda9 in memory
flw f30, 0(x2) # load 0x61b2bda9 from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmsub.s f13, f21, f30, f18, dyn # perform operation
fmsub.s f13, f21, f30, f18, rdn # perform operation
fmsub.s f13, f21, f30, f18, rmm # perform operation
fmsub.s f13, f21, f30, f18, rne # perform operation
fmsub.s f13, f21, f30, f18, rtz # perform operation
fmsub.s f13, f21, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f21, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f21, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f21, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f21, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f21, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x24, 0x289f98da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xbae9f380 # load x3 with value 0xbae9f380
sw x3, 0(x2) # store 0xbae9f380 in memory
flw f18, 0(x2) # load 0xbae9f380 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fmsub.s f24, f16, f18, f23, dyn # perform operation
fmsub.s f24, f16, f18, f23, rdn # perform operation
fmsub.s f24, f16, f18, f23, rmm # perform operation
fmsub.s f24, f16, f18, f23, rne # perform operation
fmsub.s f24, f16, f18, f23, rtz # perform operation
fmsub.s f24, f16, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x20, 0xd7711309 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x4b7a5c93 # load x3 with value 0x4b7a5c93
sw x3, 0(x2) # store 0x4b7a5c93 in memory
flw f22, 0(x2) # load 0x4b7a5c93 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmsub.s f20, f30, f22, f19, dyn # perform operation
fmsub.s f20, f30, f22, f19, rdn # perform operation
fmsub.s f20, f30, f22, f19, rmm # perform operation
fmsub.s f20, f30, f22, f19, rne # perform operation
fmsub.s f20, f30, f22, f19, rtz # perform operation
fmsub.s f20, f30, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x16, 0x9cb9af34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x028c737a # load x3 with value 0x028c737a
sw x3, 0(x2) # store 0x028c737a in memory
flw f18, 0(x2) # load 0x028c737a from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmsub.s f16, f28, f18, f20, dyn # perform operation
fmsub.s f16, f28, f18, f20, rdn # perform operation
fmsub.s f16, f28, f18, f20, rmm # perform operation
fmsub.s f16, f28, f18, f20, rne # perform operation
fmsub.s f16, f28, f18, f20, rtz # perform operation
fmsub.s f16, f28, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f28, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f28, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x8, 0xee0235ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0xdec60ad4 # load x3 with value 0xdec60ad4
sw x3, 0(x2) # store 0xdec60ad4 in memory
flw f25, 0(x2) # load 0xdec60ad4 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fmsub.s f8, f19, f25, f26, dyn # perform operation
fmsub.s f8, f19, f25, f26, rdn # perform operation
fmsub.s f8, f19, f25, f26, rmm # perform operation
fmsub.s f8, f19, f25, f26, rne # perform operation
fmsub.s f8, f19, f25, f26, rtz # perform operation
fmsub.s f8, f19, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x17, 0x5ea05871 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0xf711bce8 # load x3 with value 0xf711bce8
sw x3, 0(x2) # store 0xf711bce8 in memory
flw f25, 0(x2) # load 0xf711bce8 from memory into f25
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmsub.s f17, f23, f25, f30, dyn # perform operation
fmsub.s f17, f23, f25, f30, rdn # perform operation
fmsub.s f17, f23, f25, f30, rmm # perform operation
fmsub.s f17, f23, f25, f30, rne # perform operation
fmsub.s f17, f23, f25, f30, rtz # perform operation
fmsub.s f17, f23, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f23, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f23, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f23, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f23, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f23, f25, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x2, 0x184bec6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0xfb1ac9c8 # load x3 with value 0xfb1ac9c8
sw x3, 0(x2) # store 0xfb1ac9c8 in memory
flw f11, 0(x2) # load 0xfb1ac9c8 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmsub.s f2, f22, f11, f27, dyn # perform operation
fmsub.s f2, f22, f11, f27, rdn # perform operation
fmsub.s f2, f22, f11, f27, rmm # perform operation
fmsub.s f2, f22, f11, f27, rne # perform operation
fmsub.s f2, f22, f11, f27, rtz # perform operation
fmsub.s f2, f22, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f22, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f22, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x3, 0xe31d5905 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x89c607a9 # load x3 with value 0x89c607a9
sw x3, 0(x2) # store 0x89c607a9 in memory
flw f19, 0(x2) # load 0x89c607a9 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmsub.s f3, f6, f19, f10, dyn # perform operation
fmsub.s f3, f6, f19, f10, rdn # perform operation
fmsub.s f3, f6, f19, f10, rmm # perform operation
fmsub.s f3, f6, f19, f10, rne # perform operation
fmsub.s f3, f6, f19, f10, rtz # perform operation
fmsub.s f3, f6, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f6, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f6, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x17, 0x7fa8e135 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xed3ad66d # load x3 with value 0xed3ad66d
sw x3, 0(x2) # store 0xed3ad66d in memory
flw f18, 0(x2) # load 0xed3ad66d from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmsub.s f17, f25, f18, f20, dyn # perform operation
fmsub.s f17, f25, f18, f20, rdn # perform operation
fmsub.s f17, f25, f18, f20, rmm # perform operation
fmsub.s f17, f25, f18, f20, rne # perform operation
fmsub.s f17, f25, f18, f20, rtz # perform operation
fmsub.s f17, f25, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f25, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f25, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x6, 0xbccec05e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x68780366 # load x3 with value 0x68780366
sw x3, 0(x2) # store 0x68780366 in memory
flw f11, 0(x2) # load 0x68780366 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmsub.s f6, f20, f11, f26, dyn # perform operation
fmsub.s f6, f20, f11, f26, rdn # perform operation
fmsub.s f6, f20, f11, f26, rmm # perform operation
fmsub.s f6, f20, f11, f26, rne # perform operation
fmsub.s f6, f20, f11, f26, rtz # perform operation
fmsub.s f6, f20, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f20, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f20, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x20, 0xb09ee040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x1785043b # load x3 with value 0x1785043b
sw x3, 0(x2) # store 0x1785043b in memory
flw f1, 0(x2) # load 0x1785043b from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fmsub.s f20, f26, f1, f17, dyn # perform operation
fmsub.s f20, f26, f1, f17, rdn # perform operation
fmsub.s f20, f26, f1, f17, rmm # perform operation
fmsub.s f20, f26, f1, f17, rne # perform operation
fmsub.s f20, f26, f1, f17, rtz # perform operation
fmsub.s f20, f26, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f26, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f26, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x6, 0x582e1839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x52929981 # load x3 with value 0x52929981
sw x3, 0(x2) # store 0x52929981 in memory
flw f18, 0(x2) # load 0x52929981 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
fmsub.s f6, f26, f18, f23, dyn # perform operation
fmsub.s f6, f26, f18, f23, rdn # perform operation
fmsub.s f6, f26, f18, f23, rmm # perform operation
fmsub.s f6, f26, f18, f23, rne # perform operation
fmsub.s f6, f26, f18, f23, rtz # perform operation
fmsub.s f6, f26, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f26, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f26, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f26, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f26, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f26, f18, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x24, 0x77ced2de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0x26f2590a # load x3 with value 0x26f2590a
sw x3, 0(x2) # store 0x26f2590a in memory
flw f6, 0(x2) # load 0x26f2590a from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmsub.s f24, f9, f6, f12, dyn # perform operation
fmsub.s f24, f9, f6, f12, rdn # perform operation
fmsub.s f24, f9, f6, f12, rmm # perform operation
fmsub.s f24, f9, f6, f12, rne # perform operation
fmsub.s f24, f9, f6, f12, rtz # perform operation
fmsub.s f24, f9, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f9, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f9, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f9, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f9, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f9, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x17, 0xd889f83c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x0bc9ab64 # load x3 with value 0x0bc9ab64
sw x3, 0(x2) # store 0x0bc9ab64 in memory
flw f21, 0(x2) # load 0x0bc9ab64 from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
fmsub.s f17, f10, f21, f4, dyn # perform operation
fmsub.s f17, f10, f21, f4, rdn # perform operation
fmsub.s f17, f10, f21, f4, rmm # perform operation
fmsub.s f17, f10, f21, f4, rne # perform operation
fmsub.s f17, f10, f21, f4, rtz # perform operation
fmsub.s f17, f10, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f10, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f10, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f10, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f10, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f10, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x8, 0x045730e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xe02942c8 # load x3 with value 0xe02942c8
sw x3, 0(x2) # store 0xe02942c8 in memory
flw f4, 0(x2) # load 0xe02942c8 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmsub.s f8, f28, f4, f19, dyn # perform operation
fmsub.s f8, f28, f4, f19, rdn # perform operation
fmsub.s f8, f28, f4, f19, rmm # perform operation
fmsub.s f8, f28, f4, f19, rne # perform operation
fmsub.s f8, f28, f4, f19, rtz # perform operation
fmsub.s f8, f28, f4, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f28, f4, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f28, f4, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x2, 0xd5bffaf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x3868368f # load x3 with value 0x3868368f
sw x3, 0(x2) # store 0x3868368f in memory
flw f26, 0(x2) # load 0x3868368f from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmsub.s f2, f31, f26, f10, dyn # perform operation
fmsub.s f2, f31, f26, f10, rdn # perform operation
fmsub.s f2, f31, f26, f10, rmm # perform operation
fmsub.s f2, f31, f26, f10, rne # perform operation
fmsub.s f2, f31, f26, f10, rtz # perform operation
fmsub.s f2, f31, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f31, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f31, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x5, 0x2f557f28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xd68c762f # load x3 with value 0xd68c762f
sw x3, 0(x2) # store 0xd68c762f in memory
flw f24, 0(x2) # load 0xd68c762f from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmsub.s f5, f7, f24, f25, dyn # perform operation
fmsub.s f5, f7, f24, f25, rdn # perform operation
fmsub.s f5, f7, f24, f25, rmm # perform operation
fmsub.s f5, f7, f24, f25, rne # perform operation
fmsub.s f5, f7, f24, f25, rtz # perform operation
fmsub.s f5, f7, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f7, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f7, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x11, 0xbd097e69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x8c5c0d16 # load x3 with value 0x8c5c0d16
sw x3, 0(x2) # store 0x8c5c0d16 in memory
flw f28, 0(x2) # load 0x8c5c0d16 from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fmsub.s f11, f30, f28, f31, dyn # perform operation
fmsub.s f11, f30, f28, f31, rdn # perform operation
fmsub.s f11, f30, f28, f31, rmm # perform operation
fmsub.s f11, f30, f28, f31, rne # perform operation
fmsub.s f11, f30, f28, f31, rtz # perform operation
fmsub.s f11, f30, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f30, f28, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x27, 0x45ab8b6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0xe9571662 # load x3 with value 0xe9571662
sw x3, 0(x2) # store 0xe9571662 in memory
flw f12, 0(x2) # load 0xe9571662 from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmsub.s f27, f13, f12, f30, dyn # perform operation
fmsub.s f27, f13, f12, f30, rdn # perform operation
fmsub.s f27, f13, f12, f30, rmm # perform operation
fmsub.s f27, f13, f12, f30, rne # perform operation
fmsub.s f27, f13, f12, f30, rtz # perform operation
fmsub.s f27, f13, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f13, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x2, 0xeacd99ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x62f893e7 # load x3 with value 0x62f893e7
sw x3, 0(x2) # store 0x62f893e7 in memory
flw f8, 0(x2) # load 0x62f893e7 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmsub.s f2, f3, f8, f18, dyn # perform operation
fmsub.s f2, f3, f8, f18, rdn # perform operation
fmsub.s f2, f3, f8, f18, rmm # perform operation
fmsub.s f2, f3, f8, f18, rne # perform operation
fmsub.s f2, f3, f8, f18, rtz # perform operation
fmsub.s f2, f3, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f3, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x25, 0x5a8eb4c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x44774a08 # load x3 with value 0x44774a08
sw x3, 0(x2) # store 0x44774a08 in memory
flw f16, 0(x2) # load 0x44774a08 from memory into f16
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmsub.s f25, f29, f16, f30, dyn # perform operation
fmsub.s f25, f29, f16, f30, rdn # perform operation
fmsub.s f25, f29, f16, f30, rmm # perform operation
fmsub.s f25, f29, f16, f30, rne # perform operation
fmsub.s f25, f29, f16, f30, rtz # perform operation
fmsub.s f25, f29, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f29, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x22, 0x13dcbf97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x226c834b # load x3 with value 0x226c834b
sw x3, 0(x2) # store 0x226c834b in memory
flw f12, 0(x2) # load 0x226c834b from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmsub.s f22, f9, f12, f23, dyn # perform operation
fmsub.s f22, f9, f12, f23, rdn # perform operation
fmsub.s f22, f9, f12, f23, rmm # perform operation
fmsub.s f22, f9, f12, f23, rne # perform operation
fmsub.s f22, f9, f12, f23, rtz # perform operation
fmsub.s f22, f9, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f9, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f9, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x24, 0x367f94b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xe8ff683d # load x3 with value 0xe8ff683d
sw x3, 0(x2) # store 0xe8ff683d in memory
flw f2, 0(x2) # load 0xe8ff683d from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmsub.s f24, f16, f2, f19, dyn # perform operation
fmsub.s f24, f16, f2, f19, rdn # perform operation
fmsub.s f24, f16, f2, f19, rmm # perform operation
fmsub.s f24, f16, f2, f19, rne # perform operation
fmsub.s f24, f16, f2, f19, rtz # perform operation
fmsub.s f24, f16, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f16, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x21, 0x1c59837c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xc50801e9 # load x3 with value 0xc50801e9
sw x3, 0(x2) # store 0xc50801e9 in memory
flw f7, 0(x2) # load 0xc50801e9 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmsub.s f21, f1, f7, f28, dyn # perform operation
fmsub.s f21, f1, f7, f28, rdn # perform operation
fmsub.s f21, f1, f7, f28, rmm # perform operation
fmsub.s f21, f1, f7, f28, rne # perform operation
fmsub.s f21, f1, f7, f28, rtz # perform operation
fmsub.s f21, f1, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f1, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f1, f7, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x19, 0x2f263988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x371790ff # load x3 with value 0x371790ff
sw x3, 0(x2) # store 0x371790ff in memory
flw f13, 0(x2) # load 0x371790ff from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmsub.s f19, f1, f13, f21, dyn # perform operation
fmsub.s f19, f1, f13, f21, rdn # perform operation
fmsub.s f19, f1, f13, f21, rmm # perform operation
fmsub.s f19, f1, f13, f21, rne # perform operation
fmsub.s f19, f1, f13, f21, rtz # perform operation
fmsub.s f19, f1, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f1, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f1, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x26, 0x1f6b9aa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x3f2b70f0 # load x3 with value 0x3f2b70f0
sw x3, 0(x2) # store 0x3f2b70f0 in memory
flw f10, 0(x2) # load 0x3f2b70f0 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmsub.s f26, f28, f10, f1, dyn # perform operation
fmsub.s f26, f28, f10, f1, rdn # perform operation
fmsub.s f26, f28, f10, f1, rmm # perform operation
fmsub.s f26, f28, f10, f1, rne # perform operation
fmsub.s f26, f28, f10, f1, rtz # perform operation
fmsub.s f26, f28, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f28, f10, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x14, 0xd7aa37c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xd900960e # load x3 with value 0xd900960e
sw x3, 0(x2) # store 0xd900960e in memory
flw f10, 0(x2) # load 0xd900960e from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmsub.s f14, f17, f10, f11, dyn # perform operation
fmsub.s f14, f17, f10, f11, rdn # perform operation
fmsub.s f14, f17, f10, f11, rmm # perform operation
fmsub.s f14, f17, f10, f11, rne # perform operation
fmsub.s f14, f17, f10, f11, rtz # perform operation
fmsub.s f14, f17, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f17, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f17, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f17, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f17, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f17, f10, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x19, 0x7452da3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xe087bc57 # load x3 with value 0xe087bc57
sw x3, 0(x2) # store 0xe087bc57 in memory
flw f27, 0(x2) # load 0xe087bc57 from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmsub.s f19, f10, f27, f26, dyn # perform operation
fmsub.s f19, f10, f27, f26, rdn # perform operation
fmsub.s f19, f10, f27, f26, rmm # perform operation
fmsub.s f19, f10, f27, f26, rne # perform operation
fmsub.s f19, f10, f27, f26, rtz # perform operation
fmsub.s f19, f10, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f10, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f10, f27, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x4, 0xcc7ab050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0xb4a303ce # load x3 with value 0xb4a303ce
sw x3, 0(x2) # store 0xb4a303ce in memory
flw f17, 0(x2) # load 0xb4a303ce from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmsub.s f4, f9, f17, f20, dyn # perform operation
fmsub.s f4, f9, f17, f20, rdn # perform operation
fmsub.s f4, f9, f17, f20, rmm # perform operation
fmsub.s f4, f9, f17, f20, rne # perform operation
fmsub.s f4, f9, f17, f20, rtz # perform operation
fmsub.s f4, f9, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f9, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f9, f17, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x9, 0x68659d6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x82567640 # load x3 with value 0x82567640
sw x3, 0(x2) # store 0x82567640 in memory
flw f14, 0(x2) # load 0x82567640 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmsub.s f9, f15, f14, f26, dyn # perform operation
fmsub.s f9, f15, f14, f26, rdn # perform operation
fmsub.s f9, f15, f14, f26, rmm # perform operation
fmsub.s f9, f15, f14, f26, rne # perform operation
fmsub.s f9, f15, f14, f26, rtz # perform operation
fmsub.s f9, f15, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f15, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f15, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f15, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f15, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f15, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x8, 0xae97d9d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xe1f4e2d1 # load x3 with value 0xe1f4e2d1
sw x3, 0(x2) # store 0xe1f4e2d1 in memory
flw f11, 0(x2) # load 0xe1f4e2d1 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fmsub.s f8, f5, f11, f31, dyn # perform operation
fmsub.s f8, f5, f11, f31, rdn # perform operation
fmsub.s f8, f5, f11, f31, rmm # perform operation
fmsub.s f8, f5, f11, f31, rne # perform operation
fmsub.s f8, f5, f11, f31, rtz # perform operation
fmsub.s f8, f5, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f11, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x2, 0xf6f1af6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x1ce7d537 # load x3 with value 0x1ce7d537
sw x3, 0(x2) # store 0x1ce7d537 in memory
flw f23, 0(x2) # load 0x1ce7d537 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmsub.s f2, f6, f23, f9, dyn # perform operation
fmsub.s f2, f6, f23, f9, rdn # perform operation
fmsub.s f2, f6, f23, f9, rmm # perform operation
fmsub.s f2, f6, f23, f9, rne # perform operation
fmsub.s f2, f6, f23, f9, rtz # perform operation
fmsub.s f2, f6, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f6, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x20, 0xaee19d90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x6f80f0e6 # load x3 with value 0x6f80f0e6
sw x3, 0(x2) # store 0x6f80f0e6 in memory
flw f23, 0(x2) # load 0x6f80f0e6 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmsub.s f20, f6, f23, f17, dyn # perform operation
fmsub.s f20, f6, f23, f17, rdn # perform operation
fmsub.s f20, f6, f23, f17, rmm # perform operation
fmsub.s f20, f6, f23, f17, rne # perform operation
fmsub.s f20, f6, f23, f17, rtz # perform operation
fmsub.s f20, f6, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f6, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f6, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f6, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f6, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f6, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x11, 0xf3a2a383 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xadfeb064 # load x3 with value 0xadfeb064
sw x3, 0(x2) # store 0xadfeb064 in memory
flw f30, 0(x2) # load 0xadfeb064 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f11, f16, f30, f19, dyn # perform operation
fmsub.s f11, f16, f30, f19, rdn # perform operation
fmsub.s f11, f16, f30, f19, rmm # perform operation
fmsub.s f11, f16, f30, f19, rne # perform operation
fmsub.s f11, f16, f30, f19, rtz # perform operation
fmsub.s f11, f16, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f16, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f16, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f16, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f16, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f16, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x31, 0x315aebb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xe9b6bb4d # load x3 with value 0xe9b6bb4d
sw x3, 0(x2) # store 0xe9b6bb4d in memory
flw f1, 0(x2) # load 0xe9b6bb4d from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmsub.s f31, f30, f1, f28, dyn # perform operation
fmsub.s f31, f30, f1, f28, rdn # perform operation
fmsub.s f31, f30, f1, f28, rmm # perform operation
fmsub.s f31, f30, f1, f28, rne # perform operation
fmsub.s f31, f30, f1, f28, rtz # perform operation
fmsub.s f31, f30, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f30, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f30, f1, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x13, 0xced06655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x898cd006 # load x3 with value 0x898cd006
sw x3, 0(x2) # store 0x898cd006 in memory
flw f24, 0(x2) # load 0x898cd006 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
fmsub.s f13, f14, f24, f15, dyn # perform operation
fmsub.s f13, f14, f24, f15, rdn # perform operation
fmsub.s f13, f14, f24, f15, rmm # perform operation
fmsub.s f13, f14, f24, f15, rne # perform operation
fmsub.s f13, f14, f24, f15, rtz # perform operation
fmsub.s f13, f14, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f14, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f14, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x26, 0x77cf8b82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x222282e0 # load x3 with value 0x222282e0
sw x3, 0(x2) # store 0x222282e0 in memory
flw f18, 0(x2) # load 0x222282e0 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fmsub.s f26, f23, f18, f30, dyn # perform operation
fmsub.s f26, f23, f18, f30, rdn # perform operation
fmsub.s f26, f23, f18, f30, rmm # perform operation
fmsub.s f26, f23, f18, f30, rne # perform operation
fmsub.s f26, f23, f18, f30, rtz # perform operation
fmsub.s f26, f23, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f23, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f23, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x13, 0x6fda237c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x8267df53 # load x3 with value 0x8267df53
sw x3, 0(x2) # store 0x8267df53 in memory
flw f14, 0(x2) # load 0x8267df53 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
fmsub.s f13, f17, f14, f4, dyn # perform operation
fmsub.s f13, f17, f14, f4, rdn # perform operation
fmsub.s f13, f17, f14, f4, rmm # perform operation
fmsub.s f13, f17, f14, f4, rne # perform operation
fmsub.s f13, f17, f14, f4, rtz # perform operation
fmsub.s f13, f17, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f17, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x3, 0x5c4fac36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0x1ddedd24 # load x3 with value 0x1ddedd24
sw x3, 0(x2) # store 0x1ddedd24 in memory
flw f26, 0(x2) # load 0x1ddedd24 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmsub.s f3, f22, f26, f21, dyn # perform operation
fmsub.s f3, f22, f26, f21, rdn # perform operation
fmsub.s f3, f22, f26, f21, rmm # perform operation
fmsub.s f3, f22, f26, f21, rne # perform operation
fmsub.s f3, f22, f26, f21, rtz # perform operation
fmsub.s f3, f22, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f22, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f22, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x8, 0x62e0b15c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xc230e7ba # load x3 with value 0xc230e7ba
sw x3, 0(x2) # store 0xc230e7ba in memory
flw f22, 0(x2) # load 0xc230e7ba from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmsub.s f8, f19, f22, f9, dyn # perform operation
fmsub.s f8, f19, f22, f9, rdn # perform operation
fmsub.s f8, f19, f22, f9, rmm # perform operation
fmsub.s f8, f19, f22, f9, rne # perform operation
fmsub.s f8, f19, f22, f9, rtz # perform operation
fmsub.s f8, f19, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f19, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f19, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f19, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f19, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f19, f22, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x7, 0x9ecbc704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x85e3ca05 # load x3 with value 0x85e3ca05
sw x3, 0(x2) # store 0x85e3ca05 in memory
flw f13, 0(x2) # load 0x85e3ca05 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmsub.s f7, f20, f13, f2, dyn # perform operation
fmsub.s f7, f20, f13, f2, rdn # perform operation
fmsub.s f7, f20, f13, f2, rmm # perform operation
fmsub.s f7, f20, f13, f2, rne # perform operation
fmsub.s f7, f20, f13, f2, rtz # perform operation
fmsub.s f7, f20, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f20, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f20, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x22, 0xf6e74689 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x1ddef4e6 # load x3 with value 0x1ddef4e6
sw x3, 0(x2) # store 0x1ddef4e6 in memory
flw f20, 0(x2) # load 0x1ddef4e6 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
fmsub.s f22, f31, f20, f15, dyn # perform operation
fmsub.s f22, f31, f20, f15, rdn # perform operation
fmsub.s f22, f31, f20, f15, rmm # perform operation
fmsub.s f22, f31, f20, f15, rne # perform operation
fmsub.s f22, f31, f20, f15, rtz # perform operation
fmsub.s f22, f31, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f31, f20, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x4, 0xaf635b67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x5ea3fae6 # load x3 with value 0x5ea3fae6
sw x3, 0(x2) # store 0x5ea3fae6 in memory
flw f12, 0(x2) # load 0x5ea3fae6 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmsub.s f4, f17, f12, f26, dyn # perform operation
fmsub.s f4, f17, f12, f26, rdn # perform operation
fmsub.s f4, f17, f12, f26, rmm # perform operation
fmsub.s f4, f17, f12, f26, rne # perform operation
fmsub.s f4, f17, f12, f26, rtz # perform operation
fmsub.s f4, f17, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f17, f12, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x15, 0x4d2ff10c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x09cbd7b0 # load x3 with value 0x09cbd7b0
sw x3, 0(x2) # store 0x09cbd7b0 in memory
flw f17, 0(x2) # load 0x09cbd7b0 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmsub.s f15, f8, f17, f19, dyn # perform operation
fmsub.s f15, f8, f17, f19, rdn # perform operation
fmsub.s f15, f8, f17, f19, rmm # perform operation
fmsub.s f15, f8, f17, f19, rne # perform operation
fmsub.s f15, f8, f17, f19, rtz # perform operation
fmsub.s f15, f8, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f8, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f8, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f8, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f8, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f8, f17, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x7, 0x7a2dfe63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xd711ec3b # load x3 with value 0xd711ec3b
sw x3, 0(x2) # store 0xd711ec3b in memory
flw f14, 0(x2) # load 0xd711ec3b from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmsub.s f7, f6, f14, f10, dyn # perform operation
fmsub.s f7, f6, f14, f10, rdn # perform operation
fmsub.s f7, f6, f14, f10, rmm # perform operation
fmsub.s f7, f6, f14, f10, rne # perform operation
fmsub.s f7, f6, f14, f10, rtz # perform operation
fmsub.s f7, f6, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f6, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f6, f14, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x4, 0xfe6b786d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x49be3f55 # load x3 with value 0x49be3f55
sw x3, 0(x2) # store 0x49be3f55 in memory
flw f5, 0(x2) # load 0x49be3f55 from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmsub.s f4, f3, f5, f19, dyn # perform operation
fmsub.s f4, f3, f5, f19, rdn # perform operation
fmsub.s f4, f3, f5, f19, rmm # perform operation
fmsub.s f4, f3, f5, f19, rne # perform operation
fmsub.s f4, f3, f5, f19, rtz # perform operation
fmsub.s f4, f3, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f3, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x31, 0xd774d159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x535d79a7 # load x3 with value 0x535d79a7
sw x3, 0(x2) # store 0x535d79a7 in memory
flw f17, 0(x2) # load 0x535d79a7 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmsub.s f31, f10, f17, f1, dyn # perform operation
fmsub.s f31, f10, f17, f1, rdn # perform operation
fmsub.s f31, f10, f17, f1, rmm # perform operation
fmsub.s f31, f10, f17, f1, rne # perform operation
fmsub.s f31, f10, f17, f1, rtz # perform operation
fmsub.s f31, f10, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f10, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x20, 0xeb304b82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x9fb2d316 # load x3 with value 0x9fb2d316
sw x3, 0(x2) # store 0x9fb2d316 in memory
flw f29, 0(x2) # load 0x9fb2d316 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fmsub.s f20, f5, f29, f1, dyn # perform operation
fmsub.s f20, f5, f29, f1, rdn # perform operation
fmsub.s f20, f5, f29, f1, rmm # perform operation
fmsub.s f20, f5, f29, f1, rne # perform operation
fmsub.s f20, f5, f29, f1, rtz # perform operation
fmsub.s f20, f5, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f5, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f5, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f5, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f5, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f5, f29, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x8, 0x61ccc21d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0xbaa19841 # load x3 with value 0xbaa19841
sw x3, 0(x2) # store 0xbaa19841 in memory
flw f9, 0(x2) # load 0xbaa19841 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmsub.s f8, f25, f9, f28, dyn # perform operation
fmsub.s f8, f25, f9, f28, rdn # perform operation
fmsub.s f8, f25, f9, f28, rmm # perform operation
fmsub.s f8, f25, f9, f28, rne # perform operation
fmsub.s f8, f25, f9, f28, rtz # perform operation
fmsub.s f8, f25, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f25, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f25, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x11, 0xb729ad60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xf154fd73 # load x3 with value 0xf154fd73
sw x3, 0(x2) # store 0xf154fd73 in memory
flw f18, 0(x2) # load 0xf154fd73 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmsub.s f11, f2, f18, f26, dyn # perform operation
fmsub.s f11, f2, f18, f26, rdn # perform operation
fmsub.s f11, f2, f18, f26, rmm # perform operation
fmsub.s f11, f2, f18, f26, rne # perform operation
fmsub.s f11, f2, f18, f26, rtz # perform operation
fmsub.s f11, f2, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f2, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f2, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x13, 0xf7cc6abc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x47a9a186 # load x3 with value 0x47a9a186
sw x3, 0(x2) # store 0x47a9a186 in memory
flw f27, 0(x2) # load 0x47a9a186 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f13, f29, f27, f20, dyn # perform operation
fmsub.s f13, f29, f27, f20, rdn # perform operation
fmsub.s f13, f29, f27, f20, rmm # perform operation
fmsub.s f13, f29, f27, f20, rne # perform operation
fmsub.s f13, f29, f27, f20, rtz # perform operation
fmsub.s f13, f29, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f29, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f29, f27, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x2, 0xae2f260c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x9d18d15e # load x3 with value 0x9d18d15e
sw x3, 0(x2) # store 0x9d18d15e in memory
flw f9, 0(x2) # load 0x9d18d15e from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fmsub.s f2, f15, f9, f13, dyn # perform operation
fmsub.s f2, f15, f9, f13, rdn # perform operation
fmsub.s f2, f15, f9, f13, rmm # perform operation
fmsub.s f2, f15, f9, f13, rne # perform operation
fmsub.s f2, f15, f9, f13, rtz # perform operation
fmsub.s f2, f15, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f15, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f15, f9, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x11, 0x75cfcacc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0xc49a6d78 # load x3 with value 0xc49a6d78
sw x3, 0(x2) # store 0xc49a6d78 in memory
flw f2, 0(x2) # load 0xc49a6d78 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmsub.s f11, f22, f2, f28, dyn # perform operation
fmsub.s f11, f22, f2, f28, rdn # perform operation
fmsub.s f11, f22, f2, f28, rmm # perform operation
fmsub.s f11, f22, f2, f28, rne # perform operation
fmsub.s f11, f22, f2, f28, rtz # perform operation
fmsub.s f11, f22, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f22, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f22, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x4, 0xbd941787 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0xe106d373 # load x3 with value 0xe106d373
sw x3, 0(x2) # store 0xe106d373 in memory
flw f30, 0(x2) # load 0xe106d373 from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmsub.s f4, f29, f30, f28, dyn # perform operation
fmsub.s f4, f29, f30, f28, rdn # perform operation
fmsub.s f4, f29, f30, f28, rmm # perform operation
fmsub.s f4, f29, f30, f28, rne # perform operation
fmsub.s f4, f29, f30, f28, rtz # perform operation
fmsub.s f4, f29, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f29, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f29, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x6, 0x78e42697 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0xc4f9ca90 # load x3 with value 0xc4f9ca90
sw x3, 0(x2) # store 0xc4f9ca90 in memory
flw f17, 0(x2) # load 0xc4f9ca90 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fmsub.s f6, f3, f17, f25, dyn # perform operation
fmsub.s f6, f3, f17, f25, rdn # perform operation
fmsub.s f6, f3, f17, f25, rmm # perform operation
fmsub.s f6, f3, f17, f25, rne # perform operation
fmsub.s f6, f3, f17, f25, rtz # perform operation
fmsub.s f6, f3, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f3, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f3, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x21, 0x3c98efe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0xa70cb09a # load x3 with value 0xa70cb09a
sw x3, 0(x2) # store 0xa70cb09a in memory
flw f11, 0(x2) # load 0xa70cb09a from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fmsub.s f21, f6, f11, f23, dyn # perform operation
fmsub.s f21, f6, f11, f23, rdn # perform operation
fmsub.s f21, f6, f11, f23, rmm # perform operation
fmsub.s f21, f6, f11, f23, rne # perform operation
fmsub.s f21, f6, f11, f23, rtz # perform operation
fmsub.s f21, f6, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f6, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f6, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x2, 0x20f19405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x92ad538a # load x3 with value 0x92ad538a
sw x3, 0(x2) # store 0x92ad538a in memory
flw f26, 0(x2) # load 0x92ad538a from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmsub.s f2, f29, f26, f3, dyn # perform operation
fmsub.s f2, f29, f26, f3, rdn # perform operation
fmsub.s f2, f29, f26, f3, rmm # perform operation
fmsub.s f2, f29, f26, f3, rne # perform operation
fmsub.s f2, f29, f26, f3, rtz # perform operation
fmsub.s f2, f29, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f29, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f29, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x6, 0x06fddc45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x324f75c2 # load x3 with value 0x324f75c2
sw x3, 0(x2) # store 0x324f75c2 in memory
flw f14, 0(x2) # load 0x324f75c2 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmsub.s f6, f1, f14, f3, dyn # perform operation
fmsub.s f6, f1, f14, f3, rdn # perform operation
fmsub.s f6, f1, f14, f3, rmm # perform operation
fmsub.s f6, f1, f14, f3, rne # perform operation
fmsub.s f6, f1, f14, f3, rtz # perform operation
fmsub.s f6, f1, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f1, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f1, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x7, 0xdc6acf7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x2a711bfe # load x3 with value 0x2a711bfe
sw x3, 0(x2) # store 0x2a711bfe in memory
flw f2, 0(x2) # load 0x2a711bfe from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmsub.s f7, f12, f2, f19, dyn # perform operation
fmsub.s f7, f12, f2, f19, rdn # perform operation
fmsub.s f7, f12, f2, f19, rmm # perform operation
fmsub.s f7, f12, f2, f19, rne # perform operation
fmsub.s f7, f12, f2, f19, rtz # perform operation
fmsub.s f7, f12, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f12, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f12, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x1, 0x35d404db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x05299483 # load x3 with value 0x05299483
sw x3, 0(x2) # store 0x05299483 in memory
flw f25, 0(x2) # load 0x05299483 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmsub.s f1, f14, f25, f26, dyn # perform operation
fmsub.s f1, f14, f25, f26, rdn # perform operation
fmsub.s f1, f14, f25, f26, rmm # perform operation
fmsub.s f1, f14, f25, f26, rne # perform operation
fmsub.s f1, f14, f25, f26, rtz # perform operation
fmsub.s f1, f14, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f14, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x14, 0x25c482f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xb54a9c25 # load x3 with value 0xb54a9c25
sw x3, 0(x2) # store 0xb54a9c25 in memory
flw f3, 0(x2) # load 0xb54a9c25 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmsub.s f14, f8, f3, f22, dyn # perform operation
fmsub.s f14, f8, f3, f22, rdn # perform operation
fmsub.s f14, f8, f3, f22, rmm # perform operation
fmsub.s f14, f8, f3, f22, rne # perform operation
fmsub.s f14, f8, f3, f22, rtz # perform operation
fmsub.s f14, f8, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f8, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x11, 0x29c4a051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x39d0fa7e # load x3 with value 0x39d0fa7e
sw x3, 0(x2) # store 0x39d0fa7e in memory
flw f22, 0(x2) # load 0x39d0fa7e from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmsub.s f11, f17, f22, f23, dyn # perform operation
fmsub.s f11, f17, f22, f23, rdn # perform operation
fmsub.s f11, f17, f22, f23, rmm # perform operation
fmsub.s f11, f17, f22, f23, rne # perform operation
fmsub.s f11, f17, f22, f23, rtz # perform operation
fmsub.s f11, f17, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f17, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f17, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x16, 0x0c18fe85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0xe34d8ec0 # load x3 with value 0xe34d8ec0
sw x3, 0(x2) # store 0xe34d8ec0 in memory
flw f29, 0(x2) # load 0xe34d8ec0 from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
fmsub.s f16, f12, f29, f20, dyn # perform operation
fmsub.s f16, f12, f29, f20, rdn # perform operation
fmsub.s f16, f12, f29, f20, rmm # perform operation
fmsub.s f16, f12, f29, f20, rne # perform operation
fmsub.s f16, f12, f29, f20, rtz # perform operation
fmsub.s f16, f12, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f12, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f12, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f12, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f12, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f12, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x7, 0x5d9fd4e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x5ce403d8 # load x3 with value 0x5ce403d8
sw x3, 0(x2) # store 0x5ce403d8 in memory
flw f13, 0(x2) # load 0x5ce403d8 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmsub.s f7, f29, f13, f22, dyn # perform operation
fmsub.s f7, f29, f13, f22, rdn # perform operation
fmsub.s f7, f29, f13, f22, rmm # perform operation
fmsub.s f7, f29, f13, f22, rne # perform operation
fmsub.s f7, f29, f13, f22, rtz # perform operation
fmsub.s f7, f29, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f29, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f29, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x1, 0xa27b40c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x48f009cd # load x3 with value 0x48f009cd
sw x3, 0(x2) # store 0x48f009cd in memory
flw f20, 0(x2) # load 0x48f009cd from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmsub.s f1, f9, f20, f8, dyn # perform operation
fmsub.s f1, f9, f20, f8, rdn # perform operation
fmsub.s f1, f9, f20, f8, rmm # perform operation
fmsub.s f1, f9, f20, f8, rne # perform operation
fmsub.s f1, f9, f20, f8, rtz # perform operation
fmsub.s f1, f9, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f9, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f9, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x7, 0xee23b7ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x10a1d113 # load x3 with value 0x10a1d113
sw x3, 0(x2) # store 0x10a1d113 in memory
flw f12, 0(x2) # load 0x10a1d113 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fmsub.s f7, f8, f12, f22, dyn # perform operation
fmsub.s f7, f8, f12, f22, rdn # perform operation
fmsub.s f7, f8, f12, f22, rmm # perform operation
fmsub.s f7, f8, f12, f22, rne # perform operation
fmsub.s f7, f8, f12, f22, rtz # perform operation
fmsub.s f7, f8, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f8, f12, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x16, 0x60e711fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0xdf7f5dd7 # load x3 with value 0xdf7f5dd7
sw x3, 0(x2) # store 0xdf7f5dd7 in memory
flw f30, 0(x2) # load 0xdf7f5dd7 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmsub.s f16, f11, f30, f7, dyn # perform operation
fmsub.s f16, f11, f30, f7, rdn # perform operation
fmsub.s f16, f11, f30, f7, rmm # perform operation
fmsub.s f16, f11, f30, f7, rne # perform operation
fmsub.s f16, f11, f30, f7, rtz # perform operation
fmsub.s f16, f11, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f11, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f11, f30, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x10, 0xe021944d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x6acbdb6f # load x3 with value 0x6acbdb6f
sw x3, 0(x2) # store 0x6acbdb6f in memory
flw f30, 0(x2) # load 0x6acbdb6f from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmsub.s f10, f23, f30, f6, dyn # perform operation
fmsub.s f10, f23, f30, f6, rdn # perform operation
fmsub.s f10, f23, f30, f6, rmm # perform operation
fmsub.s f10, f23, f30, f6, rne # perform operation
fmsub.s f10, f23, f30, f6, rtz # perform operation
fmsub.s f10, f23, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f23, f30, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x14, 0x6b47da1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x3cc34a0e # load x3 with value 0x3cc34a0e
sw x3, 0(x2) # store 0x3cc34a0e in memory
flw f12, 0(x2) # load 0x3cc34a0e from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fmsub.s f14, f20, f12, f24, dyn # perform operation
fmsub.s f14, f20, f12, f24, rdn # perform operation
fmsub.s f14, f20, f12, f24, rmm # perform operation
fmsub.s f14, f20, f12, f24, rne # perform operation
fmsub.s f14, f20, f12, f24, rtz # perform operation
fmsub.s f14, f20, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f20, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x2, 0x58f0b9c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x52ba5a90 # load x3 with value 0x52ba5a90
sw x3, 0(x2) # store 0x52ba5a90 in memory
flw f18, 0(x2) # load 0x52ba5a90 from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fmsub.s f2, f24, f18, f21, dyn # perform operation
fmsub.s f2, f24, f18, f21, rdn # perform operation
fmsub.s f2, f24, f18, f21, rmm # perform operation
fmsub.s f2, f24, f18, f21, rne # perform operation
fmsub.s f2, f24, f18, f21, rtz # perform operation
fmsub.s f2, f24, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f24, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f24, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f24, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f24, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f24, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x17, 0xb22123b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x7231dfeb # load x3 with value 0x7231dfeb
sw x3, 0(x2) # store 0x7231dfeb in memory
flw f27, 0(x2) # load 0x7231dfeb from memory into f27
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fmsub.s f17, f30, f27, f16, dyn # perform operation
fmsub.s f17, f30, f27, f16, rdn # perform operation
fmsub.s f17, f30, f27, f16, rmm # perform operation
fmsub.s f17, f30, f27, f16, rne # perform operation
fmsub.s f17, f30, f27, f16, rtz # perform operation
fmsub.s f17, f30, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f17, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f17, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f17, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f17, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f17, f30, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x29, 0x695fafb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0xf820a53d # load x3 with value 0xf820a53d
sw x3, 0(x2) # store 0xf820a53d in memory
flw f25, 0(x2) # load 0xf820a53d from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmsub.s f29, f2, f25, f5, dyn # perform operation
fmsub.s f29, f2, f25, f5, rdn # perform operation
fmsub.s f29, f2, f25, f5, rmm # perform operation
fmsub.s f29, f2, f25, f5, rne # perform operation
fmsub.s f29, f2, f25, f5, rtz # perform operation
fmsub.s f29, f2, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f2, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f2, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x22, 0x8435c2ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x8b26eef4 # load x3 with value 0x8b26eef4
sw x3, 0(x2) # store 0x8b26eef4 in memory
flw f5, 0(x2) # load 0x8b26eef4 from memory into f5
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fmsub.s f22, f16, f5, f28, dyn # perform operation
fmsub.s f22, f16, f5, f28, rdn # perform operation
fmsub.s f22, f16, f5, f28, rmm # perform operation
fmsub.s f22, f16, f5, f28, rne # perform operation
fmsub.s f22, f16, f5, f28, rtz # perform operation
fmsub.s f22, f16, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f22, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f22, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f22, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f22, f16, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f22, f16, f5, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x14, 0xe1445c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0xd3b695ed # load x3 with value 0xd3b695ed
sw x3, 0(x2) # store 0xd3b695ed in memory
flw f13, 0(x2) # load 0xd3b695ed from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmsub.s f14, f18, f13, f11, dyn # perform operation
fmsub.s f14, f18, f13, f11, rdn # perform operation
fmsub.s f14, f18, f13, f11, rmm # perform operation
fmsub.s f14, f18, f13, f11, rne # perform operation
fmsub.s f14, f18, f13, f11, rtz # perform operation
fmsub.s f14, f18, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f18, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x24, 0x2cc9de7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x7df990b0 # load x3 with value 0x7df990b0
sw x3, 0(x2) # store 0x7df990b0 in memory
flw f31, 0(x2) # load 0x7df990b0 from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmsub.s f24, f4, f31, f15, dyn # perform operation
fmsub.s f24, f4, f31, f15, rdn # perform operation
fmsub.s f24, f4, f31, f15, rmm # perform operation
fmsub.s f24, f4, f31, f15, rne # perform operation
fmsub.s f24, f4, f31, f15, rtz # perform operation
fmsub.s f24, f4, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f4, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f4, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f4, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f4, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f4, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x4, 0xc0d65b09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x3cec089d # load x3 with value 0x3cec089d
sw x3, 0(x2) # store 0x3cec089d in memory
flw f29, 0(x2) # load 0x3cec089d from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmsub.s f4, f18, f29, f21, dyn # perform operation
fmsub.s f4, f18, f29, f21, rdn # perform operation
fmsub.s f4, f18, f29, f21, rmm # perform operation
fmsub.s f4, f18, f29, f21, rne # perform operation
fmsub.s f4, f18, f29, f21, rtz # perform operation
fmsub.s f4, f18, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f18, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f18, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x2, 0x7844c2f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0xe624d75e # load x3 with value 0xe624d75e
sw x3, 0(x2) # store 0xe624d75e in memory
flw f5, 0(x2) # load 0xe624d75e from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fmsub.s f2, f25, f5, f19, dyn # perform operation
fmsub.s f2, f25, f5, f19, rdn # perform operation
fmsub.s f2, f25, f5, f19, rmm # perform operation
fmsub.s f2, f25, f5, f19, rne # perform operation
fmsub.s f2, f25, f5, f19, rtz # perform operation
fmsub.s f2, f25, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f25, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f25, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x30, 0x98fa0bad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x1c819a06 # load x3 with value 0x1c819a06
sw x3, 0(x2) # store 0x1c819a06 in memory
flw f4, 0(x2) # load 0x1c819a06 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fmsub.s f30, f13, f4, f28, dyn # perform operation
fmsub.s f30, f13, f4, f28, rdn # perform operation
fmsub.s f30, f13, f4, f28, rmm # perform operation
fmsub.s f30, f13, f4, f28, rne # perform operation
fmsub.s f30, f13, f4, f28, rtz # perform operation
fmsub.s f30, f13, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f13, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f13, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f13, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f13, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f13, f4, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x14, 0x7565e871 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x846ef964 # load x3 with value 0x846ef964
sw x3, 0(x2) # store 0x846ef964 in memory
flw f16, 0(x2) # load 0x846ef964 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmsub.s f14, f23, f16, f30, dyn # perform operation
fmsub.s f14, f23, f16, f30, rdn # perform operation
fmsub.s f14, f23, f16, f30, rmm # perform operation
fmsub.s f14, f23, f16, f30, rne # perform operation
fmsub.s f14, f23, f16, f30, rtz # perform operation
fmsub.s f14, f23, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f23, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f23, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x23, 0x92d3fd76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xbb3b84bb # load x3 with value 0xbb3b84bb
sw x3, 0(x2) # store 0xbb3b84bb in memory
flw f11, 0(x2) # load 0xbb3b84bb from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmsub.s f23, f4, f11, f14, dyn # perform operation
fmsub.s f23, f4, f11, f14, rdn # perform operation
fmsub.s f23, f4, f11, f14, rmm # perform operation
fmsub.s f23, f4, f11, f14, rne # perform operation
fmsub.s f23, f4, f11, f14, rtz # perform operation
fmsub.s f23, f4, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f4, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f4, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f4, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f4, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f4, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x5, 0x9327ac4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x86c2a633 # load x3 with value 0x86c2a633
sw x3, 0(x2) # store 0x86c2a633 in memory
flw f1, 0(x2) # load 0x86c2a633 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fmsub.s f5, f20, f1, f29, dyn # perform operation
fmsub.s f5, f20, f1, f29, rdn # perform operation
fmsub.s f5, f20, f1, f29, rmm # perform operation
fmsub.s f5, f20, f1, f29, rne # perform operation
fmsub.s f5, f20, f1, f29, rtz # perform operation
fmsub.s f5, f20, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f20, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f20, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f20, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f20, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f20, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x24, 0x8892fef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x2a80e39e # load x3 with value 0x2a80e39e
sw x3, 0(x2) # store 0x2a80e39e in memory
flw f29, 0(x2) # load 0x2a80e39e from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmsub.s f24, f1, f29, f20, dyn # perform operation
fmsub.s f24, f1, f29, f20, rdn # perform operation
fmsub.s f24, f1, f29, f20, rmm # perform operation
fmsub.s f24, f1, f29, f20, rne # perform operation
fmsub.s f24, f1, f29, f20, rtz # perform operation
fmsub.s f24, f1, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x30, 0x0e8919ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x9afa505c # load x3 with value 0x9afa505c
sw x3, 0(x2) # store 0x9afa505c in memory
flw f16, 0(x2) # load 0x9afa505c from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmsub.s f30, f12, f16, f20, dyn # perform operation
fmsub.s f30, f12, f16, f20, rdn # perform operation
fmsub.s f30, f12, f16, f20, rmm # perform operation
fmsub.s f30, f12, f16, f20, rne # perform operation
fmsub.s f30, f12, f16, f20, rtz # perform operation
fmsub.s f30, f12, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f30, f12, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f30, f12, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f30, f12, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f30, f12, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f30, f12, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x10, 0xd7bd6246 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x4eb42b5e # load x3 with value 0x4eb42b5e
sw x3, 0(x2) # store 0x4eb42b5e in memory
flw f27, 0(x2) # load 0x4eb42b5e from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fmsub.s f10, f11, f27, f14, dyn # perform operation
fmsub.s f10, f11, f27, f14, rdn # perform operation
fmsub.s f10, f11, f27, f14, rmm # perform operation
fmsub.s f10, f11, f27, f14, rne # perform operation
fmsub.s f10, f11, f27, f14, rtz # perform operation
fmsub.s f10, f11, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f11, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f11, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f11, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f11, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f11, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x2, 0xf5bb89ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x65667aa8 # load x3 with value 0x65667aa8
sw x3, 0(x2) # store 0x65667aa8 in memory
flw f10, 0(x2) # load 0x65667aa8 from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmsub.s f2, f18, f10, f21, dyn # perform operation
fmsub.s f2, f18, f10, f21, rdn # perform operation
fmsub.s f2, f18, f10, f21, rmm # perform operation
fmsub.s f2, f18, f10, f21, rne # perform operation
fmsub.s f2, f18, f10, f21, rtz # perform operation
fmsub.s f2, f18, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f18, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f18, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f18, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f18, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f18, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x28, 0xaa9ad7b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x007d4e96 # load x3 with value 0x007d4e96
sw x3, 0(x2) # store 0x007d4e96 in memory
flw f11, 0(x2) # load 0x007d4e96 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmsub.s f28, f27, f11, f19, dyn # perform operation
fmsub.s f28, f27, f11, f19, rdn # perform operation
fmsub.s f28, f27, f11, f19, rmm # perform operation
fmsub.s f28, f27, f11, f19, rne # perform operation
fmsub.s f28, f27, f11, f19, rtz # perform operation
fmsub.s f28, f27, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f27, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f27, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x14, 0xb2cb9f00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0xe4c05a21 # load x3 with value 0xe4c05a21
sw x3, 0(x2) # store 0xe4c05a21 in memory
flw f19, 0(x2) # load 0xe4c05a21 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmsub.s f14, f25, f19, f5, dyn # perform operation
fmsub.s f14, f25, f19, f5, rdn # perform operation
fmsub.s f14, f25, f19, f5, rmm # perform operation
fmsub.s f14, f25, f19, f5, rne # perform operation
fmsub.s f14, f25, f19, f5, rtz # perform operation
fmsub.s f14, f25, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f14, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f14, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f14, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f14, f25, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f14, f25, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x18, 0x451c8ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xb970d4cc # load x3 with value 0xb970d4cc
sw x3, 0(x2) # store 0xb970d4cc in memory
flw f12, 0(x2) # load 0xb970d4cc from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fmsub.s f18, f20, f12, f1, dyn # perform operation
fmsub.s f18, f20, f12, f1, rdn # perform operation
fmsub.s f18, f20, f12, f1, rmm # perform operation
fmsub.s f18, f20, f12, f1, rne # perform operation
fmsub.s f18, f20, f12, f1, rtz # perform operation
fmsub.s f18, f20, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f20, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f20, f12, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x9, 0x38fb4414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x32d7fd50 # load x3 with value 0x32d7fd50
sw x3, 0(x2) # store 0x32d7fd50 in memory
flw f1, 0(x2) # load 0x32d7fd50 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmsub.s f9, f27, f1, f19, dyn # perform operation
fmsub.s f9, f27, f1, f19, rdn # perform operation
fmsub.s f9, f27, f1, f19, rmm # perform operation
fmsub.s f9, f27, f1, f19, rne # perform operation
fmsub.s f9, f27, f1, f19, rtz # perform operation
fmsub.s f9, f27, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f27, f1, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x16, 0xee3d5bac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x4089f31c # load x3 with value 0x4089f31c
sw x3, 0(x2) # store 0x4089f31c in memory
flw f24, 0(x2) # load 0x4089f31c from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fmsub.s f16, f3, f24, f17, dyn # perform operation
fmsub.s f16, f3, f24, f17, rdn # perform operation
fmsub.s f16, f3, f24, f17, rmm # perform operation
fmsub.s f16, f3, f24, f17, rne # perform operation
fmsub.s f16, f3, f24, f17, rtz # perform operation
fmsub.s f16, f3, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x16, 0x4415d0bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x47db2ff1 # load x3 with value 0x47db2ff1
sw x3, 0(x2) # store 0x47db2ff1 in memory
flw f10, 0(x2) # load 0x47db2ff1 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmsub.s f16, f2, f10, f9, dyn # perform operation
fmsub.s f16, f2, f10, f9, rdn # perform operation
fmsub.s f16, f2, f10, f9, rmm # perform operation
fmsub.s f16, f2, f10, f9, rne # perform operation
fmsub.s f16, f2, f10, f9, rtz # perform operation
fmsub.s f16, f2, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f2, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f2, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f2, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f2, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f2, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x18, 0xe71b5e9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xdd73a64d # load x3 with value 0xdd73a64d
sw x3, 0(x2) # store 0xdd73a64d in memory
flw f8, 0(x2) # load 0xdd73a64d from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmsub.s f18, f19, f8, f23, dyn # perform operation
fmsub.s f18, f19, f8, f23, rdn # perform operation
fmsub.s f18, f19, f8, f23, rmm # perform operation
fmsub.s f18, f19, f8, f23, rne # perform operation
fmsub.s f18, f19, f8, f23, rtz # perform operation
fmsub.s f18, f19, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f19, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f19, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x21, 0xde7c0810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0xefdbb027 # load x3 with value 0xefdbb027
sw x3, 0(x2) # store 0xefdbb027 in memory
flw f17, 0(x2) # load 0xefdbb027 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fmsub.s f21, f23, f17, f16, dyn # perform operation
fmsub.s f21, f23, f17, f16, rdn # perform operation
fmsub.s f21, f23, f17, f16, rmm # perform operation
fmsub.s f21, f23, f17, f16, rne # perform operation
fmsub.s f21, f23, f17, f16, rtz # perform operation
fmsub.s f21, f23, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f23, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f23, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x29, 0xf89edc0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xa4ebb640 # load x3 with value 0xa4ebb640
sw x3, 0(x2) # store 0xa4ebb640 in memory
flw f24, 0(x2) # load 0xa4ebb640 from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmsub.s f29, f5, f24, f25, dyn # perform operation
fmsub.s f29, f5, f24, f25, rdn # perform operation
fmsub.s f29, f5, f24, f25, rmm # perform operation
fmsub.s f29, f5, f24, f25, rne # perform operation
fmsub.s f29, f5, f24, f25, rtz # perform operation
fmsub.s f29, f5, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f5, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f5, f24, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x20, 0xf26bfeae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x52b4453e # load x3 with value 0x52b4453e
sw x3, 0(x2) # store 0x52b4453e in memory
flw f18, 0(x2) # load 0x52b4453e from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmsub.s f20, f12, f18, f30, dyn # perform operation
fmsub.s f20, f12, f18, f30, rdn # perform operation
fmsub.s f20, f12, f18, f30, rmm # perform operation
fmsub.s f20, f12, f18, f30, rne # perform operation
fmsub.s f20, f12, f18, f30, rtz # perform operation
fmsub.s f20, f12, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f12, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f12, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x28, 0xf626d829 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0xa5d56029 # load x3 with value 0xa5d56029
sw x3, 0(x2) # store 0xa5d56029 in memory
flw f29, 0(x2) # load 0xa5d56029 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmsub.s f28, f2, f29, f9, dyn # perform operation
fmsub.s f28, f2, f29, f9, rdn # perform operation
fmsub.s f28, f2, f29, f9, rmm # perform operation
fmsub.s f28, f2, f29, f9, rne # perform operation
fmsub.s f28, f2, f29, f9, rtz # perform operation
fmsub.s f28, f2, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f2, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f2, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f2, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f2, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f2, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x2, 0x8ce56834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xfbc118d5 # load x3 with value 0xfbc118d5
sw x3, 0(x2) # store 0xfbc118d5 in memory
flw f1, 0(x2) # load 0xfbc118d5 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmsub.s f2, f4, f1, f7, dyn # perform operation
fmsub.s f2, f4, f1, f7, rdn # perform operation
fmsub.s f2, f4, f1, f7, rmm # perform operation
fmsub.s f2, f4, f1, f7, rne # perform operation
fmsub.s f2, f4, f1, f7, rtz # perform operation
fmsub.s f2, f4, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f4, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f4, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x3, 0xc6f91f08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x922ff1d4 # load x3 with value 0x922ff1d4
sw x3, 0(x2) # store 0x922ff1d4 in memory
flw f17, 0(x2) # load 0x922ff1d4 from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fmsub.s f3, f4, f17, f12, dyn # perform operation
fmsub.s f3, f4, f17, f12, rdn # perform operation
fmsub.s f3, f4, f17, f12, rmm # perform operation
fmsub.s f3, f4, f17, f12, rne # perform operation
fmsub.s f3, f4, f17, f12, rtz # perform operation
fmsub.s f3, f4, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f3, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f3, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f3, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f3, f4, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f3, f4, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x8, 0x3eb5d998 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x228feabc # load x3 with value 0x228feabc
sw x3, 0(x2) # store 0x228feabc in memory
flw f7, 0(x2) # load 0x228feabc from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmsub.s f8, f1, f7, f31, dyn # perform operation
fmsub.s f8, f1, f7, f31, rdn # perform operation
fmsub.s f8, f1, f7, f31, rmm # perform operation
fmsub.s f8, f1, f7, f31, rne # perform operation
fmsub.s f8, f1, f7, f31, rtz # perform operation
fmsub.s f8, f1, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f1, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x13, 0x76bb4c9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x75e562f5 # load x3 with value 0x75e562f5
sw x3, 0(x2) # store 0x75e562f5 in memory
flw f7, 0(x2) # load 0x75e562f5 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fmsub.s f13, f10, f7, f21, dyn # perform operation
fmsub.s f13, f10, f7, f21, rdn # perform operation
fmsub.s f13, f10, f7, f21, rmm # perform operation
fmsub.s f13, f10, f7, f21, rne # perform operation
fmsub.s f13, f10, f7, f21, rtz # perform operation
fmsub.s f13, f10, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f10, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f10, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f10, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f10, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f10, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x21, 0x53de7bd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x1612e8c6 # load x3 with value 0x1612e8c6
sw x3, 0(x2) # store 0x1612e8c6 in memory
flw f4, 0(x2) # load 0x1612e8c6 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fmsub.s f21, f18, f4, f27, dyn # perform operation
fmsub.s f21, f18, f4, f27, rdn # perform operation
fmsub.s f21, f18, f4, f27, rmm # perform operation
fmsub.s f21, f18, f4, f27, rne # perform operation
fmsub.s f21, f18, f4, f27, rtz # perform operation
fmsub.s f21, f18, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f18, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f18, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f18, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f18, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f18, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x6, 0x77f5ae02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x7688820b # load x3 with value 0x7688820b
sw x3, 0(x2) # store 0x7688820b in memory
flw f29, 0(x2) # load 0x7688820b from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmsub.s f6, f5, f29, f16, dyn # perform operation
fmsub.s f6, f5, f29, f16, rdn # perform operation
fmsub.s f6, f5, f29, f16, rmm # perform operation
fmsub.s f6, f5, f29, f16, rne # perform operation
fmsub.s f6, f5, f29, f16, rtz # perform operation
fmsub.s f6, f5, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f5, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f5, f29, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x31, 0x0c171b75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x8b41e9e5 # load x3 with value 0x8b41e9e5
sw x3, 0(x2) # store 0x8b41e9e5 in memory
flw f26, 0(x2) # load 0x8b41e9e5 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fmsub.s f31, f16, f26, f12, dyn # perform operation
fmsub.s f31, f16, f26, f12, rdn # perform operation
fmsub.s f31, f16, f26, f12, rmm # perform operation
fmsub.s f31, f16, f26, f12, rne # perform operation
fmsub.s f31, f16, f26, f12, rtz # perform operation
fmsub.s f31, f16, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f16, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f16, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x25, 0x2c379593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0xc62274b8 # load x3 with value 0xc62274b8
sw x3, 0(x2) # store 0xc62274b8 in memory
flw f11, 0(x2) # load 0xc62274b8 from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fmsub.s f25, f24, f11, f18, dyn # perform operation
fmsub.s f25, f24, f11, f18, rdn # perform operation
fmsub.s f25, f24, f11, f18, rmm # perform operation
fmsub.s f25, f24, f11, f18, rne # perform operation
fmsub.s f25, f24, f11, f18, rtz # perform operation
fmsub.s f25, f24, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f24, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x4, 0xaec13c42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x0da5498e # load x3 with value 0x0da5498e
sw x3, 0(x2) # store 0x0da5498e in memory
flw f28, 0(x2) # load 0x0da5498e from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fmsub.s f4, f19, f28, f8, dyn # perform operation
fmsub.s f4, f19, f28, f8, rdn # perform operation
fmsub.s f4, f19, f28, f8, rmm # perform operation
fmsub.s f4, f19, f28, f8, rne # perform operation
fmsub.s f4, f19, f28, f8, rtz # perform operation
fmsub.s f4, f19, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f19, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x1, 0x2c47f6a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xed41f6c6 # load x3 with value 0xed41f6c6
sw x3, 0(x2) # store 0xed41f6c6 in memory
flw f21, 0(x2) # load 0xed41f6c6 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
fmsub.s f1, f11, f21, f6, dyn # perform operation
fmsub.s f1, f11, f21, f6, rdn # perform operation
fmsub.s f1, f11, f21, f6, rmm # perform operation
fmsub.s f1, f11, f21, f6, rne # perform operation
fmsub.s f1, f11, f21, f6, rtz # perform operation
fmsub.s f1, f11, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f11, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f11, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f11, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f11, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f11, f21, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x29, 0x02cdf7b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x870c2b04 # load x3 with value 0x870c2b04
sw x3, 0(x2) # store 0x870c2b04 in memory
flw f26, 0(x2) # load 0x870c2b04 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmsub.s f29, f16, f26, f28, dyn # perform operation
fmsub.s f29, f16, f26, f28, rdn # perform operation
fmsub.s f29, f16, f26, f28, rmm # perform operation
fmsub.s f29, f16, f26, f28, rne # perform operation
fmsub.s f29, f16, f26, f28, rtz # perform operation
fmsub.s f29, f16, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f16, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f16, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f16, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f16, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f16, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x20, 0x539b2e4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x9dd07289 # load x3 with value 0x9dd07289
sw x3, 0(x2) # store 0x9dd07289 in memory
flw f28, 0(x2) # load 0x9dd07289 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmsub.s f20, f7, f28, f22, dyn # perform operation
fmsub.s f20, f7, f28, f22, rdn # perform operation
fmsub.s f20, f7, f28, f22, rmm # perform operation
fmsub.s f20, f7, f28, f22, rne # perform operation
fmsub.s f20, f7, f28, f22, rtz # perform operation
fmsub.s f20, f7, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f7, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f7, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x4, 0xa5ec7f6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x6a95d9dc # load x3 with value 0x6a95d9dc
sw x3, 0(x2) # store 0x6a95d9dc in memory
flw f25, 0(x2) # load 0x6a95d9dc from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmsub.s f4, f7, f25, f10, dyn # perform operation
fmsub.s f4, f7, f25, f10, rdn # perform operation
fmsub.s f4, f7, f25, f10, rmm # perform operation
fmsub.s f4, f7, f25, f10, rne # perform operation
fmsub.s f4, f7, f25, f10, rtz # perform operation
fmsub.s f4, f7, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f7, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f7, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x23, 0x835f7d3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x5f3e577b # load x3 with value 0x5f3e577b
sw x3, 0(x2) # store 0x5f3e577b in memory
flw f4, 0(x2) # load 0x5f3e577b from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fmsub.s f23, f31, f4, f7, dyn # perform operation
fmsub.s f23, f31, f4, f7, rdn # perform operation
fmsub.s f23, f31, f4, f7, rmm # perform operation
fmsub.s f23, f31, f4, f7, rne # perform operation
fmsub.s f23, f31, f4, f7, rtz # perform operation
fmsub.s f23, f31, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f31, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f31, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x25, 0x0e619981 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xeecb8edb # load x3 with value 0xeecb8edb
sw x3, 0(x2) # store 0xeecb8edb in memory
flw f30, 0(x2) # load 0xeecb8edb from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmsub.s f25, f26, f30, f1, dyn # perform operation
fmsub.s f25, f26, f30, f1, rdn # perform operation
fmsub.s f25, f26, f30, f1, rmm # perform operation
fmsub.s f25, f26, f30, f1, rne # perform operation
fmsub.s f25, f26, f30, f1, rtz # perform operation
fmsub.s f25, f26, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f26, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f26, f30, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x2, 0x9098b3c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x594d42e8 # load x3 with value 0x594d42e8
sw x3, 0(x2) # store 0x594d42e8 in memory
flw f20, 0(x2) # load 0x594d42e8 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmsub.s f2, f13, f20, f31, dyn # perform operation
fmsub.s f2, f13, f20, f31, rdn # perform operation
fmsub.s f2, f13, f20, f31, rmm # perform operation
fmsub.s f2, f13, f20, f31, rne # perform operation
fmsub.s f2, f13, f20, f31, rtz # perform operation
fmsub.s f2, f13, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f13, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f13, f20, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x7, 0xaea4ff3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x1f3f8114 # load x3 with value 0x1f3f8114
sw x3, 0(x2) # store 0x1f3f8114 in memory
flw f23, 0(x2) # load 0x1f3f8114 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmsub.s f7, f5, f23, f13, dyn # perform operation
fmsub.s f7, f5, f23, f13, rdn # perform operation
fmsub.s f7, f5, f23, f13, rmm # perform operation
fmsub.s f7, f5, f23, f13, rne # perform operation
fmsub.s f7, f5, f23, f13, rtz # perform operation
fmsub.s f7, f5, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f5, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f5, f23, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x31, 0x2446b201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x0c88f673 # load x3 with value 0x0c88f673
sw x3, 0(x2) # store 0x0c88f673 in memory
flw f24, 0(x2) # load 0x0c88f673 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fmsub.s f31, f23, f24, f19, dyn # perform operation
fmsub.s f31, f23, f24, f19, rdn # perform operation
fmsub.s f31, f23, f24, f19, rmm # perform operation
fmsub.s f31, f23, f24, f19, rne # perform operation
fmsub.s f31, f23, f24, f19, rtz # perform operation
fmsub.s f31, f23, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f23, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f23, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x15, 0x640ed57c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x074b740f # load x3 with value 0x074b740f
sw x3, 0(x2) # store 0x074b740f in memory
flw f7, 0(x2) # load 0x074b740f from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmsub.s f15, f21, f7, f10, dyn # perform operation
fmsub.s f15, f21, f7, f10, rdn # perform operation
fmsub.s f15, f21, f7, f10, rmm # perform operation
fmsub.s f15, f21, f7, f10, rne # perform operation
fmsub.s f15, f21, f7, f10, rtz # perform operation
fmsub.s f15, f21, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f21, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f21, f7, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x10, 0x93000039 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x5ffcadf0 # load x3 with value 0x5ffcadf0
sw x3, 0(x2) # store 0x5ffcadf0 in memory
flw f11, 0(x2) # load 0x5ffcadf0 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmsub.s f10, f14, f11, f27, dyn # perform operation
fmsub.s f10, f14, f11, f27, rdn # perform operation
fmsub.s f10, f14, f11, f27, rmm # perform operation
fmsub.s f10, f14, f11, f27, rne # perform operation
fmsub.s f10, f14, f11, f27, rtz # perform operation
fmsub.s f10, f14, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f14, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x18, 0xa9d5986d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0xb2bcbb65 # load x3 with value 0xb2bcbb65
sw x3, 0(x2) # store 0xb2bcbb65 in memory
flw f19, 0(x2) # load 0xb2bcbb65 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
fmsub.s f18, f28, f19, f13, dyn # perform operation
fmsub.s f18, f28, f19, f13, rdn # perform operation
fmsub.s f18, f28, f19, f13, rmm # perform operation
fmsub.s f18, f28, f19, f13, rne # perform operation
fmsub.s f18, f28, f19, f13, rtz # perform operation
fmsub.s f18, f28, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x12, 0x74050dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x9f258618 # load x3 with value 0x9f258618
sw x3, 0(x2) # store 0x9f258618 in memory
flw f17, 0(x2) # load 0x9f258618 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fmsub.s f12, f29, f17, f26, dyn # perform operation
fmsub.s f12, f29, f17, f26, rdn # perform operation
fmsub.s f12, f29, f17, f26, rmm # perform operation
fmsub.s f12, f29, f17, f26, rne # perform operation
fmsub.s f12, f29, f17, f26, rtz # perform operation
fmsub.s f12, f29, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f29, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f29, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x16, 0x1f423e6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xc4fc6cb4 # load x3 with value 0xc4fc6cb4
sw x3, 0(x2) # store 0xc4fc6cb4 in memory
flw f22, 0(x2) # load 0xc4fc6cb4 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fmsub.s f16, f30, f22, f24, dyn # perform operation
fmsub.s f16, f30, f22, f24, rdn # perform operation
fmsub.s f16, f30, f22, f24, rmm # perform operation
fmsub.s f16, f30, f22, f24, rne # perform operation
fmsub.s f16, f30, f22, f24, rtz # perform operation
fmsub.s f16, f30, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f30, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f30, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x27, 0x8aa1c736 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xbe92d457 # load x3 with value 0xbe92d457
sw x3, 0(x2) # store 0xbe92d457 in memory
flw f17, 0(x2) # load 0xbe92d457 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmsub.s f27, f20, f17, f28, dyn # perform operation
fmsub.s f27, f20, f17, f28, rdn # perform operation
fmsub.s f27, f20, f17, f28, rmm # perform operation
fmsub.s f27, f20, f17, f28, rne # perform operation
fmsub.s f27, f20, f17, f28, rtz # perform operation
fmsub.s f27, f20, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f20, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f20, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x13, 0x58c03205 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x8c479356 # load x3 with value 0x8c479356
sw x3, 0(x2) # store 0x8c479356 in memory
flw f17, 0(x2) # load 0x8c479356 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fmsub.s f13, f4, f17, f9, dyn # perform operation
fmsub.s f13, f4, f17, f9, rdn # perform operation
fmsub.s f13, f4, f17, f9, rmm # perform operation
fmsub.s f13, f4, f17, f9, rne # perform operation
fmsub.s f13, f4, f17, f9, rtz # perform operation
fmsub.s f13, f4, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f4, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f4, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f4, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f4, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f4, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x25, 0xd0be3aab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x5b90820d # load x3 with value 0x5b90820d
sw x3, 0(x2) # store 0x5b90820d in memory
flw f24, 0(x2) # load 0x5b90820d from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
fmsub.s f25, f10, f24, f22, dyn # perform operation
fmsub.s f25, f10, f24, f22, rdn # perform operation
fmsub.s f25, f10, f24, f22, rmm # perform operation
fmsub.s f25, f10, f24, f22, rne # perform operation
fmsub.s f25, f10, f24, f22, rtz # perform operation
fmsub.s f25, f10, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f10, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f10, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f10, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f10, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f10, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x7, 0xf928c9da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0xe7034bd9 # load x3 with value 0xe7034bd9
sw x3, 0(x2) # store 0xe7034bd9 in memory
flw f6, 0(x2) # load 0xe7034bd9 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmsub.s f7, f4, f6, f2, dyn # perform operation
fmsub.s f7, f4, f6, f2, rdn # perform operation
fmsub.s f7, f4, f6, f2, rmm # perform operation
fmsub.s f7, f4, f6, f2, rne # perform operation
fmsub.s f7, f4, f6, f2, rtz # perform operation
fmsub.s f7, f4, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f4, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f4, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f4, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f4, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f4, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x8, 0xdcea1b6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0xe98c94fc # load x3 with value 0xe98c94fc
sw x3, 0(x2) # store 0xe98c94fc in memory
flw f28, 0(x2) # load 0xe98c94fc from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmsub.s f8, f10, f28, f25, dyn # perform operation
fmsub.s f8, f10, f28, f25, rdn # perform operation
fmsub.s f8, f10, f28, f25, rmm # perform operation
fmsub.s f8, f10, f28, f25, rne # perform operation
fmsub.s f8, f10, f28, f25, rtz # perform operation
fmsub.s f8, f10, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f10, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f10, f28, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x31, 0x337a1aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xb9eabbed # load x3 with value 0xb9eabbed
sw x3, 0(x2) # store 0xb9eabbed in memory
flw f25, 0(x2) # load 0xb9eabbed from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmsub.s f31, f21, f25, f1, dyn # perform operation
fmsub.s f31, f21, f25, f1, rdn # perform operation
fmsub.s f31, f21, f25, f1, rmm # perform operation
fmsub.s f31, f21, f25, f1, rne # perform operation
fmsub.s f31, f21, f25, f1, rtz # perform operation
fmsub.s f31, f21, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f21, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f21, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x12, 0xe24a5fa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xbe159b1e # load x3 with value 0xbe159b1e
sw x3, 0(x2) # store 0xbe159b1e in memory
flw f9, 0(x2) # load 0xbe159b1e from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fmsub.s f12, f23, f9, f4, dyn # perform operation
fmsub.s f12, f23, f9, f4, rdn # perform operation
fmsub.s f12, f23, f9, f4, rmm # perform operation
fmsub.s f12, f23, f9, f4, rne # perform operation
fmsub.s f12, f23, f9, f4, rtz # perform operation
fmsub.s f12, f23, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f12, f23, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f12, f23, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f12, f23, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f12, f23, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f12, f23, f9, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x6, 0xc627f220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x3d6c99ba # load x3 with value 0x3d6c99ba
sw x3, 0(x2) # store 0x3d6c99ba in memory
flw f31, 0(x2) # load 0x3d6c99ba from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmsub.s f6, f30, f31, f11, dyn # perform operation
fmsub.s f6, f30, f31, f11, rdn # perform operation
fmsub.s f6, f30, f31, f11, rmm # perform operation
fmsub.s f6, f30, f31, f11, rne # perform operation
fmsub.s f6, f30, f31, f11, rtz # perform operation
fmsub.s f6, f30, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f30, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f30, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x6, 0xb0a31bf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x38b5493d # load x3 with value 0x38b5493d
sw x3, 0(x2) # store 0x38b5493d in memory
flw f8, 0(x2) # load 0x38b5493d from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fmsub.s f6, f9, f8, f10, dyn # perform operation
fmsub.s f6, f9, f8, f10, rdn # perform operation
fmsub.s f6, f9, f8, f10, rmm # perform operation
fmsub.s f6, f9, f8, f10, rne # perform operation
fmsub.s f6, f9, f8, f10, rtz # perform operation
fmsub.s f6, f9, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f6, f9, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f6, f9, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f6, f9, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f6, f9, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f6, f9, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x7, 0xef5f7aa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x78d59065 # load x3 with value 0x78d59065
sw x3, 0(x2) # store 0x78d59065 in memory
flw f19, 0(x2) # load 0x78d59065 from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmsub.s f7, f10, f19, f23, dyn # perform operation
fmsub.s f7, f10, f19, f23, rdn # perform operation
fmsub.s f7, f10, f19, f23, rmm # perform operation
fmsub.s f7, f10, f19, f23, rne # perform operation
fmsub.s f7, f10, f19, f23, rtz # perform operation
fmsub.s f7, f10, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f10, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f10, f19, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x18, 0xca118c53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x3d3b86bc # load x3 with value 0x3d3b86bc
sw x3, 0(x2) # store 0x3d3b86bc in memory
flw f16, 0(x2) # load 0x3d3b86bc from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmsub.s f18, f31, f16, f1, dyn # perform operation
fmsub.s f18, f31, f16, f1, rdn # perform operation
fmsub.s f18, f31, f16, f1, rmm # perform operation
fmsub.s f18, f31, f16, f1, rne # perform operation
fmsub.s f18, f31, f16, f1, rtz # perform operation
fmsub.s f18, f31, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f31, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f31, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x27, 0x5c08eba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xd96a2bae # load x3 with value 0xd96a2bae
sw x3, 0(x2) # store 0xd96a2bae in memory
flw f1, 0(x2) # load 0xd96a2bae from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fmsub.s f27, f18, f1, f15, dyn # perform operation
fmsub.s f27, f18, f1, f15, rdn # perform operation
fmsub.s f27, f18, f1, f15, rmm # perform operation
fmsub.s f27, f18, f1, f15, rne # perform operation
fmsub.s f27, f18, f1, f15, rtz # perform operation
fmsub.s f27, f18, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f27, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f27, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f27, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f27, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f27, f18, f1, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x21, 0x16372343 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0xa3a98d25 # load x3 with value 0xa3a98d25
sw x3, 0(x2) # store 0xa3a98d25 in memory
flw f20, 0(x2) # load 0xa3a98d25 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmsub.s f21, f6, f20, f31, dyn # perform operation
fmsub.s f21, f6, f20, f31, rdn # perform operation
fmsub.s f21, f6, f20, f31, rmm # perform operation
fmsub.s f21, f6, f20, f31, rne # perform operation
fmsub.s f21, f6, f20, f31, rtz # perform operation
fmsub.s f21, f6, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f6, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f6, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f6, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f6, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f6, f20, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x20, 0xb685b159 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x4a5e483c # load x3 with value 0x4a5e483c
sw x3, 0(x2) # store 0x4a5e483c in memory
flw f17, 0(x2) # load 0x4a5e483c from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmsub.s f20, f30, f17, f3, dyn # perform operation
fmsub.s f20, f30, f17, f3, rdn # perform operation
fmsub.s f20, f30, f17, f3, rmm # perform operation
fmsub.s f20, f30, f17, f3, rne # perform operation
fmsub.s f20, f30, f17, f3, rtz # perform operation
fmsub.s f20, f30, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f30, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x29, 0xe6b6794e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0x9f5e206e # load x3 with value 0x9f5e206e
sw x3, 0(x2) # store 0x9f5e206e in memory
flw f23, 0(x2) # load 0x9f5e206e from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmsub.s f29, f8, f23, f21, dyn # perform operation
fmsub.s f29, f8, f23, f21, rdn # perform operation
fmsub.s f29, f8, f23, f21, rmm # perform operation
fmsub.s f29, f8, f23, f21, rne # perform operation
fmsub.s f29, f8, f23, f21, rtz # perform operation
fmsub.s f29, f8, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f8, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f8, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x15, 0x0901f9d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0xed34d21a # load x3 with value 0xed34d21a
sw x3, 0(x2) # store 0xed34d21a in memory
flw f8, 0(x2) # load 0xed34d21a from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmsub.s f15, f17, f8, f21, dyn # perform operation
fmsub.s f15, f17, f8, f21, rdn # perform operation
fmsub.s f15, f17, f8, f21, rmm # perform operation
fmsub.s f15, f17, f8, f21, rne # perform operation
fmsub.s f15, f17, f8, f21, rtz # perform operation
fmsub.s f15, f17, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f17, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x11, 0xc7434013 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0xbdadc159 # load x3 with value 0xbdadc159
sw x3, 0(x2) # store 0xbdadc159 in memory
flw f18, 0(x2) # load 0xbdadc159 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmsub.s f11, f28, f18, f29, dyn # perform operation
fmsub.s f11, f28, f18, f29, rdn # perform operation
fmsub.s f11, f28, f18, f29, rmm # perform operation
fmsub.s f11, f28, f18, f29, rne # perform operation
fmsub.s f11, f28, f18, f29, rtz # perform operation
fmsub.s f11, f28, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f28, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x11, 0x7a241bb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0xbaef2eee # load x3 with value 0xbaef2eee
sw x3, 0(x2) # store 0xbaef2eee in memory
flw f1, 0(x2) # load 0xbaef2eee from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmsub.s f11, f25, f1, f17, dyn # perform operation
fmsub.s f11, f25, f1, f17, rdn # perform operation
fmsub.s f11, f25, f1, f17, rmm # perform operation
fmsub.s f11, f25, f1, f17, rne # perform operation
fmsub.s f11, f25, f1, f17, rtz # perform operation
fmsub.s f11, f25, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x21, 0x470449c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x51ce7677 # load x3 with value 0x51ce7677
sw x3, 0(x2) # store 0x51ce7677 in memory
flw f22, 0(x2) # load 0x51ce7677 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmsub.s f21, f10, f22, f4, dyn # perform operation
fmsub.s f21, f10, f22, f4, rdn # perform operation
fmsub.s f21, f10, f22, f4, rmm # perform operation
fmsub.s f21, f10, f22, f4, rne # perform operation
fmsub.s f21, f10, f22, f4, rtz # perform operation
fmsub.s f21, f10, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f21, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f21, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f21, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f21, f10, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f21, f10, f22, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x26, 0xd201b00e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x8f9de672 # load x3 with value 0x8f9de672
sw x3, 0(x2) # store 0x8f9de672 in memory
flw f14, 0(x2) # load 0x8f9de672 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
fmsub.s f26, f17, f14, f4, dyn # perform operation
fmsub.s f26, f17, f14, f4, rdn # perform operation
fmsub.s f26, f17, f14, f4, rmm # perform operation
fmsub.s f26, f17, f14, f4, rne # perform operation
fmsub.s f26, f17, f14, f4, rtz # perform operation
fmsub.s f26, f17, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f26, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f26, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f26, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f26, f17, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f26, f17, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x29, 0xef29a995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x2a279dbb # load x3 with value 0x2a279dbb
sw x3, 0(x2) # store 0x2a279dbb in memory
flw f21, 0(x2) # load 0x2a279dbb from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fmsub.s f29, f1, f21, f12, dyn # perform operation
fmsub.s f29, f1, f21, f12, rdn # perform operation
fmsub.s f29, f1, f21, f12, rmm # perform operation
fmsub.s f29, f1, f21, f12, rne # perform operation
fmsub.s f29, f1, f21, f12, rtz # perform operation
fmsub.s f29, f1, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x18, 0xcb34ab06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0xa3270f5b # load x3 with value 0xa3270f5b
sw x3, 0(x2) # store 0xa3270f5b in memory
flw f29, 0(x2) # load 0xa3270f5b from memory into f29
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmsub.s f18, f28, f29, f9, dyn # perform operation
fmsub.s f18, f28, f29, f9, rdn # perform operation
fmsub.s f18, f28, f29, f9, rmm # perform operation
fmsub.s f18, f28, f29, f9, rne # perform operation
fmsub.s f18, f28, f29, f9, rtz # perform operation
fmsub.s f18, f28, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f28, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x1, 0x6db62933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x34329135 # load x3 with value 0x34329135
sw x3, 0(x2) # store 0x34329135 in memory
flw f13, 0(x2) # load 0x34329135 from memory into f13
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fmsub.s f1, f27, f13, f29, dyn # perform operation
fmsub.s f1, f27, f13, f29, rdn # perform operation
fmsub.s f1, f27, f13, f29, rmm # perform operation
fmsub.s f1, f27, f13, f29, rne # perform operation
fmsub.s f1, f27, f13, f29, rtz # perform operation
fmsub.s f1, f27, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f1, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f1, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f1, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f1, f27, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f1, f27, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x20, 0x7705a3c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x30c94dc3 # load x3 with value 0x30c94dc3
sw x3, 0(x2) # store 0x30c94dc3 in memory
flw f11, 0(x2) # load 0x30c94dc3 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fmsub.s f20, f28, f11, f3, dyn # perform operation
fmsub.s f20, f28, f11, f3, rdn # perform operation
fmsub.s f20, f28, f11, f3, rmm # perform operation
fmsub.s f20, f28, f11, f3, rne # perform operation
fmsub.s f20, f28, f11, f3, rtz # perform operation
fmsub.s f20, f28, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f20, f28, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f20, f28, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f20, f28, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f20, f28, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f20, f28, f11, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x8, 0xbacb8242 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xbbd3a84c # load x3 with value 0xbbd3a84c
sw x3, 0(x2) # store 0xbbd3a84c in memory
flw f16, 0(x2) # load 0xbbd3a84c from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmsub.s f8, f5, f16, f20, dyn # perform operation
fmsub.s f8, f5, f16, f20, rdn # perform operation
fmsub.s f8, f5, f16, f20, rmm # perform operation
fmsub.s f8, f5, f16, f20, rne # perform operation
fmsub.s f8, f5, f16, f20, rtz # perform operation
fmsub.s f8, f5, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f8, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f8, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f8, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f8, f5, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f8, f5, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x18, 0x5a7d5b1f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0xc6d4f836 # load x3 with value 0xc6d4f836
sw x3, 0(x2) # store 0xc6d4f836 in memory
flw f20, 0(x2) # load 0xc6d4f836 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fmsub.s f18, f10, f20, f17, dyn # perform operation
fmsub.s f18, f10, f20, f17, rdn # perform operation
fmsub.s f18, f10, f20, f17, rmm # perform operation
fmsub.s f18, f10, f20, f17, rne # perform operation
fmsub.s f18, f10, f20, f17, rtz # perform operation
fmsub.s f18, f10, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f18, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f18, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f18, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f18, f10, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f18, f10, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x11, 0x56502900 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0xec089e21 # load x3 with value 0xec089e21
sw x3, 0(x2) # store 0xec089e21 in memory
flw f28, 0(x2) # load 0xec089e21 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmsub.s f11, f25, f28, f18, dyn # perform operation
fmsub.s f11, f25, f28, f18, rdn # perform operation
fmsub.s f11, f25, f28, f18, rmm # perform operation
fmsub.s f11, f25, f28, f18, rne # perform operation
fmsub.s f11, f25, f28, f18, rtz # perform operation
fmsub.s f11, f25, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f25, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f25, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x2, 0x6af5fdca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xa4772ee6 # load x3 with value 0xa4772ee6
sw x3, 0(x2) # store 0xa4772ee6 in memory
flw f15, 0(x2) # load 0xa4772ee6 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmsub.s f2, f26, f15, f12, dyn # perform operation
fmsub.s f2, f26, f15, f12, rdn # perform operation
fmsub.s f2, f26, f15, f12, rmm # perform operation
fmsub.s f2, f26, f15, f12, rne # perform operation
fmsub.s f2, f26, f15, f12, rtz # perform operation
fmsub.s f2, f26, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f26, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f26, f15, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x9, 0x11065f85 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x5bed6a73 # load x3 with value 0x5bed6a73
sw x3, 0(x2) # store 0x5bed6a73 in memory
flw f24, 0(x2) # load 0x5bed6a73 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fmsub.s f9, f23, f24, f3, dyn # perform operation
fmsub.s f9, f23, f24, f3, rdn # perform operation
fmsub.s f9, f23, f24, f3, rmm # perform operation
fmsub.s f9, f23, f24, f3, rne # perform operation
fmsub.s f9, f23, f24, f3, rtz # perform operation
fmsub.s f9, f23, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f9, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f9, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f9, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f9, f23, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f9, f23, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x5, 0x299ffcd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xe0594718 # load x3 with value 0xe0594718
sw x3, 0(x2) # store 0xe0594718 in memory
flw f18, 0(x2) # load 0xe0594718 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmsub.s f5, f26, f18, f27, dyn # perform operation
fmsub.s f5, f26, f18, f27, rdn # perform operation
fmsub.s f5, f26, f18, f27, rmm # perform operation
fmsub.s f5, f26, f18, f27, rne # perform operation
fmsub.s f5, f26, f18, f27, rtz # perform operation
fmsub.s f5, f26, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f5, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f5, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f5, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f5, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f5, f26, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x28, 0xdc4f9fde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x55450d01 # load x3 with value 0x55450d01
sw x3, 0(x2) # store 0x55450d01 in memory
flw f2, 0(x2) # load 0x55450d01 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmsub.s f28, f4, f2, f22, dyn # perform operation
fmsub.s f28, f4, f2, f22, rdn # perform operation
fmsub.s f28, f4, f2, f22, rmm # perform operation
fmsub.s f28, f4, f2, f22, rne # perform operation
fmsub.s f28, f4, f2, f22, rtz # perform operation
fmsub.s f28, f4, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f4, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f4, f2, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x15, 0xe77135ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0x49d8263b # load x3 with value 0x49d8263b
sw x3, 0(x2) # store 0x49d8263b in memory
flw f25, 0(x2) # load 0x49d8263b from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmsub.s f15, f14, f25, f31, dyn # perform operation
fmsub.s f15, f14, f25, f31, rdn # perform operation
fmsub.s f15, f14, f25, f31, rmm # perform operation
fmsub.s f15, f14, f25, f31, rne # perform operation
fmsub.s f15, f14, f25, f31, rtz # perform operation
fmsub.s f15, f14, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f14, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f14, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f14, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f14, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f14, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x23, 0x43b28c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x0c0757a6 # load x3 with value 0x0c0757a6
sw x3, 0(x2) # store 0x0c0757a6 in memory
flw f20, 0(x2) # load 0x0c0757a6 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmsub.s f23, f15, f20, f12, dyn # perform operation
fmsub.s f23, f15, f20, f12, rdn # perform operation
fmsub.s f23, f15, f20, f12, rmm # perform operation
fmsub.s f23, f15, f20, f12, rne # perform operation
fmsub.s f23, f15, f20, f12, rtz # perform operation
fmsub.s f23, f15, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f15, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f15, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x16, 0x77764479 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0xbcb18200 # load x3 with value 0xbcb18200
sw x3, 0(x2) # store 0xbcb18200 in memory
flw f26, 0(x2) # load 0xbcb18200 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fmsub.s f16, f3, f26, f7, dyn # perform operation
fmsub.s f16, f3, f26, f7, rdn # perform operation
fmsub.s f16, f3, f26, f7, rmm # perform operation
fmsub.s f16, f3, f26, f7, rne # perform operation
fmsub.s f16, f3, f26, f7, rtz # perform operation
fmsub.s f16, f3, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f16, f3, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f16, f3, f26, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x29, 0xcd2a5f79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xde3559ae # load x3 with value 0xde3559ae
sw x3, 0(x2) # store 0xde3559ae in memory
flw f10, 0(x2) # load 0xde3559ae from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fmsub.s f29, f1, f10, f6, dyn # perform operation
fmsub.s f29, f1, f10, f6, rdn # perform operation
fmsub.s f29, f1, f10, f6, rmm # perform operation
fmsub.s f29, f1, f10, f6, rne # perform operation
fmsub.s f29, f1, f10, f6, rtz # perform operation
fmsub.s f29, f1, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f29, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f29, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f29, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f29, f1, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f29, f1, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x7, 0x8b0841e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x40dcc2cd # load x3 with value 0x40dcc2cd
sw x3, 0(x2) # store 0x40dcc2cd in memory
flw f24, 0(x2) # load 0x40dcc2cd from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmsub.s f7, f11, f24, f20, dyn # perform operation
fmsub.s f7, f11, f24, f20, rdn # perform operation
fmsub.s f7, f11, f24, f20, rmm # perform operation
fmsub.s f7, f11, f24, f20, rne # perform operation
fmsub.s f7, f11, f24, f20, rtz # perform operation
fmsub.s f7, f11, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f7, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f7, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f7, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f7, f11, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f7, f11, f24, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x25, 0x2f0bf0b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x7effaf44 # load x3 with value 0x7effaf44
sw x3, 0(x2) # store 0x7effaf44 in memory
flw f2, 0(x2) # load 0x7effaf44 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
fmsub.s f25, f24, f2, f26, dyn # perform operation
fmsub.s f25, f24, f2, f26, rdn # perform operation
fmsub.s f25, f24, f2, f26, rmm # perform operation
fmsub.s f25, f24, f2, f26, rne # perform operation
fmsub.s f25, f24, f2, f26, rtz # perform operation
fmsub.s f25, f24, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f24, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f24, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f24, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f24, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f24, f2, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x24, 0x949e8910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xf0765bce # load x3 with value 0xf0765bce
sw x3, 0(x2) # store 0xf0765bce in memory
flw f21, 0(x2) # load 0xf0765bce from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmsub.s f24, f1, f21, f23, dyn # perform operation
fmsub.s f24, f1, f21, f23, rdn # perform operation
fmsub.s f24, f1, f21, f23, rmm # perform operation
fmsub.s f24, f1, f21, f23, rne # perform operation
fmsub.s f24, f1, f21, f23, rtz # perform operation
fmsub.s f24, f1, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f1, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f1, f21, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x13, 0xc2e68045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xc2af0da4 # load x3 with value 0xc2af0da4
sw x3, 0(x2) # store 0xc2af0da4 in memory
flw f17, 0(x2) # load 0xc2af0da4 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmsub.s f13, f2, f17, f27, dyn # perform operation
fmsub.s f13, f2, f17, f27, rdn # perform operation
fmsub.s f13, f2, f17, f27, rmm # perform operation
fmsub.s f13, f2, f17, f27, rne # perform operation
fmsub.s f13, f2, f17, f27, rtz # perform operation
fmsub.s f13, f2, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f2, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x25, 0x4392b128 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x5fe9ff3f # load x3 with value 0x5fe9ff3f
sw x3, 0(x2) # store 0x5fe9ff3f in memory
flw f13, 0(x2) # load 0x5fe9ff3f from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmsub.s f25, f7, f13, f28, dyn # perform operation
fmsub.s f25, f7, f13, f28, rdn # perform operation
fmsub.s f25, f7, f13, f28, rmm # perform operation
fmsub.s f25, f7, f13, f28, rne # perform operation
fmsub.s f25, f7, f13, f28, rtz # perform operation
fmsub.s f25, f7, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f7, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f7, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x23, 0xee5f8448 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xac2250df # load x3 with value 0xac2250df
sw x3, 0(x2) # store 0xac2250df in memory
flw f14, 0(x2) # load 0xac2250df from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmsub.s f23, f6, f14, f5, dyn # perform operation
fmsub.s f23, f6, f14, f5, rdn # perform operation
fmsub.s f23, f6, f14, f5, rmm # perform operation
fmsub.s f23, f6, f14, f5, rne # perform operation
fmsub.s f23, f6, f14, f5, rtz # perform operation
fmsub.s f23, f6, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f23, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f23, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f23, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f23, f6, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f23, f6, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x24, 0xf0d2d958 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x48ed7ff9 # load x3 with value 0x48ed7ff9
sw x3, 0(x2) # store 0x48ed7ff9 in memory
flw f21, 0(x2) # load 0x48ed7ff9 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmsub.s f24, f26, f21, f1, dyn # perform operation
fmsub.s f24, f26, f21, f1, rdn # perform operation
fmsub.s f24, f26, f21, f1, rmm # perform operation
fmsub.s f24, f26, f21, f1, rne # perform operation
fmsub.s f24, f26, f21, f1, rtz # perform operation
fmsub.s f24, f26, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f24, f26, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f24, f26, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f24, f26, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f24, f26, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f24, f26, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x13, 0xc309412b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x4c376564 # load x3 with value 0x4c376564
sw x3, 0(x2) # store 0x4c376564 in memory
flw f2, 0(x2) # load 0x4c376564 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmsub.s f13, f24, f2, f30, dyn # perform operation
fmsub.s f13, f24, f2, f30, rdn # perform operation
fmsub.s f13, f24, f2, f30, rmm # perform operation
fmsub.s f13, f24, f2, f30, rne # perform operation
fmsub.s f13, f24, f2, f30, rtz # perform operation
fmsub.s f13, f24, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f13, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f13, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f13, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f13, f24, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f13, f24, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x10, 0xe8406e07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xc5e14014 # load x3 with value 0xc5e14014
sw x3, 0(x2) # store 0xc5e14014 in memory
flw f14, 0(x2) # load 0xc5e14014 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmsub.s f10, f30, f14, f7, dyn # perform operation
fmsub.s f10, f30, f14, f7, rdn # perform operation
fmsub.s f10, f30, f14, f7, rmm # perform operation
fmsub.s f10, f30, f14, f7, rne # perform operation
fmsub.s f10, f30, f14, f7, rtz # perform operation
fmsub.s f10, f30, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f10, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f10, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f10, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f10, f30, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f10, f30, f14, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x25, 0x3eeacba5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x7bb1c9d2 # load x3 with value 0x7bb1c9d2
sw x3, 0(x2) # store 0x7bb1c9d2 in memory
flw f24, 0(x2) # load 0x7bb1c9d2 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmsub.s f25, f16, f24, f4, dyn # perform operation
fmsub.s f25, f16, f24, f4, rdn # perform operation
fmsub.s f25, f16, f24, f4, rmm # perform operation
fmsub.s f25, f16, f24, f4, rne # perform operation
fmsub.s f25, f16, f24, f4, rtz # perform operation
fmsub.s f25, f16, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f16, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f16, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f16, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f16, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f16, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x4, 0x29781d81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x6fb41b5f # load x3 with value 0x6fb41b5f
sw x3, 0(x2) # store 0x6fb41b5f in memory
flw f6, 0(x2) # load 0x6fb41b5f from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fmsub.s f4, f23, f6, f15, dyn # perform operation
fmsub.s f4, f23, f6, f15, rdn # perform operation
fmsub.s f4, f23, f6, f15, rmm # perform operation
fmsub.s f4, f23, f6, f15, rne # perform operation
fmsub.s f4, f23, f6, f15, rtz # perform operation
fmsub.s f4, f23, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f4, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f4, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f4, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f4, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f4, f23, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x11, 0xb0bf4d43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x7a8e9661 # load x3 with value 0x7a8e9661
sw x3, 0(x2) # store 0x7a8e9661 in memory
flw f3, 0(x2) # load 0x7a8e9661 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmsub.s f11, f1, f3, f28, dyn # perform operation
fmsub.s f11, f1, f3, f28, rdn # perform operation
fmsub.s f11, f1, f3, f28, rmm # perform operation
fmsub.s f11, f1, f3, f28, rne # perform operation
fmsub.s f11, f1, f3, f28, rtz # perform operation
fmsub.s f11, f1, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f11, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f11, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f11, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f11, f1, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f11, f1, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x19, 0xac0e0738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x18dbb0db # load x3 with value 0x18dbb0db
sw x3, 0(x2) # store 0x18dbb0db in memory
flw f5, 0(x2) # load 0x18dbb0db from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmsub.s f19, f12, f5, f10, dyn # perform operation
fmsub.s f19, f12, f5, f10, rdn # perform operation
fmsub.s f19, f12, f5, f10, rmm # perform operation
fmsub.s f19, f12, f5, f10, rne # perform operation
fmsub.s f19, f12, f5, f10, rtz # perform operation
fmsub.s f19, f12, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f19, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f19, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f19, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f19, f12, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f19, f12, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x2, 0x7b660bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x123044b6 # load x3 with value 0x123044b6
sw x3, 0(x2) # store 0x123044b6 in memory
flw f3, 0(x2) # load 0x123044b6 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fmsub.s f2, f30, f3, f21, dyn # perform operation
fmsub.s f2, f30, f3, f21, rdn # perform operation
fmsub.s f2, f30, f3, f21, rmm # perform operation
fmsub.s f2, f30, f3, f21, rne # perform operation
fmsub.s f2, f30, f3, f21, rtz # perform operation
fmsub.s f2, f30, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f2, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f2, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f2, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f2, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f2, f30, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x31, 0xbf0d2ab6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xe02105de # load x3 with value 0xe02105de
sw x3, 0(x2) # store 0xe02105de in memory
flw f17, 0(x2) # load 0xe02105de from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fmsub.s f31, f2, f17, f22, dyn # perform operation
fmsub.s f31, f2, f17, f22, rdn # perform operation
fmsub.s f31, f2, f17, f22, rmm # perform operation
fmsub.s f31, f2, f17, f22, rne # perform operation
fmsub.s f31, f2, f17, f22, rtz # perform operation
fmsub.s f31, f2, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f31, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f31, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f31, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f31, f2, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f31, f2, f17, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x25, 0x70f196c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x54a35e12 # load x3 with value 0x54a35e12
sw x3, 0(x2) # store 0x54a35e12 in memory
flw f3, 0(x2) # load 0x54a35e12 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fmsub.s f25, f18, f3, f22, dyn # perform operation
fmsub.s f25, f18, f3, f22, rdn # perform operation
fmsub.s f25, f18, f3, f22, rmm # perform operation
fmsub.s f25, f18, f3, f22, rne # perform operation
fmsub.s f25, f18, f3, f22, rtz # perform operation
fmsub.s f25, f18, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f18, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f18, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x15, 0x2cc2009a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xf5d475a4 # load x3 with value 0xf5d475a4
sw x3, 0(x2) # store 0xf5d475a4 in memory
flw f30, 0(x2) # load 0xf5d475a4 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fmsub.s f15, f26, f30, f13, dyn # perform operation
fmsub.s f15, f26, f30, f13, rdn # perform operation
fmsub.s f15, f26, f30, f13, rmm # perform operation
fmsub.s f15, f26, f30, f13, rne # perform operation
fmsub.s f15, f26, f30, f13, rtz # perform operation
fmsub.s f15, f26, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f15, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f15, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f15, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f15, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f15, f26, f30, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x25, 0xd179c5d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x83f66bbb # load x3 with value 0x83f66bbb
sw x3, 0(x2) # store 0x83f66bbb in memory
flw f10, 0(x2) # load 0x83f66bbb from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmsub.s f25, f3, f10, f29, dyn # perform operation
fmsub.s f25, f3, f10, f29, rdn # perform operation
fmsub.s f25, f3, f10, f29, rmm # perform operation
fmsub.s f25, f3, f10, f29, rne # perform operation
fmsub.s f25, f3, f10, f29, rtz # perform operation
fmsub.s f25, f3, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f25, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f25, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f25, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f25, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f25, f3, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x28, 0x69b6c1d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xbbee4132 # load x3 with value 0xbbee4132
sw x3, 0(x2) # store 0xbbee4132 in memory
flw f6, 0(x2) # load 0xbbee4132 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fmsub.s f28, f27, f6, f29, dyn # perform operation
fmsub.s f28, f27, f6, f29, rdn # perform operation
fmsub.s f28, f27, f6, f29, rmm # perform operation
fmsub.s f28, f27, f6, f29, rne # perform operation
fmsub.s f28, f27, f6, f29, rtz # perform operation
fmsub.s f28, f27, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmsub.s f28, f27, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmsub.s f28, f27, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmsub.s f28, f27, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmsub.s f28, f27, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmsub.s f28, f27, f6, f29 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xd9ffe59d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3ab4cdf # load x3 with value 0xe3ab4cdf
sw x3, 0(x2) # store 0xe3ab4cdf in memory
flw f7, 0(x2) # load 0xe3ab4cdf from memory into f7
li x3, 0xd62a734d # load x3 with value 0xd62a734d
sw x3, 0(x2) # store 0xd62a734d in memory
flw f5, 0(x2) # load 0xd62a734d from memory into f5
li x3, 0x30dd0d49 # load x3 with value 0x30dd0d49
sw x3, 0(x2) # store 0x30dd0d49 in memory
flw f8, 0(x2) # load 0x30dd0d49 from memory into f8
fmsub.s f0, f7, f5, f8 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x469b7943 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x95cb920e # load x3 with value 0x95cb920e
sw x3, 0(x2) # store 0x95cb920e in memory
flw f18, 0(x2) # load 0x95cb920e from memory into f18
li x3, 0x238311a2 # load x3 with value 0x238311a2
sw x3, 0(x2) # store 0x238311a2 in memory
flw f7, 0(x2) # load 0x238311a2 from memory into f7
li x3, 0x52b57dbd # load x3 with value 0x52b57dbd
sw x3, 0(x2) # store 0x52b57dbd in memory
flw f1, 0(x2) # load 0x52b57dbd from memory into f1
fmsub.s f1, f18, f7, f1 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0x0db3be2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0bd869e0 # load x3 with value 0x0bd869e0
sw x3, 0(x2) # store 0x0bd869e0 in memory
flw f18, 0(x2) # load 0x0bd869e0 from memory into f18
li x3, 0xabf3909f # load x3 with value 0xabf3909f
sw x3, 0(x2) # store 0xabf3909f in memory
flw f29, 0(x2) # load 0xabf3909f from memory into f29
li x3, 0xadc483e8 # load x3 with value 0xadc483e8
sw x3, 0(x2) # store 0xadc483e8 in memory
flw f30, 0(x2) # load 0xadc483e8 from memory into f30
fmsub.s f2, f18, f29, f30 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x0cb9b708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e5dfee2 # load x3 with value 0x1e5dfee2
sw x3, 0(x2) # store 0x1e5dfee2 in memory
flw f19, 0(x2) # load 0x1e5dfee2 from memory into f19
li x3, 0x42edb294 # load x3 with value 0x42edb294
sw x3, 0(x2) # store 0x42edb294 in memory
flw f30, 0(x2) # load 0x42edb294 from memory into f30
li x3, 0x017072e0 # load x3 with value 0x017072e0
sw x3, 0(x2) # store 0x017072e0 in memory
flw f14, 0(x2) # load 0x017072e0 from memory into f14
fmsub.s f3, f19, f30, f14 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0xab6a3b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e88129f # load x3 with value 0x4e88129f
sw x3, 0(x2) # store 0x4e88129f in memory
flw f5, 0(x2) # load 0x4e88129f from memory into f5
li x3, 0x8de0a714 # load x3 with value 0x8de0a714
sw x3, 0(x2) # store 0x8de0a714 in memory
flw f24, 0(x2) # load 0x8de0a714 from memory into f24
li x3, 0xf676330f # load x3 with value 0xf676330f
sw x3, 0(x2) # store 0xf676330f in memory
flw f18, 0(x2) # load 0xf676330f from memory into f18
fmsub.s f4, f5, f24, f18 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x94902d6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d532c7c # load x3 with value 0x1d532c7c
sw x3, 0(x2) # store 0x1d532c7c in memory
flw f30, 0(x2) # load 0x1d532c7c from memory into f30
li x3, 0x5386b65a # load x3 with value 0x5386b65a
sw x3, 0(x2) # store 0x5386b65a in memory
flw f16, 0(x2) # load 0x5386b65a from memory into f16
li x3, 0x1bd28760 # load x3 with value 0x1bd28760
sw x3, 0(x2) # store 0x1bd28760 in memory
flw f6, 0(x2) # load 0x1bd28760 from memory into f6
fmsub.s f5, f30, f16, f6 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0xa0584519 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd0fd777a # load x3 with value 0xd0fd777a
sw x3, 0(x2) # store 0xd0fd777a in memory
flw f17, 0(x2) # load 0xd0fd777a from memory into f17
li x3, 0xdaa4beeb # load x3 with value 0xdaa4beeb
sw x3, 0(x2) # store 0xdaa4beeb in memory
flw f21, 0(x2) # load 0xdaa4beeb from memory into f21
li x3, 0xd87f2718 # load x3 with value 0xd87f2718
sw x3, 0(x2) # store 0xd87f2718 in memory
flw f11, 0(x2) # load 0xd87f2718 from memory into f11
fmsub.s f6, f17, f21, f11 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x95ef388e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ed53687 # load x3 with value 0x3ed53687
sw x3, 0(x2) # store 0x3ed53687 in memory
flw f13, 0(x2) # load 0x3ed53687 from memory into f13
li x3, 0x6d90f76f # load x3 with value 0x6d90f76f
sw x3, 0(x2) # store 0x6d90f76f in memory
flw f3, 0(x2) # load 0x6d90f76f from memory into f3
li x3, 0x56ad6f12 # load x3 with value 0x56ad6f12
sw x3, 0(x2) # store 0x56ad6f12 in memory
flw f4, 0(x2) # load 0x56ad6f12 from memory into f4
fmsub.s f7, f13, f3, f4 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0xb10fb926 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x532739a4 # load x3 with value 0x532739a4
sw x3, 0(x2) # store 0x532739a4 in memory
flw f3, 0(x2) # load 0x532739a4 from memory into f3
li x3, 0x10d0ed3f # load x3 with value 0x10d0ed3f
sw x3, 0(x2) # store 0x10d0ed3f in memory
flw f20, 0(x2) # load 0x10d0ed3f from memory into f20
li x3, 0xc87f6c78 # load x3 with value 0xc87f6c78
sw x3, 0(x2) # store 0xc87f6c78 in memory
flw f22, 0(x2) # load 0xc87f6c78 from memory into f22
fmsub.s f8, f3, f20, f22 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xbdad464b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4717645c # load x3 with value 0x4717645c
sw x3, 0(x2) # store 0x4717645c in memory
flw f20, 0(x2) # load 0x4717645c from memory into f20
li x3, 0x91eb577f # load x3 with value 0x91eb577f
sw x3, 0(x2) # store 0x91eb577f in memory
flw f30, 0(x2) # load 0x91eb577f from memory into f30
li x3, 0x7d33ed83 # load x3 with value 0x7d33ed83
sw x3, 0(x2) # store 0x7d33ed83 in memory
flw f25, 0(x2) # load 0x7d33ed83 from memory into f25
fmsub.s f9, f20, f30, f25 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x7092fea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb63837cf # load x3 with value 0xb63837cf
sw x3, 0(x2) # store 0xb63837cf in memory
flw f26, 0(x2) # load 0xb63837cf from memory into f26
li x3, 0x78b7c572 # load x3 with value 0x78b7c572
sw x3, 0(x2) # store 0x78b7c572 in memory
flw f15, 0(x2) # load 0x78b7c572 from memory into f15
li x3, 0xfbbeaec0 # load x3 with value 0xfbbeaec0
sw x3, 0(x2) # store 0xfbbeaec0 in memory
flw f29, 0(x2) # load 0xfbbeaec0 from memory into f29
fmsub.s f10, f26, f15, f29 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xab26ec6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbb35f17 # load x3 with value 0xdbb35f17
sw x3, 0(x2) # store 0xdbb35f17 in memory
flw f22, 0(x2) # load 0xdbb35f17 from memory into f22
li x3, 0x59cff732 # load x3 with value 0x59cff732
sw x3, 0(x2) # store 0x59cff732 in memory
flw f5, 0(x2) # load 0x59cff732 from memory into f5
li x3, 0xd02c3922 # load x3 with value 0xd02c3922
sw x3, 0(x2) # store 0xd02c3922 in memory
flw f20, 0(x2) # load 0xd02c3922 from memory into f20
fmsub.s f11, f22, f5, f20 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x114d2ddb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0f348444 # load x3 with value 0x0f348444
sw x3, 0(x2) # store 0x0f348444 in memory
flw f13, 0(x2) # load 0x0f348444 from memory into f13
li x3, 0x4f87b45a # load x3 with value 0x4f87b45a
sw x3, 0(x2) # store 0x4f87b45a in memory
flw f7, 0(x2) # load 0x4f87b45a from memory into f7
li x3, 0x39845b08 # load x3 with value 0x39845b08
sw x3, 0(x2) # store 0x39845b08 in memory
flw f19, 0(x2) # load 0x39845b08 from memory into f19
fmsub.s f12, f13, f7, f19 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x60aa3650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x934ff821 # load x3 with value 0x934ff821
sw x3, 0(x2) # store 0x934ff821 in memory
flw f30, 0(x2) # load 0x934ff821 from memory into f30
li x3, 0x70b3e679 # load x3 with value 0x70b3e679
sw x3, 0(x2) # store 0x70b3e679 in memory
flw f13, 0(x2) # load 0x70b3e679 from memory into f13
li x3, 0x5e2b58d8 # load x3 with value 0x5e2b58d8
sw x3, 0(x2) # store 0x5e2b58d8 in memory
flw f15, 0(x2) # load 0x5e2b58d8 from memory into f15
fmsub.s f13, f30, f13, f15 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x21627ad8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3fc4a66 # load x3 with value 0xa3fc4a66
sw x3, 0(x2) # store 0xa3fc4a66 in memory
flw f22, 0(x2) # load 0xa3fc4a66 from memory into f22
li x3, 0x4175bae9 # load x3 with value 0x4175bae9
sw x3, 0(x2) # store 0x4175bae9 in memory
flw f7, 0(x2) # load 0x4175bae9 from memory into f7
li x3, 0x3e64f698 # load x3 with value 0x3e64f698
sw x3, 0(x2) # store 0x3e64f698 in memory
flw f18, 0(x2) # load 0x3e64f698 from memory into f18
fmsub.s f14, f22, f7, f18 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0x11fc8ecf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf7521b67 # load x3 with value 0xf7521b67
sw x3, 0(x2) # store 0xf7521b67 in memory
flw f23, 0(x2) # load 0xf7521b67 from memory into f23
li x3, 0x8a4a574c # load x3 with value 0x8a4a574c
sw x3, 0(x2) # store 0x8a4a574c in memory
flw f2, 0(x2) # load 0x8a4a574c from memory into f2
li x3, 0x5c9f2651 # load x3 with value 0x5c9f2651
sw x3, 0(x2) # store 0x5c9f2651 in memory
flw f24, 0(x2) # load 0x5c9f2651 from memory into f24
fmsub.s f15, f23, f2, f24 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x776c1666 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x929f003b # load x3 with value 0x929f003b
sw x3, 0(x2) # store 0x929f003b in memory
flw f16, 0(x2) # load 0x929f003b from memory into f16
li x3, 0xac769b99 # load x3 with value 0xac769b99
sw x3, 0(x2) # store 0xac769b99 in memory
flw f1, 0(x2) # load 0xac769b99 from memory into f1
li x3, 0x8660f15c # load x3 with value 0x8660f15c
sw x3, 0(x2) # store 0x8660f15c in memory
flw f19, 0(x2) # load 0x8660f15c from memory into f19
fmsub.s f16, f16, f1, f19 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xd6d22ee2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca4c8031 # load x3 with value 0xca4c8031
sw x3, 0(x2) # store 0xca4c8031 in memory
flw f23, 0(x2) # load 0xca4c8031 from memory into f23
li x3, 0x0b5eeb61 # load x3 with value 0x0b5eeb61
sw x3, 0(x2) # store 0x0b5eeb61 in memory
flw f22, 0(x2) # load 0x0b5eeb61 from memory into f22
li x3, 0x28e3bc70 # load x3 with value 0x28e3bc70
sw x3, 0(x2) # store 0x28e3bc70 in memory
flw f7, 0(x2) # load 0x28e3bc70 from memory into f7
fmsub.s f17, f23, f22, f7 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0xf05a4253 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe0956351 # load x3 with value 0xe0956351
sw x3, 0(x2) # store 0xe0956351 in memory
flw f3, 0(x2) # load 0xe0956351 from memory into f3
li x3, 0x14716418 # load x3 with value 0x14716418
sw x3, 0(x2) # store 0x14716418 in memory
flw f11, 0(x2) # load 0x14716418 from memory into f11
li x3, 0xb040f2ef # load x3 with value 0xb040f2ef
sw x3, 0(x2) # store 0xb040f2ef in memory
flw f5, 0(x2) # load 0xb040f2ef from memory into f5
fmsub.s f18, f3, f11, f5 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xa29dc8f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b6d7b5f # load x3 with value 0x6b6d7b5f
sw x3, 0(x2) # store 0x6b6d7b5f in memory
flw f16, 0(x2) # load 0x6b6d7b5f from memory into f16
li x3, 0xbb9d65c7 # load x3 with value 0xbb9d65c7
sw x3, 0(x2) # store 0xbb9d65c7 in memory
flw f3, 0(x2) # load 0xbb9d65c7 from memory into f3
li x3, 0xe9d26565 # load x3 with value 0xe9d26565
sw x3, 0(x2) # store 0xe9d26565 in memory
flw f8, 0(x2) # load 0xe9d26565 from memory into f8
fmsub.s f19, f16, f3, f8 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x80ce7dbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06e8b702 # load x3 with value 0x06e8b702
sw x3, 0(x2) # store 0x06e8b702 in memory
flw f28, 0(x2) # load 0x06e8b702 from memory into f28
li x3, 0x38d5a619 # load x3 with value 0x38d5a619
sw x3, 0(x2) # store 0x38d5a619 in memory
flw f20, 0(x2) # load 0x38d5a619 from memory into f20
li x3, 0x63954cff # load x3 with value 0x63954cff
sw x3, 0(x2) # store 0x63954cff in memory
flw f5, 0(x2) # load 0x63954cff from memory into f5
fmsub.s f20, f28, f20, f5 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0xa266c34d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xceacfa61 # load x3 with value 0xceacfa61
sw x3, 0(x2) # store 0xceacfa61 in memory
flw f18, 0(x2) # load 0xceacfa61 from memory into f18
li x3, 0xfaf83a1a # load x3 with value 0xfaf83a1a
sw x3, 0(x2) # store 0xfaf83a1a in memory
flw f9, 0(x2) # load 0xfaf83a1a from memory into f9
li x3, 0x91ae7610 # load x3 with value 0x91ae7610
sw x3, 0(x2) # store 0x91ae7610 in memory
flw f12, 0(x2) # load 0x91ae7610 from memory into f12
fmsub.s f21, f18, f9, f12 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x23e15578 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d130f60 # load x3 with value 0x9d130f60
sw x3, 0(x2) # store 0x9d130f60 in memory
flw f1, 0(x2) # load 0x9d130f60 from memory into f1
li x3, 0x7e675e28 # load x3 with value 0x7e675e28
sw x3, 0(x2) # store 0x7e675e28 in memory
flw f21, 0(x2) # load 0x7e675e28 from memory into f21
li x3, 0x79e43d5a # load x3 with value 0x79e43d5a
sw x3, 0(x2) # store 0x79e43d5a in memory
flw f17, 0(x2) # load 0x79e43d5a from memory into f17
fmsub.s f22, f1, f21, f17 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xa1011e39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee5c77b7 # load x3 with value 0xee5c77b7
sw x3, 0(x2) # store 0xee5c77b7 in memory
flw f15, 0(x2) # load 0xee5c77b7 from memory into f15
li x3, 0x7e9bab78 # load x3 with value 0x7e9bab78
sw x3, 0(x2) # store 0x7e9bab78 in memory
flw f16, 0(x2) # load 0x7e9bab78 from memory into f16
li x3, 0xd7ea9430 # load x3 with value 0xd7ea9430
sw x3, 0(x2) # store 0xd7ea9430 in memory
flw f1, 0(x2) # load 0xd7ea9430 from memory into f1
fmsub.s f23, f15, f16, f1 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x354f7cfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x06c73a2c # load x3 with value 0x06c73a2c
sw x3, 0(x2) # store 0x06c73a2c in memory
flw f11, 0(x2) # load 0x06c73a2c from memory into f11
li x3, 0x0c1c9232 # load x3 with value 0x0c1c9232
sw x3, 0(x2) # store 0x0c1c9232 in memory
flw f8, 0(x2) # load 0x0c1c9232 from memory into f8
li x3, 0x6488e2ab # load x3 with value 0x6488e2ab
sw x3, 0(x2) # store 0x6488e2ab in memory
flw f23, 0(x2) # load 0x6488e2ab from memory into f23
fmsub.s f24, f11, f8, f23 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0xce20d4f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9286ed93 # load x3 with value 0x9286ed93
sw x3, 0(x2) # store 0x9286ed93 in memory
flw f7, 0(x2) # load 0x9286ed93 from memory into f7
li x3, 0xb5c9cff9 # load x3 with value 0xb5c9cff9
sw x3, 0(x2) # store 0xb5c9cff9 in memory
flw f10, 0(x2) # load 0xb5c9cff9 from memory into f10
li x3, 0xcd47e5d8 # load x3 with value 0xcd47e5d8
sw x3, 0(x2) # store 0xcd47e5d8 in memory
flw f27, 0(x2) # load 0xcd47e5d8 from memory into f27
fmsub.s f25, f7, f10, f27 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0xed167d7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0c0203eb # load x3 with value 0x0c0203eb
sw x3, 0(x2) # store 0x0c0203eb in memory
flw f30, 0(x2) # load 0x0c0203eb from memory into f30
li x3, 0xd438f1b9 # load x3 with value 0xd438f1b9
sw x3, 0(x2) # store 0xd438f1b9 in memory
flw f1, 0(x2) # load 0xd438f1b9 from memory into f1
li x3, 0x42f740f1 # load x3 with value 0x42f740f1
sw x3, 0(x2) # store 0x42f740f1 in memory
flw f28, 0(x2) # load 0x42f740f1 from memory into f28
fmsub.s f26, f30, f1, f28 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xf4ac9568 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e1f48ab # load x3 with value 0x1e1f48ab
sw x3, 0(x2) # store 0x1e1f48ab in memory
flw f4, 0(x2) # load 0x1e1f48ab from memory into f4
li x3, 0x708cee3a # load x3 with value 0x708cee3a
sw x3, 0(x2) # store 0x708cee3a in memory
flw f21, 0(x2) # load 0x708cee3a from memory into f21
li x3, 0x2ebe4e04 # load x3 with value 0x2ebe4e04
sw x3, 0(x2) # store 0x2ebe4e04 in memory
flw f26, 0(x2) # load 0x2ebe4e04 from memory into f26
fmsub.s f27, f4, f21, f26 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0xac4aa627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd197405d # load x3 with value 0xd197405d
sw x3, 0(x2) # store 0xd197405d in memory
flw f27, 0(x2) # load 0xd197405d from memory into f27
li x3, 0xa5302654 # load x3 with value 0xa5302654
sw x3, 0(x2) # store 0xa5302654 in memory
flw f16, 0(x2) # load 0xa5302654 from memory into f16
li x3, 0xe57f1ce4 # load x3 with value 0xe57f1ce4
sw x3, 0(x2) # store 0xe57f1ce4 in memory
flw f14, 0(x2) # load 0xe57f1ce4 from memory into f14
fmsub.s f28, f27, f16, f14 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x492451cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77280a55 # load x3 with value 0x77280a55
sw x3, 0(x2) # store 0x77280a55 in memory
flw f13, 0(x2) # load 0x77280a55 from memory into f13
li x3, 0x2108bf0b # load x3 with value 0x2108bf0b
sw x3, 0(x2) # store 0x2108bf0b in memory
flw f19, 0(x2) # load 0x2108bf0b from memory into f19
li x3, 0xd4dee176 # load x3 with value 0xd4dee176
sw x3, 0(x2) # store 0xd4dee176 in memory
flw f31, 0(x2) # load 0xd4dee176 from memory into f31
fmsub.s f29, f13, f19, f31 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0xa8ceb318 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca3be786 # load x3 with value 0xca3be786
sw x3, 0(x2) # store 0xca3be786 in memory
flw f17, 0(x2) # load 0xca3be786 from memory into f17
li x3, 0xbd9a53e0 # load x3 with value 0xbd9a53e0
sw x3, 0(x2) # store 0xbd9a53e0 in memory
flw f24, 0(x2) # load 0xbd9a53e0 from memory into f24
li x3, 0xd3425380 # load x3 with value 0xd3425380
sw x3, 0(x2) # store 0xd3425380 in memory
flw f19, 0(x2) # load 0xd3425380 from memory into f19
fmsub.s f30, f17, f24, f19 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x8726eeb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x351bb7d2 # load x3 with value 0x351bb7d2
sw x3, 0(x2) # store 0x351bb7d2 in memory
flw f12, 0(x2) # load 0x351bb7d2 from memory into f12
li x3, 0xa042d84a # load x3 with value 0xa042d84a
sw x3, 0(x2) # store 0xa042d84a in memory
flw f11, 0(x2) # load 0xa042d84a from memory into f11
li x3, 0x3c9fadfe # load x3 with value 0x3c9fadfe
sw x3, 0(x2) # store 0x3c9fadfe in memory
flw f18, 0(x2) # load 0x3c9fadfe from memory into f18
fmsub.s f31, f12, f11, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x13, 0xaa6e51ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeee04a5a # load x3 with value 0xeee04a5a
sw x3, 0(x2) # store 0xeee04a5a in memory
flw f0, 0(x2) # load 0xeee04a5a from memory into f0
li x3, 0x8b8f93a7 # load x3 with value 0x8b8f93a7
sw x3, 0(x2) # store 0x8b8f93a7 in memory
flw f12, 0(x2) # load 0x8b8f93a7 from memory into f12
li x3, 0x3658a019 # load x3 with value 0x3658a019
sw x3, 0(x2) # store 0x3658a019 in memory
flw f11, 0(x2) # load 0x3658a019 from memory into f11
fmsub.s f13, f0, f12, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x6, 0x0b6a762c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x49305329 # load x3 with value 0x49305329
sw x3, 0(x2) # store 0x49305329 in memory
flw f1, 0(x2) # load 0x49305329 from memory into f1
li x3, 0xbcbc26d3 # load x3 with value 0xbcbc26d3
sw x3, 0(x2) # store 0xbcbc26d3 in memory
flw f18, 0(x2) # load 0xbcbc26d3 from memory into f18
li x3, 0x46fce92d # load x3 with value 0x46fce92d
sw x3, 0(x2) # store 0x46fce92d in memory
flw f22, 0(x2) # load 0x46fce92d from memory into f22
fmsub.s f6, f1, f18, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x2, 0x6ec6d8cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfae0ced9 # load x3 with value 0xfae0ced9
sw x3, 0(x2) # store 0xfae0ced9 in memory
flw f2, 0(x2) # load 0xfae0ced9 from memory into f2
li x3, 0x68f53142 # load x3 with value 0x68f53142
sw x3, 0(x2) # store 0x68f53142 in memory
flw f24, 0(x2) # load 0x68f53142 from memory into f24
li x3, 0xa77925d2 # load x3 with value 0xa77925d2
sw x3, 0(x2) # store 0xa77925d2 in memory
flw f3, 0(x2) # load 0xa77925d2 from memory into f3
fmsub.s f2, f2, f24, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x8, 0xa4f7437b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x146b8d09 # load x3 with value 0x146b8d09
sw x3, 0(x2) # store 0x146b8d09 in memory
flw f3, 0(x2) # load 0x146b8d09 from memory into f3
li x3, 0xdfbb9731 # load x3 with value 0xdfbb9731
sw x3, 0(x2) # store 0xdfbb9731 in memory
flw f11, 0(x2) # load 0xdfbb9731 from memory into f11
li x3, 0xb0969b5c # load x3 with value 0xb0969b5c
sw x3, 0(x2) # store 0xb0969b5c in memory
flw f5, 0(x2) # load 0xb0969b5c from memory into f5
fmsub.s f8, f3, f11, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x7, 0xa021fbb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0c4b751 # load x3 with value 0xf0c4b751
sw x3, 0(x2) # store 0xf0c4b751 in memory
flw f4, 0(x2) # load 0xf0c4b751 from memory into f4
li x3, 0x9053bc4e # load x3 with value 0x9053bc4e
sw x3, 0(x2) # store 0x9053bc4e in memory
flw f26, 0(x2) # load 0x9053bc4e from memory into f26
li x3, 0x9d489853 # load x3 with value 0x9d489853
sw x3, 0(x2) # store 0x9d489853 in memory
flw f31, 0(x2) # load 0x9d489853 from memory into f31
fmsub.s f7, f4, f26, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x27, 0xd3cef123 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd99dd1f # load x3 with value 0xdd99dd1f
sw x3, 0(x2) # store 0xdd99dd1f in memory
flw f5, 0(x2) # load 0xdd99dd1f from memory into f5
li x3, 0xb0c20172 # load x3 with value 0xb0c20172
sw x3, 0(x2) # store 0xb0c20172 in memory
flw f1, 0(x2) # load 0xb0c20172 from memory into f1
li x3, 0x7a1dad96 # load x3 with value 0x7a1dad96
sw x3, 0(x2) # store 0x7a1dad96 in memory
flw f22, 0(x2) # load 0x7a1dad96 from memory into f22
fmsub.s f27, f5, f1, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x31, 0x85662420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4644fff5 # load x3 with value 0x4644fff5
sw x3, 0(x2) # store 0x4644fff5 in memory
flw f6, 0(x2) # load 0x4644fff5 from memory into f6
li x3, 0x52e317eb # load x3 with value 0x52e317eb
sw x3, 0(x2) # store 0x52e317eb in memory
flw f12, 0(x2) # load 0x52e317eb from memory into f12
li x3, 0xb5968a3d # load x3 with value 0xb5968a3d
sw x3, 0(x2) # store 0xb5968a3d in memory
flw f9, 0(x2) # load 0xb5968a3d from memory into f9
fmsub.s f31, f6, f12, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x6, 0xe263dfd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf071bfe1 # load x3 with value 0xf071bfe1
sw x3, 0(x2) # store 0xf071bfe1 in memory
flw f7, 0(x2) # load 0xf071bfe1 from memory into f7
li x3, 0x8229f4fa # load x3 with value 0x8229f4fa
sw x3, 0(x2) # store 0x8229f4fa in memory
flw f14, 0(x2) # load 0x8229f4fa from memory into f14
li x3, 0x8c5d9298 # load x3 with value 0x8c5d9298
sw x3, 0(x2) # store 0x8c5d9298 in memory
flw f24, 0(x2) # load 0x8c5d9298 from memory into f24
fmsub.s f6, f7, f14, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x23, 0xe74465c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9077e915 # load x3 with value 0x9077e915
sw x3, 0(x2) # store 0x9077e915 in memory
flw f8, 0(x2) # load 0x9077e915 from memory into f8
li x3, 0x506a74df # load x3 with value 0x506a74df
sw x3, 0(x2) # store 0x506a74df in memory
flw f27, 0(x2) # load 0x506a74df from memory into f27
li x3, 0x4e6d7f67 # load x3 with value 0x4e6d7f67
sw x3, 0(x2) # store 0x4e6d7f67 in memory
flw f1, 0(x2) # load 0x4e6d7f67 from memory into f1
fmsub.s f23, f8, f27, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x11, 0x7157d3a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfec44a2f # load x3 with value 0xfec44a2f
sw x3, 0(x2) # store 0xfec44a2f in memory
flw f9, 0(x2) # load 0xfec44a2f from memory into f9
li x3, 0x5b4b3466 # load x3 with value 0x5b4b3466
sw x3, 0(x2) # store 0x5b4b3466 in memory
flw f4, 0(x2) # load 0x5b4b3466 from memory into f4
li x3, 0x5d2a8db1 # load x3 with value 0x5d2a8db1
sw x3, 0(x2) # store 0x5d2a8db1 in memory
flw f24, 0(x2) # load 0x5d2a8db1 from memory into f24
fmsub.s f11, f9, f4, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x14, 0xb79f8ec6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b0876af # load x3 with value 0x6b0876af
sw x3, 0(x2) # store 0x6b0876af in memory
flw f10, 0(x2) # load 0x6b0876af from memory into f10
li x3, 0x1b56be72 # load x3 with value 0x1b56be72
sw x3, 0(x2) # store 0x1b56be72 in memory
flw f12, 0(x2) # load 0x1b56be72 from memory into f12
li x3, 0x82d56fbe # load x3 with value 0x82d56fbe
sw x3, 0(x2) # store 0x82d56fbe in memory
flw f11, 0(x2) # load 0x82d56fbe from memory into f11
fmsub.s f14, f10, f12, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x10, 0x09630696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f3f5e76 # load x3 with value 0x1f3f5e76
sw x3, 0(x2) # store 0x1f3f5e76 in memory
flw f11, 0(x2) # load 0x1f3f5e76 from memory into f11
li x3, 0x3ed4cfe2 # load x3 with value 0x3ed4cfe2
sw x3, 0(x2) # store 0x3ed4cfe2 in memory
flw f8, 0(x2) # load 0x3ed4cfe2 from memory into f8
li x3, 0x4a5ee9b4 # load x3 with value 0x4a5ee9b4
sw x3, 0(x2) # store 0x4a5ee9b4 in memory
flw f17, 0(x2) # load 0x4a5ee9b4 from memory into f17
fmsub.s f10, f11, f8, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x10, 0x5336664a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4f63adc # load x3 with value 0xd4f63adc
sw x3, 0(x2) # store 0xd4f63adc in memory
flw f12, 0(x2) # load 0xd4f63adc from memory into f12
li x3, 0x6462bd3e # load x3 with value 0x6462bd3e
sw x3, 0(x2) # store 0x6462bd3e in memory
flw f24, 0(x2) # load 0x6462bd3e from memory into f24
li x3, 0x4ddc06fa # load x3 with value 0x4ddc06fa
sw x3, 0(x2) # store 0x4ddc06fa in memory
flw f1, 0(x2) # load 0x4ddc06fa from memory into f1
fmsub.s f10, f12, f24, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x16, 0xc973f756 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x52625d9e # load x3 with value 0x52625d9e
sw x3, 0(x2) # store 0x52625d9e in memory
flw f13, 0(x2) # load 0x52625d9e from memory into f13
li x3, 0xd1cd6214 # load x3 with value 0xd1cd6214
sw x3, 0(x2) # store 0xd1cd6214 in memory
flw f27, 0(x2) # load 0xd1cd6214 from memory into f27
li x3, 0x675fada5 # load x3 with value 0x675fada5
sw x3, 0(x2) # store 0x675fada5 in memory
flw f20, 0(x2) # load 0x675fada5 from memory into f20
fmsub.s f16, f13, f27, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x31, 0x1df8d441 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x579de0e0 # load x3 with value 0x579de0e0
sw x3, 0(x2) # store 0x579de0e0 in memory
flw f14, 0(x2) # load 0x579de0e0 from memory into f14
li x3, 0x041c4bd1 # load x3 with value 0x041c4bd1
sw x3, 0(x2) # store 0x041c4bd1 in memory
flw f12, 0(x2) # load 0x041c4bd1 from memory into f12
li x3, 0xff7322c6 # load x3 with value 0xff7322c6
sw x3, 0(x2) # store 0xff7322c6 in memory
flw f21, 0(x2) # load 0xff7322c6 from memory into f21
fmsub.s f31, f14, f12, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x10, 0x2c942b4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1e4d6cb4 # load x3 with value 0x1e4d6cb4
sw x3, 0(x2) # store 0x1e4d6cb4 in memory
flw f15, 0(x2) # load 0x1e4d6cb4 from memory into f15
li x3, 0x05fc3292 # load x3 with value 0x05fc3292
sw x3, 0(x2) # store 0x05fc3292 in memory
flw f25, 0(x2) # load 0x05fc3292 from memory into f25
li x3, 0x43e03cc5 # load x3 with value 0x43e03cc5
sw x3, 0(x2) # store 0x43e03cc5 in memory
flw f1, 0(x2) # load 0x43e03cc5 from memory into f1
fmsub.s f10, f15, f25, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x22, 0xd9b83daa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc12bf55c # load x3 with value 0xc12bf55c
sw x3, 0(x2) # store 0xc12bf55c in memory
flw f16, 0(x2) # load 0xc12bf55c from memory into f16
li x3, 0x17cc988b # load x3 with value 0x17cc988b
sw x3, 0(x2) # store 0x17cc988b in memory
flw f9, 0(x2) # load 0x17cc988b from memory into f9
li x3, 0x2ec635c0 # load x3 with value 0x2ec635c0
sw x3, 0(x2) # store 0x2ec635c0 in memory
flw f19, 0(x2) # load 0x2ec635c0 from memory into f19
fmsub.s f22, f16, f9, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x8, 0x39e29c09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2b53a07 # load x3 with value 0xb2b53a07
sw x3, 0(x2) # store 0xb2b53a07 in memory
flw f17, 0(x2) # load 0xb2b53a07 from memory into f17
li x3, 0xc7c6efcc # load x3 with value 0xc7c6efcc
sw x3, 0(x2) # store 0xc7c6efcc in memory
flw f10, 0(x2) # load 0xc7c6efcc from memory into f10
li x3, 0xcf4f8513 # load x3 with value 0xcf4f8513
sw x3, 0(x2) # store 0xcf4f8513 in memory
flw f28, 0(x2) # load 0xcf4f8513 from memory into f28
fmsub.s f8, f17, f10, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x9, 0xbff4e51e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb3fd6d70 # load x3 with value 0xb3fd6d70
sw x3, 0(x2) # store 0xb3fd6d70 in memory
flw f18, 0(x2) # load 0xb3fd6d70 from memory into f18
li x3, 0x8b2c7db1 # load x3 with value 0x8b2c7db1
sw x3, 0(x2) # store 0x8b2c7db1 in memory
flw f6, 0(x2) # load 0x8b2c7db1 from memory into f6
li x3, 0xc4de33f5 # load x3 with value 0xc4de33f5
sw x3, 0(x2) # store 0xc4de33f5 in memory
flw f21, 0(x2) # load 0xc4de33f5 from memory into f21
fmsub.s f9, f18, f6, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x20, 0x3a8c69b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x794255a5 # load x3 with value 0x794255a5
sw x3, 0(x2) # store 0x794255a5 in memory
flw f19, 0(x2) # load 0x794255a5 from memory into f19
li x3, 0x7b8b1c4b # load x3 with value 0x7b8b1c4b
sw x3, 0(x2) # store 0x7b8b1c4b in memory
flw f15, 0(x2) # load 0x7b8b1c4b from memory into f15
li x3, 0xb7ada448 # load x3 with value 0xb7ada448
sw x3, 0(x2) # store 0xb7ada448 in memory
flw f29, 0(x2) # load 0xb7ada448 from memory into f29
fmsub.s f20, f19, f15, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x4, 0x6c013007 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x420c78ce # load x3 with value 0x420c78ce
sw x3, 0(x2) # store 0x420c78ce in memory
flw f20, 0(x2) # load 0x420c78ce from memory into f20
li x3, 0x5f833760 # load x3 with value 0x5f833760
sw x3, 0(x2) # store 0x5f833760 in memory
flw f17, 0(x2) # load 0x5f833760 from memory into f17
li x3, 0x6eff2890 # load x3 with value 0x6eff2890
sw x3, 0(x2) # store 0x6eff2890 in memory
flw f29, 0(x2) # load 0x6eff2890 from memory into f29
fmsub.s f4, f20, f17, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x21, 0x494859c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x364d7ce0 # load x3 with value 0x364d7ce0
sw x3, 0(x2) # store 0x364d7ce0 in memory
flw f21, 0(x2) # load 0x364d7ce0 from memory into f21
li x3, 0x1628a206 # load x3 with value 0x1628a206
sw x3, 0(x2) # store 0x1628a206 in memory
flw f18, 0(x2) # load 0x1628a206 from memory into f18
li x3, 0x81dbb488 # load x3 with value 0x81dbb488
sw x3, 0(x2) # store 0x81dbb488 in memory
flw f4, 0(x2) # load 0x81dbb488 from memory into f4
fmsub.s f21, f21, f18, f4 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x29, 0xca46c01c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4eaae20e # load x3 with value 0x4eaae20e
sw x3, 0(x2) # store 0x4eaae20e in memory
flw f22, 0(x2) # load 0x4eaae20e from memory into f22
li x3, 0x42c24b6b # load x3 with value 0x42c24b6b
sw x3, 0(x2) # store 0x42c24b6b in memory
flw f17, 0(x2) # load 0x42c24b6b from memory into f17
li x3, 0x93883fc2 # load x3 with value 0x93883fc2
sw x3, 0(x2) # store 0x93883fc2 in memory
flw f24, 0(x2) # load 0x93883fc2 from memory into f24
fmsub.s f29, f22, f17, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x29, 0x260f4e9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a001110 # load x3 with value 0x2a001110
sw x3, 0(x2) # store 0x2a001110 in memory
flw f23, 0(x2) # load 0x2a001110 from memory into f23
li x3, 0x7eb60b09 # load x3 with value 0x7eb60b09
sw x3, 0(x2) # store 0x7eb60b09 in memory
flw f28, 0(x2) # load 0x7eb60b09 from memory into f28
li x3, 0x24808e83 # load x3 with value 0x24808e83
sw x3, 0(x2) # store 0x24808e83 in memory
flw f15, 0(x2) # load 0x24808e83 from memory into f15
fmsub.s f29, f23, f28, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x14, 0x97db52af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0b268693 # load x3 with value 0x0b268693
sw x3, 0(x2) # store 0x0b268693 in memory
flw f24, 0(x2) # load 0x0b268693 from memory into f24
li x3, 0x0202b7b0 # load x3 with value 0x0202b7b0
sw x3, 0(x2) # store 0x0202b7b0 in memory
flw f17, 0(x2) # load 0x0202b7b0 from memory into f17
li x3, 0x97f99d4f # load x3 with value 0x97f99d4f
sw x3, 0(x2) # store 0x97f99d4f in memory
flw f12, 0(x2) # load 0x97f99d4f from memory into f12
fmsub.s f14, f24, f17, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x1, 0x726b7d32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb1ebc93 # load x3 with value 0xcb1ebc93
sw x3, 0(x2) # store 0xcb1ebc93 in memory
flw f25, 0(x2) # load 0xcb1ebc93 from memory into f25
li x3, 0xa62191ce # load x3 with value 0xa62191ce
sw x3, 0(x2) # store 0xa62191ce in memory
flw f27, 0(x2) # load 0xa62191ce from memory into f27
li x3, 0x8f4b519b # load x3 with value 0x8f4b519b
sw x3, 0(x2) # store 0x8f4b519b in memory
flw f26, 0(x2) # load 0x8f4b519b from memory into f26
fmsub.s f1, f25, f27, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x18, 0x7a958fe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7d3ec727 # load x3 with value 0x7d3ec727
sw x3, 0(x2) # store 0x7d3ec727 in memory
flw f26, 0(x2) # load 0x7d3ec727 from memory into f26
li x3, 0x77337985 # load x3 with value 0x77337985
sw x3, 0(x2) # store 0x77337985 in memory
flw f28, 0(x2) # load 0x77337985 from memory into f28
li x3, 0x133dda47 # load x3 with value 0x133dda47
sw x3, 0(x2) # store 0x133dda47 in memory
flw f6, 0(x2) # load 0x133dda47 from memory into f6
fmsub.s f18, f26, f28, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x23, 0x9bed8511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x31c3797e # load x3 with value 0x31c3797e
sw x3, 0(x2) # store 0x31c3797e in memory
flw f27, 0(x2) # load 0x31c3797e from memory into f27
li x3, 0x93e0b3c7 # load x3 with value 0x93e0b3c7
sw x3, 0(x2) # store 0x93e0b3c7 in memory
flw f14, 0(x2) # load 0x93e0b3c7 from memory into f14
li x3, 0x12fc2127 # load x3 with value 0x12fc2127
sw x3, 0(x2) # store 0x12fc2127 in memory
flw f12, 0(x2) # load 0x12fc2127 from memory into f12
fmsub.s f23, f27, f14, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x15, 0x99387e75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x474e4c50 # load x3 with value 0x474e4c50
sw x3, 0(x2) # store 0x474e4c50 in memory
flw f28, 0(x2) # load 0x474e4c50 from memory into f28
li x3, 0xe31f7466 # load x3 with value 0xe31f7466
sw x3, 0(x2) # store 0xe31f7466 in memory
flw f11, 0(x2) # load 0xe31f7466 from memory into f11
li x3, 0x6da83bab # load x3 with value 0x6da83bab
sw x3, 0(x2) # store 0x6da83bab in memory
flw f17, 0(x2) # load 0x6da83bab from memory into f17
fmsub.s f15, f28, f11, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x1, 0x669ce050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x05239f67 # load x3 with value 0x05239f67
sw x3, 0(x2) # store 0x05239f67 in memory
flw f29, 0(x2) # load 0x05239f67 from memory into f29
li x3, 0x2ce3a0b4 # load x3 with value 0x2ce3a0b4
sw x3, 0(x2) # store 0x2ce3a0b4 in memory
flw f8, 0(x2) # load 0x2ce3a0b4 from memory into f8
li x3, 0xc622b767 # load x3 with value 0xc622b767
sw x3, 0(x2) # store 0xc622b767 in memory
flw f19, 0(x2) # load 0xc622b767 from memory into f19
fmsub.s f1, f29, f8, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x23, 0xb6bf7c3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xddf5f3a4 # load x3 with value 0xddf5f3a4
sw x3, 0(x2) # store 0xddf5f3a4 in memory
flw f30, 0(x2) # load 0xddf5f3a4 from memory into f30
li x3, 0xcd9ff509 # load x3 with value 0xcd9ff509
sw x3, 0(x2) # store 0xcd9ff509 in memory
flw f21, 0(x2) # load 0xcd9ff509 from memory into f21
li x3, 0xaa2eb967 # load x3 with value 0xaa2eb967
sw x3, 0(x2) # store 0xaa2eb967 in memory
flw f24, 0(x2) # load 0xaa2eb967 from memory into f24
fmsub.s f23, f30, f21, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x29, 0x1c106dde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x39c8f67a # load x3 with value 0x39c8f67a
sw x3, 0(x2) # store 0x39c8f67a in memory
flw f31, 0(x2) # load 0x39c8f67a from memory into f31
li x3, 0x846b1ef8 # load x3 with value 0x846b1ef8
sw x3, 0(x2) # store 0x846b1ef8 in memory
flw f20, 0(x2) # load 0x846b1ef8 from memory into f20
li x3, 0x0aa2d630 # load x3 with value 0x0aa2d630
sw x3, 0(x2) # store 0x0aa2d630 in memory
flw f15, 0(x2) # load 0x0aa2d630 from memory into f15
fmsub.s f29, f31, f20, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x20, 0xc30ed15d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb7512c16 # load x3 with value 0xb7512c16
sw x3, 0(x2) # store 0xb7512c16 in memory
flw f9, 0(x2) # load 0xb7512c16 from memory into f9
li x3, 0x7566b491 # load x3 with value 0x7566b491
sw x3, 0(x2) # store 0x7566b491 in memory
flw f0, 0(x2) # load 0x7566b491 from memory into f0
li x3, 0x959a21ad # load x3 with value 0x959a21ad
sw x3, 0(x2) # store 0x959a21ad in memory
flw f11, 0(x2) # load 0x959a21ad from memory into f11
fmsub.s f20, f9, f0, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x28, 0x70684d5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6eb4577d # load x3 with value 0x6eb4577d
sw x3, 0(x2) # store 0x6eb4577d in memory
flw f29, 0(x2) # load 0x6eb4577d from memory into f29
li x3, 0xcc7c8f1c # load x3 with value 0xcc7c8f1c
sw x3, 0(x2) # store 0xcc7c8f1c in memory
flw f1, 0(x2) # load 0xcc7c8f1c from memory into f1
li x3, 0x8a7b124c # load x3 with value 0x8a7b124c
sw x3, 0(x2) # store 0x8a7b124c in memory
flw f13, 0(x2) # load 0x8a7b124c from memory into f13
fmsub.s f28, f29, f1, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x10, 0x14c3abd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2718a2b4 # load x3 with value 0x2718a2b4
sw x3, 0(x2) # store 0x2718a2b4 in memory
flw f3, 0(x2) # load 0x2718a2b4 from memory into f3
li x3, 0xd950b2e3 # load x3 with value 0xd950b2e3
sw x3, 0(x2) # store 0xd950b2e3 in memory
flw f2, 0(x2) # load 0xd950b2e3 from memory into f2
li x3, 0x934ec30c # load x3 with value 0x934ec30c
sw x3, 0(x2) # store 0x934ec30c in memory
flw f20, 0(x2) # load 0x934ec30c from memory into f20
fmsub.s f10, f3, f2, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x5, 0x1058bb9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3ded9be7 # load x3 with value 0x3ded9be7
sw x3, 0(x2) # store 0x3ded9be7 in memory
flw f12, 0(x2) # load 0x3ded9be7 from memory into f12
li x3, 0x02703d23 # load x3 with value 0x02703d23
sw x3, 0(x2) # store 0x02703d23 in memory
flw f3, 0(x2) # load 0x02703d23 from memory into f3
li x3, 0x7e8fded0 # load x3 with value 0x7e8fded0
sw x3, 0(x2) # store 0x7e8fded0 in memory
flw f15, 0(x2) # load 0x7e8fded0 from memory into f15
fmsub.s f5, f12, f3, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x16, 0xbca08629 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x218cf70b # load x3 with value 0x218cf70b
sw x3, 0(x2) # store 0x218cf70b in memory
flw f26, 0(x2) # load 0x218cf70b from memory into f26
li x3, 0x4c8fb8f9 # load x3 with value 0x4c8fb8f9
sw x3, 0(x2) # store 0x4c8fb8f9 in memory
flw f4, 0(x2) # load 0x4c8fb8f9 from memory into f4
li x3, 0x853010a9 # load x3 with value 0x853010a9
sw x3, 0(x2) # store 0x853010a9 in memory
flw f18, 0(x2) # load 0x853010a9 from memory into f18
fmsub.s f16, f26, f4, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x30, 0xad9b0e37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x175cab88 # load x3 with value 0x175cab88
sw x3, 0(x2) # store 0x175cab88 in memory
flw f25, 0(x2) # load 0x175cab88 from memory into f25
li x3, 0x2132819f # load x3 with value 0x2132819f
sw x3, 0(x2) # store 0x2132819f in memory
flw f5, 0(x2) # load 0x2132819f from memory into f5
li x3, 0x2fec8c30 # load x3 with value 0x2fec8c30
sw x3, 0(x2) # store 0x2fec8c30 in memory
flw f26, 0(x2) # load 0x2fec8c30 from memory into f26
fmsub.s f30, f25, f5, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x4, 0x3a48cbfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93deb482 # load x3 with value 0x93deb482
sw x3, 0(x2) # store 0x93deb482 in memory
flw f5, 0(x2) # load 0x93deb482 from memory into f5
li x3, 0xf949cd62 # load x3 with value 0xf949cd62
sw x3, 0(x2) # store 0xf949cd62 in memory
flw f6, 0(x2) # load 0xf949cd62 from memory into f6
li x3, 0x7489394b # load x3 with value 0x7489394b
sw x3, 0(x2) # store 0x7489394b in memory
flw f24, 0(x2) # load 0x7489394b from memory into f24
fmsub.s f4, f5, f6, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x13, 0xcba5303c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x063d8b56 # load x3 with value 0x063d8b56
sw x3, 0(x2) # store 0x063d8b56 in memory
flw f6, 0(x2) # load 0x063d8b56 from memory into f6
li x3, 0x02442d7b # load x3 with value 0x02442d7b
sw x3, 0(x2) # store 0x02442d7b in memory
flw f7, 0(x2) # load 0x02442d7b from memory into f7
li x3, 0x70ec3c4e # load x3 with value 0x70ec3c4e
sw x3, 0(x2) # store 0x70ec3c4e in memory
flw f19, 0(x2) # load 0x70ec3c4e from memory into f19
fmsub.s f13, f6, f7, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x2, 0x6e0a3caa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x66341eb7 # load x3 with value 0x66341eb7
sw x3, 0(x2) # store 0x66341eb7 in memory
flw f27, 0(x2) # load 0x66341eb7 from memory into f27
li x3, 0x666f809c # load x3 with value 0x666f809c
sw x3, 0(x2) # store 0x666f809c in memory
flw f8, 0(x2) # load 0x666f809c from memory into f8
li x3, 0xfaa84a4b # load x3 with value 0xfaa84a4b
sw x3, 0(x2) # store 0xfaa84a4b in memory
flw f30, 0(x2) # load 0xfaa84a4b from memory into f30
fmsub.s f2, f27, f8, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x2, 0x9c8b1163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x476c93b0 # load x3 with value 0x476c93b0
sw x3, 0(x2) # store 0x476c93b0 in memory
flw f28, 0(x2) # load 0x476c93b0 from memory into f28
li x3, 0x32b2870c # load x3 with value 0x32b2870c
sw x3, 0(x2) # store 0x32b2870c in memory
flw f9, 0(x2) # load 0x32b2870c from memory into f9
li x3, 0x7df97700 # load x3 with value 0x7df97700
sw x3, 0(x2) # store 0x7df97700 in memory
flw f3, 0(x2) # load 0x7df97700 from memory into f3
fmsub.s f2, f28, f9, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x6, 0x550a9775 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x51523f67 # load x3 with value 0x51523f67
sw x3, 0(x2) # store 0x51523f67 in memory
flw f11, 0(x2) # load 0x51523f67 from memory into f11
li x3, 0xf03fbe60 # load x3 with value 0xf03fbe60
sw x3, 0(x2) # store 0xf03fbe60 in memory
flw f10, 0(x2) # load 0xf03fbe60 from memory into f10
li x3, 0x860f70d4 # load x3 with value 0x860f70d4
sw x3, 0(x2) # store 0x860f70d4 in memory
flw f26, 0(x2) # load 0x860f70d4 from memory into f26
fmsub.s f6, f11, f10, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x3, 0x8ed5fb0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x09629be2 # load x3 with value 0x09629be2
sw x3, 0(x2) # store 0x09629be2 in memory
flw f2, 0(x2) # load 0x09629be2 from memory into f2
li x3, 0x037d5d0b # load x3 with value 0x037d5d0b
sw x3, 0(x2) # store 0x037d5d0b in memory
flw f11, 0(x2) # load 0x037d5d0b from memory into f11
li x3, 0xf37da401 # load x3 with value 0xf37da401
sw x3, 0(x2) # store 0xf37da401 in memory
flw f14, 0(x2) # load 0xf37da401 from memory into f14
fmsub.s f3, f2, f11, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x19, 0xa183b8bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6c11538 # load x3 with value 0xb6c11538
sw x3, 0(x2) # store 0xb6c11538 in memory
flw f10, 0(x2) # load 0xb6c11538 from memory into f10
li x3, 0xa3b2b392 # load x3 with value 0xa3b2b392
sw x3, 0(x2) # store 0xa3b2b392 in memory
flw f12, 0(x2) # load 0xa3b2b392 from memory into f12
li x3, 0x13617951 # load x3 with value 0x13617951
sw x3, 0(x2) # store 0x13617951 in memory
flw f9, 0(x2) # load 0x13617951 from memory into f9
fmsub.s f19, f10, f12, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x1, 0xe1fe17c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3a8cfe0 # load x3 with value 0xe3a8cfe0
sw x3, 0(x2) # store 0xe3a8cfe0 in memory
flw f12, 0(x2) # load 0xe3a8cfe0 from memory into f12
li x3, 0xae617321 # load x3 with value 0xae617321
sw x3, 0(x2) # store 0xae617321 in memory
flw f13, 0(x2) # load 0xae617321 from memory into f13
li x3, 0x52befb30 # load x3 with value 0x52befb30
sw x3, 0(x2) # store 0x52befb30 in memory
flw f22, 0(x2) # load 0x52befb30 from memory into f22
fmsub.s f1, f12, f13, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x3, 0xb057c1c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13ee62af # load x3 with value 0x13ee62af
sw x3, 0(x2) # store 0x13ee62af in memory
flw f8, 0(x2) # load 0x13ee62af from memory into f8
li x3, 0x24ebc807 # load x3 with value 0x24ebc807
sw x3, 0(x2) # store 0x24ebc807 in memory
flw f14, 0(x2) # load 0x24ebc807 from memory into f14
li x3, 0xe13c5ba4 # load x3 with value 0xe13c5ba4
sw x3, 0(x2) # store 0xe13c5ba4 in memory
flw f20, 0(x2) # load 0xe13c5ba4 from memory into f20
fmsub.s f3, f8, f14, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x24, 0x9efa61e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03d96772 # load x3 with value 0x03d96772
sw x3, 0(x2) # store 0x03d96772 in memory
flw f20, 0(x2) # load 0x03d96772 from memory into f20
li x3, 0x29fe167f # load x3 with value 0x29fe167f
sw x3, 0(x2) # store 0x29fe167f in memory
flw f15, 0(x2) # load 0x29fe167f from memory into f15
li x3, 0xe25c8f49 # load x3 with value 0xe25c8f49
sw x3, 0(x2) # store 0xe25c8f49 in memory
flw f15, 0(x2) # load 0xe25c8f49 from memory into f15
fmsub.s f24, f20, f15, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x11, 0x8e7c4573 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb112ac97 # load x3 with value 0xb112ac97
sw x3, 0(x2) # store 0xb112ac97 in memory
flw f26, 0(x2) # load 0xb112ac97 from memory into f26
li x3, 0x797e225b # load x3 with value 0x797e225b
sw x3, 0(x2) # store 0x797e225b in memory
flw f16, 0(x2) # load 0x797e225b from memory into f16
li x3, 0x326b696b # load x3 with value 0x326b696b
sw x3, 0(x2) # store 0x326b696b in memory
flw f2, 0(x2) # load 0x326b696b from memory into f2
fmsub.s f11, f26, f16, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x24, 0x3a1b3acb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3863af29 # load x3 with value 0x3863af29
sw x3, 0(x2) # store 0x3863af29 in memory
flw f22, 0(x2) # load 0x3863af29 from memory into f22
li x3, 0x2bc72c0d # load x3 with value 0x2bc72c0d
sw x3, 0(x2) # store 0x2bc72c0d in memory
flw f17, 0(x2) # load 0x2bc72c0d from memory into f17
li x3, 0x6b0720d3 # load x3 with value 0x6b0720d3
sw x3, 0(x2) # store 0x6b0720d3 in memory
flw f21, 0(x2) # load 0x6b0720d3 from memory into f21
fmsub.s f24, f22, f17, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x18, 0xb6dbdbd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6e0e9ce # load x3 with value 0xf6e0e9ce
sw x3, 0(x2) # store 0xf6e0e9ce in memory
flw f11, 0(x2) # load 0xf6e0e9ce from memory into f11
li x3, 0x3ca244c8 # load x3 with value 0x3ca244c8
sw x3, 0(x2) # store 0x3ca244c8 in memory
flw f18, 0(x2) # load 0x3ca244c8 from memory into f18
li x3, 0xed5c8c1a # load x3 with value 0xed5c8c1a
sw x3, 0(x2) # store 0xed5c8c1a in memory
flw f19, 0(x2) # load 0xed5c8c1a from memory into f19
fmsub.s f18, f11, f18, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x13, 0xf5e2ee7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2323b9da # load x3 with value 0x2323b9da
sw x3, 0(x2) # store 0x2323b9da in memory
flw f28, 0(x2) # load 0x2323b9da from memory into f28
li x3, 0x27e160a9 # load x3 with value 0x27e160a9
sw x3, 0(x2) # store 0x27e160a9 in memory
flw f19, 0(x2) # load 0x27e160a9 from memory into f19
li x3, 0xe2cb90cc # load x3 with value 0xe2cb90cc
sw x3, 0(x2) # store 0xe2cb90cc in memory
flw f24, 0(x2) # load 0xe2cb90cc from memory into f24
fmsub.s f13, f28, f19, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x13, 0x176fe316 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa6d442cf # load x3 with value 0xa6d442cf
sw x3, 0(x2) # store 0xa6d442cf in memory
flw f31, 0(x2) # load 0xa6d442cf from memory into f31
li x3, 0x95b55b32 # load x3 with value 0x95b55b32
sw x3, 0(x2) # store 0x95b55b32 in memory
flw f20, 0(x2) # load 0x95b55b32 from memory into f20
li x3, 0xb3e656c6 # load x3 with value 0xb3e656c6
sw x3, 0(x2) # store 0xb3e656c6 in memory
flw f11, 0(x2) # load 0xb3e656c6 from memory into f11
fmsub.s f13, f31, f20, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x28, 0xa76269b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeb18978e # load x3 with value 0xeb18978e
sw x3, 0(x2) # store 0xeb18978e in memory
flw f23, 0(x2) # load 0xeb18978e from memory into f23
li x3, 0x583bf07e # load x3 with value 0x583bf07e
sw x3, 0(x2) # store 0x583bf07e in memory
flw f21, 0(x2) # load 0x583bf07e from memory into f21
li x3, 0xc6c2fb8f # load x3 with value 0xc6c2fb8f
sw x3, 0(x2) # store 0xc6c2fb8f in memory
flw f18, 0(x2) # load 0xc6c2fb8f from memory into f18
fmsub.s f28, f23, f21, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x16, 0x11282052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0998f265 # load x3 with value 0x0998f265
sw x3, 0(x2) # store 0x0998f265 in memory
flw f8, 0(x2) # load 0x0998f265 from memory into f8
li x3, 0x969aafef # load x3 with value 0x969aafef
sw x3, 0(x2) # store 0x969aafef in memory
flw f22, 0(x2) # load 0x969aafef from memory into f22
li x3, 0x694656b2 # load x3 with value 0x694656b2
sw x3, 0(x2) # store 0x694656b2 in memory
flw f10, 0(x2) # load 0x694656b2 from memory into f10
fmsub.s f16, f8, f22, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x16, 0x872467a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b15fa8c # load x3 with value 0x6b15fa8c
sw x3, 0(x2) # store 0x6b15fa8c in memory
flw f20, 0(x2) # load 0x6b15fa8c from memory into f20
li x3, 0x36a6ca9e # load x3 with value 0x36a6ca9e
sw x3, 0(x2) # store 0x36a6ca9e in memory
flw f23, 0(x2) # load 0x36a6ca9e from memory into f23
li x3, 0x27d28363 # load x3 with value 0x27d28363
sw x3, 0(x2) # store 0x27d28363 in memory
flw f11, 0(x2) # load 0x27d28363 from memory into f11
fmsub.s f16, f20, f23, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x14, 0x7d93e3e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4eeac361 # load x3 with value 0x4eeac361
sw x3, 0(x2) # store 0x4eeac361 in memory
flw f3, 0(x2) # load 0x4eeac361 from memory into f3
li x3, 0x2ad8953d # load x3 with value 0x2ad8953d
sw x3, 0(x2) # store 0x2ad8953d in memory
flw f24, 0(x2) # load 0x2ad8953d from memory into f24
li x3, 0x0e6114fd # load x3 with value 0x0e6114fd
sw x3, 0(x2) # store 0x0e6114fd in memory
flw f7, 0(x2) # load 0x0e6114fd from memory into f7
fmsub.s f14, f3, f24, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x30, 0xdc508c36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd02f1c15 # load x3 with value 0xd02f1c15
sw x3, 0(x2) # store 0xd02f1c15 in memory
flw f24, 0(x2) # load 0xd02f1c15 from memory into f24
li x3, 0xcb726654 # load x3 with value 0xcb726654
sw x3, 0(x2) # store 0xcb726654 in memory
flw f25, 0(x2) # load 0xcb726654 from memory into f25
li x3, 0x3db38972 # load x3 with value 0x3db38972
sw x3, 0(x2) # store 0x3db38972 in memory
flw f28, 0(x2) # load 0x3db38972 from memory into f28
fmsub.s f30, f24, f25, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x20, 0xa26a6059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93a02528 # load x3 with value 0x93a02528
sw x3, 0(x2) # store 0x93a02528 in memory
flw f14, 0(x2) # load 0x93a02528 from memory into f14
li x3, 0x27b360f3 # load x3 with value 0x27b360f3
sw x3, 0(x2) # store 0x27b360f3 in memory
flw f26, 0(x2) # load 0x27b360f3 from memory into f26
li x3, 0x0010e8a4 # load x3 with value 0x0010e8a4
sw x3, 0(x2) # store 0x0010e8a4 in memory
flw f29, 0(x2) # load 0x0010e8a4 from memory into f29
fmsub.s f20, f14, f26, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x6, 0xcd41b02c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9909ddce # load x3 with value 0x9909ddce
sw x3, 0(x2) # store 0x9909ddce in memory
flw f15, 0(x2) # load 0x9909ddce from memory into f15
li x3, 0x656b921c # load x3 with value 0x656b921c
sw x3, 0(x2) # store 0x656b921c in memory
flw f27, 0(x2) # load 0x656b921c from memory into f27
li x3, 0x2637e4d1 # load x3 with value 0x2637e4d1
sw x3, 0(x2) # store 0x2637e4d1 in memory
flw f10, 0(x2) # load 0x2637e4d1 from memory into f10
fmsub.s f6, f15, f27, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x21, 0x401fe998 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0df0f64d # load x3 with value 0x0df0f64d
sw x3, 0(x2) # store 0x0df0f64d in memory
flw f9, 0(x2) # load 0x0df0f64d from memory into f9
li x3, 0xda712b0c # load x3 with value 0xda712b0c
sw x3, 0(x2) # store 0xda712b0c in memory
flw f28, 0(x2) # load 0xda712b0c from memory into f28
li x3, 0x3b331697 # load x3 with value 0x3b331697
sw x3, 0(x2) # store 0x3b331697 in memory
flw f12, 0(x2) # load 0x3b331697 from memory into f12
fmsub.s f21, f9, f28, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x8, 0x06baad83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaa46fd58 # load x3 with value 0xaa46fd58
sw x3, 0(x2) # store 0xaa46fd58 in memory
flw f5, 0(x2) # load 0xaa46fd58 from memory into f5
li x3, 0x1abdeccf # load x3 with value 0x1abdeccf
sw x3, 0(x2) # store 0x1abdeccf in memory
flw f29, 0(x2) # load 0x1abdeccf from memory into f29
li x3, 0xedbcf064 # load x3 with value 0xedbcf064
sw x3, 0(x2) # store 0xedbcf064 in memory
flw f15, 0(x2) # load 0xedbcf064 from memory into f15
fmsub.s f8, f5, f29, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x23, 0x91a07aa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x23958605 # load x3 with value 0x23958605
sw x3, 0(x2) # store 0x23958605 in memory
flw f1, 0(x2) # load 0x23958605 from memory into f1
li x3, 0xfd81b088 # load x3 with value 0xfd81b088
sw x3, 0(x2) # store 0xfd81b088 in memory
flw f30, 0(x2) # load 0xfd81b088 from memory into f30
li x3, 0x7f03976e # load x3 with value 0x7f03976e
sw x3, 0(x2) # store 0x7f03976e in memory
flw f15, 0(x2) # load 0x7f03976e from memory into f15
fmsub.s f23, f1, f30, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x30, 0x69b0e346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x624d50a5 # load x3 with value 0x624d50a5
sw x3, 0(x2) # store 0x624d50a5 in memory
flw f13, 0(x2) # load 0x624d50a5 from memory into f13
li x3, 0x2ce97d81 # load x3 with value 0x2ce97d81
sw x3, 0(x2) # store 0x2ce97d81 in memory
flw f31, 0(x2) # load 0x2ce97d81 from memory into f31
li x3, 0xa6a8d761 # load x3 with value 0xa6a8d761
sw x3, 0(x2) # store 0xa6a8d761 in memory
flw f29, 0(x2) # load 0xa6a8d761 from memory into f29
fmsub.s f30, f13, f31, f29 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
